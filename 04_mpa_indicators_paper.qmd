---
title: "Variability and Detectability of the Effects of Marine Protected Areas on Conservation and Food Security"
author:
  - name: Daniel Ovando
    affiliation:
      - name: Inter-American Tropical Tuna Commission
        department: Ecosystem & Bycatch Group
        id: 1
        address: 8901 La Jolla Shores Drive
        city: La Jolla
        state: CA
        postal-code: 92037
    email: dovando@iattc.org
    attributes:
      equal-contributor: true
      corresponding: true
  - name: Cori Lopazanski
    affiliation:
      - name: UC Santa Barbara
      department: Bren School of Environmental Science & Management
      id: 2
      address: 2400 Bren Hall
      city: Santa Barbara
      state: CA
      postal-code: 93106
    email: lopazanski@bren.ucsb.edu
    attributes:
      equal-contributor: false
      corresponding: false
format:
  docx: 
    reference-doc: PNASTemplateforMainManuscript.docx
  html: 
    toc: true
    self-contained-math: true
    embed-resources: true
  pdf:
    toc: true
    pdf-engine: pdflatex
  nature-pdf:
    keep-tex: true
    classoption: [lineno, referee]
    toc: true
    equal-margins: true
bibliography: references.bib
abstract: |
 Something
keywords: [MPA, Simulation Modeling, Model Selection, Conservation Planning, Food Security]
execute: 
  echo: false
  warning: false
---

xx could you do a classification tree on the accuracy of the different metrics xx

```{r}
#|label: setup
#|include: false

foos <- list.files(here::here("R"))

purrr::walk(foos, ~ source(here::here("R", .x)))

library(gt)

library(corrr)

library(ggridges)

library(ggtext)

prep_run(run_name = "indicators_v0.53",figure_text_size = 10, rx = 21, ry = 21, patch_area = 5^2) # loads packages and creates and returns some global variables for the analysis

Rcpp::sourceCpp(here("src", "select_contiguous_mpa.cpp"))

project <- "indicators"

resolution <- c(rx, ry)

mpa_years <- 20

# clean up figures generated in the report to ensure that all figures come from a fresh state
paper_figs <- file.path(fig_dir,list.files(fig_dir)[list.files(fig_dir) |> str_detect("fig_")])

unlink(paper_figs)

tune_grids <- FALSE

default_observation_error = 0

max_log_indicator <- 1.5
```

```{r}
#| label: load-results
#| include: false


results <- list.files(results_dir)

results <- results[str_detect(results,"(processed_sims.rds$)|(emulated_experiment_results.rds)|(placement_experiments.rds)|(state_experiments.rds)")]



purrr::walk(results, ~ assign(str_remove_all(.x,"\\.rds$"), read_rds(here(results_dir,.x)), envir = .GlobalEnv))

critter_namer <- function(x){
  
  y <- forcats::fct_recode(x,shark = "carcharhinus amblyrhynchos",grouper = "epinephelus fuscoguttatus",snapper = "lutjanus malabaricus", "deep-snapper" = "pristipomoides filamentosus")
  
}


###  calculate BAU the depletion per state  ###


simple <- simple_state_experiments |>
  select(state_id, depletion) |>
  unnest(cols = depletion) |>
  mutate(difficulty = "simple")

medium <- medium_state_experiments |>
  select(state_id, depletion) |>
  unnest(cols = depletion) |>
  mutate(difficulty = "medium")

complex <- complex_state_experiments |>
  select(state_id, depletion) |>
  unnest(cols = depletion) |>
  mutate(difficulty = "complex")

###  stitch difficulty levels together ###
state_depletions <- simple |>
  bind_rows(medium) |>
  bind_rows(complex) |>
  mutate(state_id = glue("{difficulty}_{state_id}"))

state_depletions |> 
  ggplot(aes(depletion)) + 
  geom_histogram() +
  facet_wrap(~critter)

simple <- simple_processed_sims$mpa_outcomes |> 
  mutate(difficulty = "simple")

medium <- medium_processed_sims$mpa_outcomes |> 
  mutate(difficulty = "medium")

complex <- complex_processed_sims$mpa_outcomes |> 
  mutate(difficulty = "complex")

# results of all marlin simulations indicators and outcomes
inds_and_outs <- simple |> 
  bind_rows(medium) |> 
  bind_rows(complex) |> 
  mutate(state_id = glue("{difficulty}_{state_id}")) |> 
  mutate(id = glue("{difficulty}-{id}")) |> 
  mutate(prop_mpa = as_factor(prop_mpa)) |> 
  mutate(difficulty = fct_relevel(difficulty,"simple", "medium")) |> 
  filter(step == max(step)) |> # only keep the "final" step, which includes BACI results
  left_join(state_depletions, by = c("critter", "state_id", "difficulty"),mosaic) |> 
  mutate(across(starts_with("ind_"),\(x) exp(pmin(max_log_indicator,x)) - 1))


# determine viable runs, based on criteria that none of total, MPA, or fished area biomass under BAU should be < 1 (helps prevent runaway percent effect results)
# 

viable_runs <- inds_and_outs |> 
  group_by(name, state_id) |> 
  summarise(min_value = min(control_value),
            min_depletion = min(depletion),
            max_effect = max(abs(percent_mpa_effect))) |> 
  ungroup() |> 
  filter(str_detect(name, "biomass|catch")) |> 
  group_by(state_id) |> 
  summarise(bad_bio = any(min_value < 1 | min_depletion < 0.025 | max_effect > 10)) |> 
  filter(!bad_bio)



inds_and_outs <-  inds_and_outs |> 
  filter(state_id %in% viable_runs$state_id)


state_depletions <- inds_and_outs |> 
  group_by(state_id, critter, difficulty) |> 
  summarise(depletion = unique(depletion)) |> 
  ungroup()

# just a quick check
hmm <- inds_and_outs |>
  group_by(name, state_id) |>
  summarise(
    min_value = min(percent_mpa_effect),
    max_value = max(percent_mpa_effect)
  )


rm(list = c("simple", "medium", "complex"))

# calculate average BAU depletion across all critters for multi-critter scenarios
total_state_depletions <- inds_and_outs |> 
  select(critter, state_id, difficulty, depletion, b0) |> 
  unique() |> 
  group_by(state_id, difficulty) |> 
  summarise(mean_depletion = weighted.mean(depletion, b0)) |> 
  ungroup()


###  facilitate outcome comparisons by pulling apart fleet and nature outcomes  ###

fleet_outcomes <- inds_and_outs |>
  select(
    depletion,
    placement_strategy,
    percent_mpa_effect,
    fleet,
    state_id,
    placement_id,
    critter,
    prop_mpa,
    name,
    f_v_m,
    difficulty,
    sigma_rec,
    observation_error
  ) |>
  filter(fleet != "nature") |>
  pivot_wider(names_from = "name", values_from = "percent_mpa_effect")

nature_outcomes <- inds_and_outs |>
  filter(fleet == "nature") |>
  select(ends_with("id"),
         critter,
         prop_mpa,
         name,
         percent_mpa_effect,
         difficulty) |>
  pivot_wider(names_from = "name", values_from = "percent_mpa_effect")

# create dataframe with outcomes as columns for ease of 1:1 comparison 
mpa_outcomes <- fleet_outcomes |>
  left_join(nature_outcomes,
            by = join_by(state_id, placement_id, critter, prop_mpa, difficulty)) |>
  mutate(numeric_prop_mpa = as.numeric(as.character(prop_mpa)))

### create a flatter comparison dataframe that has columns for outcomes and indicators ###


indicators <- inds_and_outs |>
  filter(name == "biomass") |> # only need one indicator per outcome since they are the same for all outcomes
  select(critter,
         prop_mpa,
         state_id,
         placement_id,
         difficulty,
         prop_mpa,
         observation_error,
         starts_with("ind")) |>
  pivot_longer(starts_with("ind_"),
               names_to = "indicator",
               values_to = "indicator_value") |>
  filter(!is.na(indicator_value),
         !str_detect(indicator, "_raw"))
  # this is very important: only use models that control for B0, as proxy for knowing habitat quality

outcomes <- inds_and_outs |>
  select(
    state_id,
    placement_id,
    mosaic,
    critter,
    fleet,
    prop_mpa,
    difficulty,
    percent_mpa_effect,
    observation_error,
    name) |> 
  filter(name %in% c("biomass", "mpa_biomass", "catch", "fished_biomass"))

# figure out outcomes by  quadrant instead of by absolute percent effect
quadrant_outcomes <- fleet_outcomes |>
  select(state_id, prop_mpa, placement_id, critter, fleet, difficulty, catch) |>
  left_join(nature_outcomes |> select(state_id, prop_mpa, placement_id, critter, biomass, difficulty),by = join_by(state_id, prop_mpa, placement_id, critter, difficulty)) |>
  pivot_longer(c(catch,biomass)) |>
  mutate(tag = paste(
    name,
    case_when(value > 0.025 ~ "positive", value < -0.025 ~ "negative", .default = "negligible"),
    sep = ":"
  )) |>
  select(-value) |>
  pivot_wider(names_from = name, values_from = tag) |>
  mutate(quadrant = paste(catch, biomass, sep = " & ")) |>
  left_join(
    inds_and_outs |>
  select(critter,
         prop_mpa,
         state_id,
         placement_id,
         difficulty,
         prop_mpa,
         observation_error,
         starts_with("ind")),
    by = c(
      "critter",
      "state_id",
      "placement_id",
      "prop_mpa",
      "difficulty"
    ),
    relationship = "many-to-many"
  )


comparison <- outcomes |>
  left_join(
    indicators,
    by = c(
      "critter",
      "state_id",
      "placement_id",
      "prop_mpa",
      "difficulty",
      "observation_error"
    ),
    relationship = "many-to-many"
  ) |>
  mutate(prop_mpa = as.numeric(as.character(prop_mpa)))


### repeat but for total outcomes instead of individual species and fleets ###

simple <- simple_total_processed_sims$mpa_outcomes |> 
  mutate(difficulty = "simple")

medium <- medium_total_processed_sims$mpa_outcomes |> 
  mutate(difficulty = "medium")

complex <- complex_total_processed_sims$mpa_outcomes |> 
  mutate(difficulty = "complex")

mean_depletions <- state_depletions |> 
  group_by(state_id, difficulty) |> 
  summarise(depletion = mean(depletion))
  

total_inds_and_outs <- simple |> 
  bind_rows(medium) |> 
  bind_rows(complex) |> 
  mutate(state_id = glue("{difficulty}_{state_id}")) |> 
  mutate(id = glue("{difficulty}-{id}")) |> 
  mutate(prop_mpa = as_factor(prop_mpa)) |> 
  mutate(difficulty = fct_relevel(difficulty,"simple", "medium")) |> 
  filter(step == max(step)) |> 
  left_join(mean_depletions, by = c( "state_id", "difficulty")) |> 
  mutate(numeric_prop_mpa = as.numeric(as.character(prop_mpa))) |> 
  filter(state_id %in% viable_runs$state_id)



total_outcomes <- total_inds_and_outs |>
  select(
    state_id,
    placement_id,
    critter,
    fleet,
    prop_mpa,
    difficulty,
    percent_mpa_effect,
    observation_error,
    name) |> 
  filter(name %in% c("biomass", "mpa_biomass", "catch","fished_biomass"))


total_indicators <- total_inds_and_outs |>
  filter(name == "biomass") |> 
  select(
    critter,
    prop_mpa,
    state_id,
    placement_id,
    difficulty,
    prop_mpa,
    observation_error,
    starts_with("ind")
  ) |>
  pivot_longer(starts_with("ind_"),
               names_to = "indicator",
               values_to = "indicator_value") |>
  filter(!is.na(indicator_value), !str_detect(indicator, "_raw"))


total_comparison <- total_outcomes |>
  left_join(
    total_indicators,
    by = c(
      "critter",
      "state_id",
      "placement_id",
      "prop_mpa",
      "difficulty",
      "observation_error"
    ),
    relationship = "many-to-many"
  ) |>
  mutate(prop_mpa = as.numeric(as.character(prop_mpa))) |> 
  left_join(total_state_depletions,by = join_by(state_id, difficulty))

total_mpa_outcomes <- total_inds_and_outs |>
  select(state_id, placement_id,placement_strategy, prop_mpa, difficulty, name, observation_error, depletion,percent_mpa_effect) |> 
  pivot_wider(names_from = name, values_from = percent_mpa_effect) |>
  ungroup() |>
  mutate(numeric_prop_mpa = as.numeric(as.character(prop_mpa)))


```

## Abstract (350 words max)

Marine protected areas (MPAs) are spatial management tools implemented to achieve a wide range of conservation and social objectives, from biodiversity protection to food security and climate resilience. As these objectives are often difficult to measure directly, empirical MPA evaluations often rely on simplified indicators – such as response ratios or gradients in biomass or catch – as proxies for broader performance outcomes. However, in complex social-ecological systems, even well-measured indicators may fail to reflect true causal effects. Using a simulation framework, we explore variability in MPA outcomes and assess whether common empirical indicators reliably track intended outcomes across a range of scenarios. We find that… xx \[add detail about results…\] xx. These findings… xx \[add detail about implications\] xx

## Introduction

xx I slashed a lot of the intro (original is pasted in scraps at the end). It's short - I imagined you might have detail you want to bring in, and it is still missing context for the "are MPA effects variable enough to warrant monitoring" question. My original thought was to weave in the consistency or lack thereof from existing evaluations, perhaps as an extra paragraph between P2 and P3. But that seemed to get off track from the main "evaluations rely on simpler indicators as proxies" argument, so I am pausing here in case you have ideas. xx

Various forms of spatial management have been used to conserve and manage marine ecosystems across cultures throughout human history [e.g. @Johannes2002]. The 1990s marked a period of expanded interest in both the science and use of spatial management tools, specifically the general concept of "marine protected areas" (MPAs) [@carr2019; @humphreys2020]. MPAs are areas of the ocean where human activities are restricted or prohibited to promote biodiversity conservation and achieve other complementary objectives [@grorud-colvert2021]. These objectives include preserving cultural heritage, rebuilding populations inside borders, providing conservation benefits outside borders, and supporting fisheries in surrounding waters [@gaines2010]. In pursuit of these goals, international movements such as the Montreal–Kunming Global Biodiversity Framework's call for protection of 30% of the oceans, and the Agreement under the United Nations Convention on the Law of the Sea on the Conservation and Sustainable Use of Marine Biological Diversity of Areas Beyond National Jurisdiction (the High Seas Treaty or BBNJ) have provided substantial momentum for the expanded use of MPAs in the world's oceans.

Over 9% of the ocean is now covered by MPAs (as of June 2025; xx REF WDPA xx), and the global expansion of MPAs has been matched by growing efforts to empirically evaluate their performance. Since many of the benefits that MPAs are expected to deliver are difficult to measure directly, evaluations often rely on simpler indicators as proxies for broader outcomes. These approaches enable assessments to be carried out across diverse contexts, and have become a foundational tool for understanding MPA effects in both scientific and policy settings. Many empirical assessments compare attributes within MPAs to nearby unprotected areas (i.e., response ratos; [@smith2024b; @lester2009] xx add REFs xx), or from unprotected areas that are near to MPA borders compared to farther away (i.e., gradients; xx add REFs xx). More robust approaches incorporate measurements both before and after MPA implementation (i.e., before-after-control-impact or BACI; xx add REFs xx), or incorporate spatial replication or additional controls to reduce confounding bias associated with establishing effects from observational data [@ferraro2018; @larsen2019; @byrnes2025].

While these indicators differ in their complexity, each is designed to determine the effect of the MPA on a particular observed outcome: higher biomass in MPAs compared to unprotected areas is documented as conservation gains within MPA borders [@smith2024b; @lester2009], while gradients in fisheries catch or effort signal evidence of spillover from the MPA, where the movement of larvae or post-recruit animals lead to increases in surrounding waters [@halpern2009; @medoff2022; @lynham2024; @roberts2001]. However, these results are sometimes then assumed to imply evidence for an unobserved outcome, such as changes in total population size or total fisheries catch. The assumption that specific indicators can stand in for broader ecological or social objectives is rarely tested directly, despite their widespread use. Some indicators may align closely with intended outcomes under certain conditions, while others may fail to capture relevant dynamics or produce misleading results. Understanding the reliability of indicators, and the variability of the underlying outcomes they aim to measure, is critical for interpreting existing evaluations, designing effective monitoring strategies, and making evidence-informed policy decisions.

As we expand MPA usage globally, establishing expectations around potential MPA effects and accurately measuring their performance are essential to tracking progress in both area protected and outcomes achieved. To that end, this paper addresses two questions to evaluate the state of empirical evidence for MPA effects. We first ask *How variable can MPA effects be?* to consider whether the effects of MPA on selected objectives are likely to be variable enough to justify the need for empirical monitoring. We then ask *How well can MPA effects be measured?*, in which we test the ability of several commonly used empirical indicators to measure the effect of MPAs on a key conservation and fishery outcomes. We show that MPAs can have highly variable effects on conservation and food security depending on the specific dynamics of the system in question, and that while some indicators perform well for some objectives, many do not.

## Methods

xx The headings in this first section part were not particularly helpful. Perhaps 'Simulation framework' for the first half, with "Overview of marlin model", "Species and fishing fleets" (or something that ties back into "parameters for the bio-economic system"), and "Simulated MPA experiment" as subheadings?? xx

xx Do you want methods in present tense or past tense? Lots of switching currently so want to flag since I know this is the rough cut xx

### Simulating MPA Outcomes and Indicators

xx I see this first paragraph as an overview of marlin, that tells us what the model does and what the user can specify/the flexibility that's allowed. Then we go into what we actually specified - the four species with their fixed vs. variable parameters, and the decisions about the number of age-structured populations (combinations of those species archetypes??) and the number of fishing fleets. I suggest moving this simulation structure (the numbered list in this section) after both of those pieces are introduced, to say "now that we've described how the parameters and simulation system is structured, here's how our experiment will work". xx

Simulated MPA outcomes were generated by the `marlin` model presented in @ovando2023a and @ovando2025. `marlin` simulates a user-specified number of age-structured fish populations fished by a user-specified number of fishing fleets, all operating in a two-dimensional space. This spatial domain represents the surface area of the seascape, broken up into a series of "patches", each with a defined spatial area. For this paper, we modeled a 22 x 22 grid of discrete patches (484 total), where each patch measured 25KM^2^ (5 km x 5km). xx I revised the last two sentences - still look right? xx

Within the marlin framework, users can vary a wide range of bio-economic parameters, ranging from recruitment dynamics and habitat correlations of fished species to gear selectivity and fishing fleet dynamics. Users can also specify management actions, such as adding fully protected MPAs. The general structure for any one simulation is as follows:

1.  Select a set of parameters for the simulated bio-economic system.

2.  Simulate the system forward in time without an MPA.

3.  Simulate the same system forward in time from the same starting conditions but now with a desired number of patches protected in a no-take MPA.

4.  Calculate indicators of MPA performance based on the with-MPA scenario.

5.  Calculate the true outcomes of the MPA by comparing values (e.g. total biomass and catch) per species and per fleet in the simulation with MPAs versus the paired simulation without MPAs

6.  Compare the indicator values from a given simulation to the true outcomes of that simulation

#### Simulating MPA Effects

xx The 'species template' language was confusing to me - it seems simpler that for each simulation there are species parameters that are fixed and species parameters that are variable. I'd rather see those in one table or across two tables (one fixed, one variable; or in a single table with fixed at the top and variable underneath). New table with a row for each fixed parameter and four columns for each archetype. I made a few wording changes in the next paragraph, but think if we go the table route could drop the description of the steepness and movement values from the text, especially since we don't state the values for the other fixed parameters. There is a lot of explanation included for steepness and movement that doesn't feel necessary (so the table might help). Otherwise, I'd suggest keeping the archetype descriptors consistently general (e.g. remove "yellowfin" and "silky"). xx

To explore MPA outcomes and indicators across a range of species, we modeled four different species archetypes selected to reflect a range of life histories. These simulated species were broadly based on a tuna (*Thunnus albacares*), shark (*Carcharhinus falciformis*), grouper (*Epinephelus fuscoguttatus*), and reef fish (*Seriola quinqueradiata*)*.* Core growth, maturity, and mortality parameters were fixed based on available literature for these species (see SI for details). The steepness *h* of the Beverton-Holt stock-recruitment [@mace1988] controls the rate at which recruitment changes as a function of spawning stock biomass, and is generally poorly understood. The lower the value of *h*, the more recruitment responds to declines in spawning biomass. We fixed steepness to reflect a range of spawner-recruit relationships from yellowfin tuna *h = 0.9*, silky sharks *h=0.3,* grouper *h = 0.6,* and reef fish *h = 0.8*. We fixed movement rates of recruits and post-recruit fish such that 95% of animals were within a given linear distance of their point of origin after one year. These distances reflect low (2.5km), medium (25km), or high (250km) dispersal distances: 250KM for both recruits and post-recruits for yellowfin tuna (high dispersal at all life stages), 250KM and 2.5KM for silky sharks (high adult dispersal, low recruit dispersal), low and high for grouper (2.5KM and 250KM), and medium and medium (25KM and 25KM) for reef fish. These values are intended to reflect a range of movement archetypes loosely related to the life history of the species in question rather than specific known dispersal distances. Remaining bio-economic parameters beyond these core fixed values were randomly selected for each simulation, see @tbl-states.

xx For this next paragraph: 1) You mention the common way is one population, one fleet. I was looking for a bit more context about why it's useful to examine added complexity. Maybe follow that up with something like, "however, MPAs generally contain multiple species that are often targeted by multiple fishing fleets. to explore how that complexity contributes to the variation in MPA outcomes, we....". 2) Not sure how, but could we link this back to the marlin intro to highlight that "this is where us, the user, is picking the number of populations and number of fleets"? 3) I'm getting lost in the language ("states" vs "simulated states" vs "simulated species" vs. "scenarios"). The first sentence especially is unclear. What about, "The four species archetypes are used in three different bio-economic systems that vary in their complexity" ?? Then, "the simple system", "the medium system", etc. That way it's clear that this is the Step #1 that goes into the MPA experiment (which is called "MPA scenario" and "non-MPA scenario")? I'm not stuck on any particular word choice if different terms are better, just looking for consistency. xx

These states are organized into three different "complexities" of states. The *simple* state is single-species single-fleet, and corresponds to the most common way of modeling the impacts of an MPA on one fish population and one fishing fleet [e.g. @hopf2024]. The *medium* state is multi-species single-fleet, where all four species exist in the same seascape and are impacted simultaneously by a single fishing fleet. The *medium* scenario allows different species to have positive or negatively correlated spatial distributions and variable vulnerability to the fishing fleet. The *complex* scenario is multi-species and multi-fleet. This scenario now allows for two different fishing fleets that catch the four species, potentially with differing selectivity curves and degree of fishing pressure xx potentially, meaning depending on what? xx. The *complex* scenario allows for dynamics such as a given species being a target species for one fleet but a bycatch species for another.

::: {#tbl-states}
| Name | Description |
|------------------------------------|------------------------------------|
| Uniform Habitat | Sets habitat equal in all patches for all species |
| MPA response | Dictates whether effort that used to fish inside MPAs "stays" and is redistributed in non-MPA patches or "leaves" the fishery |
| Habitat patchiness ($\kappa$) | Low values create smooth habitat, higher values patchy habitat |
| Max absolute correlation | Scales the maximum absolute correlation between species |
| Spatial catchability | Whether catchability of the fishing fleets varies in space |
| Spatial fleet allocation | How the fleet distributes itself in space, one of revenue, profit per unit effort, and revenue per unit effort |
| Seasonal movement | Whether habitat flips in one half of the year to another |
| Spawning aggregation | Whether spawning occurs in a concentrated location |
| Fishing vs. Natural mortality | Ratio of instantaneous fishing mortality rate relative to natural mortality. The higher this is, the lower $B_{bau}/B_0$ will be. |
| Density dependence | The timing of density dependence, one of "global_habitat", "local_habitat", "pre_dispersal", "post_dispersal". |
| Ontogenetic shift | Whether recruitment habitat is the inverse of adult habitat |
| Use ports? | Whether or not to assign ports to individual fleets that alter cost per unit effort in patches |
| Selectivity at age | Selectivity at age, set separately for every *métier* |
| Selectivity form | one of uniform, logistic, or double-normal, set separately for every *métier* |
| Price per unit weight | Price per unit weight for every *métier* |
| Recruitment Variation | Coefficient of variation of log-normal recruitment deviates |
| Recruitment autocorrelation | Degree of autocorrelation in recruit deviates |
| Cross-Species Recruitment Correlations | Level of correlation in recruitment deviates across each pair of species |

Variables that define a given simulation state. See accompanying code at <https://doi.org/10.5281/zenodo.14503624> XX for details of individual distributions.
:::

xx This is where I think the numbered steps ("general structure for each simulation") would fit nicely. Then each of the details below can be organized within those steps. xx

xx This paragraph would also benefit from some streamlined terminology like the last paragraph. It also uses the word 'simulated' a lot where it feels unnecessary (it's all simulated, right?). xx

xx Are the various "MPA scenarios" (size by placement strategy) all encompassed within experiment Step #3 above? Or at that point does each "MPA scenario" become a different simulation run? xx

xx Add the range of MPA sizes here? xx

Each simulated state is then run through an MPA experiment, where all state variables are identical except for the application of an MPA. For states that allow for stochasticity in recruitment values, we pre-calculate the vector of recruitment deviates per species and time step and use the same vector for both the with- and without-MPA simulations. The simulated MPAs were given twenty years to act. Each simulated bio-economic state is run through a range of MPA scenarios, which are a factorial combination of MPA size (represented as the percent of the surface area of the seascape covered in a fully protected – i.e., no-take – MPA) and the placement strategy of the MPA (*Avoid Fishing* or *Target Fishing*). Under the *Target Fishing* strategy, patches are placed in an MPA in descending order of total biomass caught, under the *Avoid Fishing* strategy, patches are placed in an MPA in ascending order of total biomass caught. In reality, MPAs can be individual entities or part of a network [@gaines2010]. This can be simulated by constraining MPAs to be contiguous (all simulated MPA patches are connected) or as a mosaic (multiple clusters of MPA patches can be separated by fished areas) [@pons2022a]. All results presented here use a mosaic strategy; we tested the sensitivity of our results to using contiguous MPAs and found no meaningful impacts, so omitted those runs to reduce computational overhead.

We simulated MPA effects after twenty years of protection on four outcomes:

1.  Total biomass per species inside MPA borders (*Biomass Inside*)
2.  Total biomass per species outside MPA borders (*Biomass Outside*)
3.  Total biomass per species (*Total Biomass*)
4.  Total catch per species and fleet (*Catch*)
5.  xx Mean length xx

The true effect of the simulated MPAs on each of these metrics was calculated by comparing the percentage difference in the relevant value in the simulation with the MPA relative to the paired simulation without the MPA. An MPA effect value of say 20% means that the metric in question is 20% higher in the simulation with the MPA than the same metric in the paired simulation without the MPA.

### Empirical Indicators

The simulation framework estimates the true simulated causal effect of a given MPA on the bio-economic system. We compared these true outcomes with common empirical indicators of MPA performance. To isolate the fundamental performance of the indicator from questions around data quality and bias, all indicators were calculated using the simulated data without any observation error.

The evaluated indicators varied in terms of their dependent variable, treatment and control units, and presence of before-after observations. The three dependent variables we included were biomass density (*Biomass*), *Mean Length*, and fishing *Effort*. The two treatment and control units evaluated were *Inside vs. Outside* and *Near vs. Far*. These indicator components were then combined to produce common empirical indicators. For example, a *Biomass Density Response Ratio* [e.g. @lester2009] is modeled using *Biomass* as the dependent variable, *Inside vs. Outside* as the treatment and control units, and only using post-MPA data. Those components are converted into a *Biomass Density Before-After-Control-Impact (BACI)* by adding in data from both before and after MPA implementation. Similarly, that BACI analysis can be modified such that treatment and control units are the *Near vs Far* gradient outside the MPA border, in the manner of @medoff2022, creating a *Biomass Density Gradient BACI*. @tbl-indicators shows the stylized equations and description of each of the included indicators.

All models presented in the main body of the paper are fit at the resolution of species, patch, and time step, with the added dimension of fleet for the *complex* scenarios where more than one fleet is present. Given that all indicators are fit to positive continuous data, we assume a log-normal distribution for all models, meaning that the coefficients estimated by the models described in @tbl-indicators represent multiplicative effects, which can be translated into percentage effects as $100 \times (e^{\beta_{MPA}} - 1)$, where $\beta_{MPA}$ is the coefficient interpreted as being the effect of the MPA in the indicator in question. Real-world applications should consider alternative error distributions as appropriate. For the main results presented in this paper, all models presented in @tbl-indicators are fit at the level of individual species (or individual species and fleets when the dependent variable is catch). Our results were insensitive to using the total change in biomass or catch across all species (see Fig.SXX).

For *Inside vs. Outside* comparisons, the selection of the *Outside* site is not always straightforward. Comparing biomass densities on a rocky reef inside an MPA to biomass densities on the sandy flats outside the MPA might produce misleading results xx (REFs) xx. As such, *Inside vs. Outside* style studies often use fished "reference sites" selected to better match the habitat characteristics of the MPAs under evaluation [@smith2024b]. Since the simulation model used here allows for habitats to be heterogeneous and for MPAs to be preferentially placed on specific habitats, we approximate this "reference site" selection process by controlling for the total unfished biomass per patch of the species in question in each of the models presented in @tbl-indicators. We also calculated the absolute distance of each patch from the nearest MPA border, and weighted the regressions by this distance, resulting in the models being weighted towards comparing the patches deepest inside the MPA against those farthest outside the MPA.

*Gradient* style analyses that compare metrics outside of MPAs along a gradient of *Near* *vs Far* from MPA borders require a decision on the functional form of the the gradient and defined distances for *Near* and *Far*. @halpern2009 explore a range of functional forms, settling on a logistic function to model the change in fish density as a function of distance from the MPA border. @medoff2022 and @lynham2024 bin areas into *Near* and *Far* categories, with a range of definitions of what constitutes *Near* and *Far*. We followed the general pattern of @medoff2022 and @lynham2024 of approximating a gradient analysis by comparing metrics in patches assigned to as *Near* the MPA versus those assigned as *Far* from the MPA. To make this assignment we calculated the linear distance of each patch from the nearest MPA border, and assigned patches in the bottom 20th percentile of distance as *Near* and those in the top 80th percentile of distance as *Far*. As with the *Inside vs. Outside* style analyses, we also control for unfished biomass per species per patch.

Fitting a model requires a sample size. We assume that the variables in question are measured without error at the resolution of spatial patch *p* and time step *t*. xx The spatial resolution of the system is 21 by 21 patches, meaning that any given time step has 441 patches. For models fit to a single time step then (e.g. *Biomass Density Response Ratio*), N = 441. For models fit to multiple time steps of before and after, (e.g. *Biomass Density BACI*), N = 882. xx flagging for consistency - earlier said 22x22 xx

| Indicator | Group | Equation | Estimated Effect | Key Assumptions\* | Example Citations |
|------------|------------|------------|------------|------------|------------|
| Biomass Density Before-After -Control-Impact | Inside vs. Outside | $log(B_{p,t})\sim\beta_0 + \beta_1INSIDE_p + \beta_2AFTER_t +\pmb{\beta_3}INSIDE_p \times AFTER_t$ | Ratio of change in B after MPA implementation inside MPA relative to outside MPA | Parallel trends in biomass density inside and outside MPA pre- and post-implementation. | @lester2009 |
| Biomass Density Response Ratio | Inside vs. Outside | $log(B_p) \sim \beta_0 + \pmb{\beta_1}INSIDE_p$ | Post-MPA Ratio of biomass inside MPA relative to outside MPA | No pre-existing differences in *B* between inside and outside sites | @smith2024b |
| Mean Length Response Ratio | Inside vs. Outside | $log(ML_p) \sim \beta_0 + \pmb{\beta_1}INSIDE_p$ | Post-MPA ratio of mean length inside MPA relative to outside MPA | No pre-existing differences in *ML* between inside and outside sites | @halpern2003 |
| Effort Gradient | Near vs. Far | $log(E_p) \sim \beta_0 + \pmb{\beta_1}NEAR_p$ | Post-MPA ratio of fishing effort NEAR MPA relative to FAR | No pre-existing differences in *E* between NEAR and FAR sites | @goni2008 |
| Biomass Density Gradient | Near vs. Far | $log(B_p) \sim \beta_0 + \pmb{\beta_1}NEAR_p$ | Post-MPA ratio of biomass density NEAR MPA relative to FAR | No pre-existing differences in *B* between NEAR and FAR sites | @halpern2009 |
| Biomass Density Before-After Gradient | Near vs. Far | $log(B_{p,t})\sim\beta_0 + \beta_1NEAR_p + \beta_2AFTER_t +\pmb{\beta_3}NEAR_p \times AFTER_t$ | Ratio of change in B after MPA implementation near to MPA relative to far from MPA |  | @methratta2020 @lynham2024 @medoff2022 |

: BACI stands for before-after control-impact {#tbl-indicators}

We do not report uncertainty of estimates, as our primary objective is to evaluate relative performance across indicators rather than to make statistical inferences. While empirical indicators are often evaluated against statistical significance thresholds (e.g. p \< 0.05), such values are not presented here. Given that this is a simulation-based analysis with arbitrarily defined sample sizes, conventional statistical significance testing is not meaningful in this context [@white2014]. Similarly, we do not account for statistical complexities such as spatio-temporal clustering [@thorson2024a] or zero-inflation [@zuur2009]. Applied use of empirical indicators would need to be tailored to the local context, following best practices in modeling and causal inference based on observational data from social-ecological systems.

### Comparing MPA Outcomes and Indicators

We created factorial comparisons of each indicator with each outcome for each of our simulated states. We used several methods to measure the ability of each indicator to reflect each MPA outcome. We measured the correlation between each indicator and each outcome using Spearman's rank correlations ($\rho$), given the potential for highly different scales between the indicator and the outcomes and the potential for non-linear relationships between the indicator and the outcomes. We converted these ρ values into psuedo-R^2^ values (ρ^2^) that reflect the proportion of the rank-order variance in the outcome that is explained by the indicator. These Spearman's rank correlation values provide a general sense of the extent to which a higher indicator value at one MPA and a lower indicator value at another MPA corresponds to a relatively higher outcome value at the first MPA and a relatively lower outcome value at the second MPA.

xx Make sure edits to next paragraph look right xx

To assess how accurately each indicator reflected the true outcome, we calculated the root mean squared error (RMSE) and the mean error (Bias) for each indicator-outcome pair. These metrics are expressed in percentage points, not perfent differences. For example, a Bias of -20 means that the indicator underestimated the true outcome by an average of 20 percentage points (e.g., estimating 30% when the true value is 50%), not that it was 20% lower. Similarly an RMSE of 20 percentage points indicates typical deviations of about +/- 20 percentage points, not that the error was within 20% of the true outcome.

To provide a link to empirical data, we used data on response ratios from a network of MPAs along the coast of California, USA, reported in @smith2024b. We matched our paired simulated response ratios and associated MPA outcomes to these empirical response ratios, and then plotted the response ratios against the true MPA outcomes and calculated $\rho$ and $\rho^2$ values for this subset of response ratio values. These results provide a sense of what range simulated outcomes could be associated with the distribution of response ratios measured in the California MPAs studied in @smith2024b.

### Reproducing Results

All code needed to fully reproduce the results and manuscript are publicly available at XX.

## Results

### Case Study

```{r}
#| label: case-study
#| eval: true

# set.seed(1234321)
set.seed(422595)

difficulties <- c("complex")
n_states <- 1
difficulty_species <- list(
  complex =    c("reef_fish",
    "shark",
    "tuna",
    "grouper")
)

difficulty <- "complex"

baseline_state_experiments <-
  tibble(
    kiss = sample(c(FALSE), n_states, replace = TRUE),
    mpa_response = sample(c("stay"), n_states, replace = TRUE),
    habitat_patchiness = runif(n_states, 1e-3, .01),
    max_abs_cor = runif(n_states, 1e-3, .9),
    spatial_q = sample(
      c(FALSE, FALSE),
      n_states,
      replace = TRUE,
      prob = c(1, 3)
    ),
    spatial_allocation = sample(c("ppue", "rpue", "revenue"), n_states, replace = TRUE),
    fleet_model = sample(c("open_access"), n_states, replace = TRUE)
  ) %>%
  mutate(state_id = 1:nrow(.))

port_locations <-
  tibble(x = c(1, resolution[1]), y = c(1, resolution[2])) # coordinates to test impact of highly disparate ports


critters <-
  tibble(scientific_name = difficulty_species[[difficulty]])
message("creating habitats")

state_experiments <- baseline_state_experiments %>%
  mutate(
    habitats = future_pmap(
      list(kp = habitat_patchiness, max_abs_cor = max_abs_cor),
      sim_habitat,
      critters = critters$scientific_name,
      resolution = resolution,
      patch_area = patch_area,
      .progress = TRUE,
      .options = furrr_options(seed = TRUE)
    )
  ) %>%
  mutate(critter_correlations = map(habitats, ~ process_correlations(.x$critter_correlations))) |>
  unnest(cols = critter_correlations) |>
  mutate(habitats = map(
    habitats,
    ~ .x$critter_distributions  |> select(-patch) |> group_by(critter) |> nest(.key = "habitat")
  )) |>
  unnest(cols = habitats) %>%
  ungroup() |>
  mutate(
    seasonal_movement = sample(c(FALSE, TRUE), length(state_id), replace = TRUE),
    spawning_aggregation = sample(c(TRUE, FALSE), length(state_id), replace = TRUE),
    spawning_season = sample(1:seasons, length(state_id), replace = TRUE),
    f_v_m = c(0.1,0.1,0.15,0.05),
    hyperallometry = sample(c(1, 2), length(state_id), replace = TRUE),
    sigma_rec = sample(c(0.666), length(state_id), replace = TRUE),
    density_dependence = sample(
      c(
        "global_habitat",
        "local_habitat",
        "pre_dispersal",
        "post_dispersal"
      ),
      length(state_id),
      replace = TRUE
    )
  ) %>%
  mutate(
    spawning_season = ifelse(spawning_aggregation, NA, NA),
    ontogenetic_shift = sample(c(TRUE, FALSE), length(state_id), replace = TRUE)
  ) |>
  mutate(ontogenetic_shift = ifelse(kiss, FALSE, ontogenetic_shift)) |>
  mutate(density_dependence = ifelse(ontogenetic_shift, "local_habitat", density_dependence))


  b0s <- tibble(critter = c("reef_fish", "shark", "tuna", "grouper"), b0 = c(3e6,1e6,6e6,3e6))

 #   b0s <- tibble(critter = c("reef_fish", "shark", "tuna", "grouper"), b0 = c(3e6,3e6,3e6,3e6))
  
  state_experiments <- state_experiments |> 
    left_join(b0s, by = "critter")

message("finished habitats")


# state_experiments$b0 <- c(1000,1000,1000,1000)
message("creating critters")

state_experiments <- state_experiments %>%
  rename(scientific_name = critter) |>
  mutate(
    critter = future_pmap(
      list(
        critter_name = scientific_name,
        habitat = habitat,
        seasonal_movement = seasonal_movement,
        spawning_aggregation = spawning_aggregation,
        spawning_season = spawning_season,
        f_v_m = f_v_m,
        density_dependence = density_dependence,
        hyper = hyperallometry,
        ontogenetic_shift = ontogenetic_shift,
        kiss = kiss,
        sigma_rec = sigma_rec,
        b0 = b0
      ),
      create_experiment_critters,
      resolution = resolution,
      seasons = seasons,
      .progress = TRUE,
      .options = furrr_options(seed = TRUE)
    )
  )

message("finished critters")


 # function to randomize selectivity parameters
  selfoo <- function(x,i){
    out <-   list(
      sel_start = runif(i, .05, 2),
      # proportion of length 50% mature at 50% selectivity
      sel_delta = runif(i, 1e-3, .25),
      # offset for 95% selectivity
      sel05_anchor = runif(i, 0, 0.9),
      sel_at_linf = runif(i, 0, 1)
    )
    
    out$sel05_anchor <- out$sel05_anchor * out$sel_start # must be smaller than length at 50% selectivity
    
    return(out)
    
  }
  state_experiments <- state_experiments %>%
    group_by(state_id) %>%
    nest() %>%
    mutate(
      fauna = map(data, ~ .x$critter %>% set_names(.x$scientific_name)),
      sels = map(fauna, ~ map2(1:2, length(.x), selfoo)),
      sel_form = map(fauna, ~ map2(1:2,length(.x), ~sample(c("uniform","logistic","double_normal"), .y, replace = TRUE))),
      prices = map(fauna, ~ map2(1:2, length(.x),~runif(.y, 1, 10))),
      use_ports = map(fauna,~sample(c(TRUE,FALSE), 2, replace = TRUE))
    ) |> 
    ungroup()
  # state_experiments$fauna[[1]]$`lutjanus malabaricus`$diffusion_foundation[[1]] |> image()
  
  # state_experiments$fauna[[1]]$`lutjanus malabaricus`$movement_matrix[[1]] |> image()
  
  # state_experiments$fauna[[1]][[4]]$b0
  # stop()
  state_experiments <- state_experiments %>%
    mutate(
      fleet = pmap(
        list(
          fauna = fauna,
          state = data,
          sels = sels,
          sel_form = sel_form,
          prices = prices,
          use_ports = use_ports
        ),
        create_fleets,
        difficulty = difficulty,
        port_locations = port_locations,
        resolution = resolution,
        .progress = "making fleets"
      )
    )

      # prepare recruitment deviate generator
    state_experiments <- state_experiments |>
      mutate(
        max_abs_cor_rec = sample(c(0, 0.6), n(), replace = TRUE),
        rec_dev_cov_and_cor = map2(fauna, max_abs_cor_rec, create_rec_dev_cov_and_cor)
      )
    
  
# add in starting conditions
init_condit <- function(fauna, fleets, rec_dev_cov_and_cor, years = 125) {
  starting_trajectory <-
    simmar(fauna = fauna,
           fleets = fleets,
           years = years,
           cor_rec = rec_dev_cov_and_cor$cor)
  
  # plot_marlin(check)
  
  starting_conditions <-
    starting_trajectory[(length(starting_trajectory) - seasons + 1):length(starting_trajectory)]
  # starting_trajectory[1:length(starting_trajectory)]
  
  proc_starting_conditions <-
    process_marlin(starting_conditions, keep_age = FALSE)
  
  out <- list(starting_conditions = starting_conditions,
              proc_starting_conditions = proc_starting_conditions)
  
}

message(glue::glue("simulating initial {difficulty} conditions"))
state_experiments <- state_experiments %>%
  mutate(tmp = future_pmap(
    list(fauna = fauna,
         fleet = fleet,
         rec_dev_cov_and_cor = rec_dev_cov_and_cor),
    init_condit,
    .progress = TRUE,
    .options = furrr_options(seed = TRUE)
  ))
message(glue::glue("finished simulating initial {difficulty} conditions"))

state_experiments$starting_conditions <-
  map(state_experiments$tmp, "starting_conditions")

state_experiments$proc_starting_conditions <-
  map(state_experiments$tmp, "proc_starting_conditions")

state_experiments <- state_experiments %>%
  select(-tmp)

cs_state_depletions <-
  map_df(state_experiments$starting_conditions,
         ~ map_df(.x, ~ map_df(.x, ~ sum(.x$ssb_p_a) / .x$ssb0)),
         .id = "state_id") |>
  pivot_longer(-state_id, names_to = "critter", values_to = "step_depletion") |>
  group_by(state_id, critter) |>
  summarise(depletion = mean(step_depletion)) |>
  mutate(state_id = as.integer(state_id))

state_experiments <- state_experiments |>
  left_join(cs_state_depletions |> group_by(state_id) |> nest(.key = "depletion"),
            by = "state_id")


state_experiments <- state_experiments |> 
  mutate(log_rec_devs = map2(fauna, rec_dev_cov_and_cor, generate_rec_devs, years = mpa_years))

# generate placement experiments

placement_experiments <- expand_grid(
  placement_strategy = c("target_fishing"),
  prop_mpa = c(0,0.3),
  mosaic = TRUE,
  critters_considered = seq(
    length(state_experiments$fauna[[1]]),
    length(state_experiments$fauna[[1]]),
    by = 1
  ),
  placement_error = c(0)
) %>%
  group_by_at(colnames(.)[!colnames(.) %in% c("temp", "prop_mpa")]) %>%
  nest() %>%
  ungroup() %>%
  mutate(placement_id = 1:n(),
         sigh = vector(mode = "list", length = n())) %>%
  unnest(cols = data)

for (p in 1:nrow(placement_experiments)){

placement_experiments$sigh[[p]] <- state_experiments |>
  ungroup() %>%
  mutate(
    results = future_pmap(
      list(
        starting_conditions = starting_conditions,
        proc_starting_conditions = proc_starting_conditions,
        fauna = fauna,
        fleets = fleet,
        log_rec_devs = log_rec_devs
      ),
      run_mpa_experiment,
      placement_strategy = placement_experiments$placement_strategy[p],
      prop_mpa = placement_experiments$prop_mpa[p],
      mosaic = placement_experiments$mosaic[p],
      critters_considered = placement_experiments$critters_considered[p],
      placement_error = placement_experiments$placement_error[p],
      resolution = resolution,
      patch_area = patch_area,
      drop_patches = FALSE,
      steps_to_keep = "all",
      years = mpa_years,
      mpa_offset = 10,
      keep_age = TRUE,
      .options = furrr_options(seed = TRUE)
    )
  )

}

# quick and dirty comparision vs. benchmark
fauna_results <- placement_experiments$sigh[[2]]$results[[1]]$results$fauna |> 
  mutate(prop_mpa = placement_experiments$prop_mpa[2] ) # |> 
    #mutate(critter = critter_namer(critter))


fleet_results <-placement_experiments$sigh[[2]]$results[[1]]$results$fleet |> 
    mutate(prop_mpa = placement_experiments$prop_mpa[2] )# |> 
    #mutate(critter = critter_namer(critter))




benchmark_fauna_results <- placement_experiments$sigh[[1]]$results[[1]]$results$fauna |> 
    mutate(prop_mpa = placement_experiments$prop_mpa[1] ) #|> 
    #mutate(critter = critter_namer(critter))



benchmark_fleet_results <-placement_experiments$sigh[[1]]$results[[1]]$results$fleet |> 
    mutate(prop_mpa = placement_experiments$prop_mpa[1] ) #|> 
   # mutate(critter = critter_namer(critter))




mpa_step <- min(fauna_results$year) + 10 - 2

# state_experiments$fleet[[1]]$alpha$metiers[[4]]$sel_at_length |> 
#   plot()
# 



```

XX this will probably get moved to SI XX

@fig-case-study provides an illustration of the kinds of MPA scenarios included in this analysis. This selected scenario is from the "complex" set, meaning that there are four different species targeted by two different fishing fleets. Each species has a different baseline species distribution ({@fig-case-study}-A), and each fleet has their own relative prioritization of species and port locations. In this scenario an MPA is placed covering the 30% of the simulated seascape where the highest biomass of fish is caught, redistributing fishing effort ({@fig-case-study}-B). The total biomass by species ({@fig-case-study}-C), and catch by species and fleet ({@fig-case-study}-D), are calculated over time, and compared between the state of the world with the MPA (solid lines) relative to the world without the MPA (dashed lines). Values from the simulated world with the MPA would be used to calculate relevant indicators such as response ratios.

```{r}
#| label: fig-case-study
#| fig-cap: "Case study simulation. A) Distribution of biomass per species in space, with more darker colors indicating lower biomass. B) Distribution of fishing effort, with darker colors indicating lower fishing effort C) Evolution of depletion (biomass divided by unfished biomass) per species over time, with vertical line indicating year of 30% MPA implementation. D) Catch by species and fleet over time, with vertical line indicating year of 30% MPA implementation. For panels C and D, solid line indicates world with MPA, dashed line simulated counter-factual where MPAs are not implemented."
#| eval: true
#| fig-height: 7

mpa <- fauna_results |> 
  filter(step == max(step)) |> 
  group_by(x,y) |> 
  summarise(mpa = unique(mpa))

  
# benchmark_fauna_results |> 
#   filter(age == min(age)) |> 
#   group_by(critter, step) |> 
#   summarise(n = sum(n)) |> 
#   ggplot(aes(step, n)) + 
#   geom_point() + 
#   facet_wrap(~critter, scales = "free_y")

alpha <- benchmark_fauna_results |> 
  filter(step == max(step)) |> 
  group_by(critter, x,y) |> 
  summarise(b = sum(b)) |> 
  group_by(critter) |> 
  mutate(sb = b / max(b)) |> 
  ungroup() |> 
  left_join(mpa, by = c("x","y")) |> 
  ggplot(aes(x,y,fill =sb)) + 
  geom_tile(show.legend = FALSE) + 
  facet_wrap(~critter) + 
  scale_fill_viridis_c() + 
  scale_x_continuous(name = "Longitude",expand = c(0,0)) + 
  scale_y_continuous(name = "Latitude",expand = c(0,0)) +
  labs(subtitle = "A) Biomass Distribution Without MPA") +
  theme(axis.text = element_blank())


beta <- fleet_results |> 
  filter(step == max(step)) |> 
  group_by(fleet, x,y, mpa) |> 
  summarise(effort = unique(effort)) |> 
  group_by(fleet) |> 
  mutate(se = effort / max(effort)) |> 
  ggplot(aes(x,y,fill =se, color = mpa)) + 
  geom_tile(show.legend = FALSE) + 
  facet_wrap(~fleet) + 
  scale_fill_viridis_c(option = "plasma") + 
  scale_x_continuous(name = "Longitude",expand = c(0,0)) + 
  scale_y_continuous(name = "Latitude",expand = c(0,0)) +
  labs(subtitle = "B) Effort Distribution") +
  theme(axis.text = element_blank())

fauna_experiment <- fauna_results |> 
  bind_rows(benchmark_fauna_results)


fleet_experiment <- fleet_results |> 
  bind_rows(benchmark_fleet_results)

b0s <- map_dbl(state_experiments$fauna[[1]], \(x) x$b0)

delta <- fauna_experiment |> 
  mutate(experiment = if_else(prop_mpa == 0, "Without MPA", "With MPA")) |> 
  group_by(critter, step, prop_mpa, experiment, patch) |> 
  summarise(b = sum(b, na.rm = TRUE),
            b0_p = unique(b0_p)) |> 
    group_by(critter, step, prop_mpa, experiment) |> 
  summarise(biomass = sum(b, na.rm = TRUE),
            b0 = sum(b0_p)) |> 
  ungroup() |> 
  mutate(depletion = biomass / b0) |> 
  ggplot(aes(step, depletion, color = critter, linetype = experiment)) + 
    geom_vline(xintercept = mpa_step) +
  geom_line() + 
  scale_linetype(name = "") + 
 scale_linetype(name = "") + 
  scale_x_continuous(name = "Time") +
  scale_y_continuous(name = "B/B0",limits = c(0, 1), expand = c(0, NA)) +
  scale_color_discrete(name = '') +
  guides(color = guide_legend(nrow = 2)) + 
  labs(subtitle = "C) B/B0 per species over time") + 
    theme(axis.text.x = element_blank(),        axis.text.y = element_text(size = 6))


# fleet_experiment |> 
#   group_by(step, fleet) |> 
#   summarise(effort = sum(effort)) |> 
#   ggplot(aes(step, effort, color = fleet)) + 
#   geom_point() + 
#   facet_wrap(~fleet)

kappa <- fleet_experiment |> 
  mutate(experiment = if_else(prop_mpa == 0, "Without MPA", "With MPA")) |> 
  group_by(critter, step, prop_mpa, experiment, fleet) |> 
  summarise(catch = sum(catch, na.rm = TRUE)) |> 
  ggplot(aes(step, catch, color = critter, linetype = experiment)) + 
  geom_vline(xintercept = mpa_step) +
  geom_line() + 
  scale_linetype(name = "") + 
    scale_x_continuous(name = "Time") +
  scale_y_continuous(name = "Catch",limits = c(0, NA), expand = c(0, NA)) +
  facet_wrap(~fleet, scales = "free_y") + 
  guides(color = guide_legend(nrow = 2)) +
  labs(subtitle = "D) Catch per species per fleet over time") + 
  scale_color_discrete(name = '') +
   # scale_color_viridis_d(name = '',option = "turbo") + 
  theme(axis.text.x = element_blank(),
        axis.text.y = element_text(size = 6))



# fleet_experiment |>
#   group_by(fleet, step) |>
#   summarise(effort = sum(effort)) |>
#   ggplot(aes(step, effort, color = fleet)) +
#   geom_line()

# kappa <- fleet_results |> 
#   group_by(step, critter, fleet) |> 
#   summarise(catch = sum(catch, na.rm = TRUE)) |> 
#   ggplot(aes(step, catch, fill = critter)) +
#   geom_area() + 
#   geom_vline(xintercept = mpa_step) +
#   facet_wrap(~fleet, labeller = label_both) + 
#   scale_fill_brewer(name = "", palette = "Set1") +
#   theme(legend.position = "bottom") +
#   scale_y_continuous(name = "Catch", limits = c(0,NA)) + 
#   scale_x_continuous(name = "Time Step") +
#   guides(fill = guide_legend(nrow = 1)) + 
#   labs(subtitle = "C) Catch by fleet over time")
# 
# 
# delta <- fauna_results |> 
#   group_by(step, critter) |> 
#   summarise(biomass = sum(b, na.rm = TRUE)) |> 
#   ggplot(aes(step, biomass, color = critter)) +
#   geom_line(show.legend = FALSE) + 
#   geom_vline(xintercept = mpa_step) +
#   scale_color_brewer(name = "", palette = "Set1") +
#   theme(legend.position = "bottom") +
#   scale_y_continuous(name = "Biomass", limits = c(0, NA)) + 
#   scale_x_continuous(name = "Time Step") +
#   guides(color = guide_legend(nrow = 1)) + 
#   labs(subtitle = "C) Biomass per species over time")

fig <- ((alpha + beta) / (delta + kappa) + plot_layout(guides = "collect") & theme(legend.position = "bottom")) & theme(axis.title.x = element_text(size = 6),axis.title.y = element_text(size = 6))


figsaver(fig)


```

### Variability of MPA Effects

<!-- Note that for all of these results we cannot really assign a probability to any one state of nature, and so should focus more on the range and trends in outcomes rather than the shapshots of outcome density.  -->

```{r}
#| label: summary-stats

better_inside <- percent(mean(mpa_outcomes$mpa_biomass > 0 ))

better_outside <- percent(mean(mpa_outcomes$fished_biomass > 0 ))

worse_outside <- percent(mean(mpa_outcomes$fished_biomass < 0 ))

better_total <- percent(mean(mpa_outcomes$biomass > 0 ))

worse_total <- percent(mean(mpa_outcomes$biomass < 0 ))

better_catch <- percent(mean(mpa_outcomes$catch > 0, na.rm = TRUE ))

worse_catch <- percent(mean(mpa_outcomes$catch < 0, na.rm = TRUE))

better_total_total <- percent(mean(total_mpa_outcomes$biomass > 0, na.rm = TRUE))

worse_total_total <- percent(mean(total_mpa_outcomes$biomass < 0, na.rm = TRUE))

placement_effect <- total_mpa_outcomes |>
  group_by(placement_strategy) |>
  summarise(bad_bio = mean(biomass < 0),
            bad_catch = mean(catch < 0))



```

Our simulated MPAs had a wide range of effects on species-level biomass and catch, with both positive and negative causal effects possible for all measured outcomes (@fig-outcomes). Increasing MPA size generally acted to increase the range of possible effects. MPAs almost always (`r better_inside` of simulations) caused an increase in *Biomass Inside* their borders, though negative effects were also possible. Simulated MPAs increased *Biomass Outside* their borders in `r better_outside` of simulations, meaning they resulted in a net decrease in *Biomass Outside* their borders in `r worse_outside` of simulations. The balance between biomass almost always increasing inside and sometimes decreasing outside resulted in MPAs resulting in a net increase in *Total Biomass* in `r better_total` of simulations and a net decrease in `r worse_total` of simulations. Negative biomass outcomes for *Biomass Inside* and *Total Biomass* were much more common in scenarios where the MPA placement strategy was to avoid fishing and when fishing effort was displaced by the MPA, as these scenarios generally resulted in the concentration of fishing effort in prime habitat. The possibility of unintended losses in biomass increased with the level of fishing pressure (@fig-outcomes).

MPAs resulted in a net increase in species and fleet level *Catch* in `r better_catch` of simulations, and a net decrease in *Catch* in `r worse_catch` of simulations. Smaller effect sizes (absolute effect sizes less than 25%) were much more common than larger effect sizes. Using the *avoid fishing* MPA strategy resulted in slightly lower frequency of net catch losses than the *target fishing* strategy, but only slightly less so. The number of simulations with positive catch effects increased with the counterfactual degree of fishing pressure, but negative catch effects still occurred across all simulated levels of fishing pressure (@fig-outcomes).

```{r}
#| label: fig-outcomes
#| fig-cap: Distribution of simulation outcomes across metrics (columns), proportion of seascape in MPA (rows), and scenario complexity (colors). Y-axis shows the percent change in the outcome in question caused by the MPA. Biomass Inside refers to total biomass of individual species inside MPA borders. Biomass Outside refers to total biomass of individual species outside MPA borders. Total Biomass refers to total biomass of individual species inside and outside MPA borders. Catch refers to catch per species and fleet outside the MPA. 

outcome_labeller <- c(
  fished_biomass = "Biomass Outside",
  mpa_biomass = "Biomass Inside",
  biomass = "Total Biomass",
  catch = "Catch"
)

sighbreaks <- seq(-1,2, by = .5)
sighlabs <- paste0(sighbreaks * 100, "%")
sighlabs[length(sighlabs)] <- "≥200%"

fig <- mpa_outcomes |>
  filter(observation_error == default_observation_error) |>
  select(depletion,
         numeric_prop_mpa,
         difficulty,
         fished_biomass,
         mpa_biomass,
         biomass,
         catch) |>
  pivot_longer(-(depletion:difficulty)) |>
  mutate(
    depletion_bin = cut(pmin(1.19,depletion), breaks = c(0 ,.25, 0.5,1.2)),
  mpa_bin = cut(numeric_prop_mpa, breaks = c(0, 0.15, 0.3, 6)),
         name = fct_relevel(name, "mpa_biomass","fished_biomass", "biomass"),
         difficulty = fct_relevel(difficulty,"simple", "medium")) |>
  mutate(mpa_bin = as_factor(case_when(mpa_bin == "(0,0.15]" ~ "0-15%", mpa_bin =="(0.15,0.3]" ~ "15-30%", .default = "30-60%"))) |>
   mutate(depletion_bin = as_factor(case_when(depletion_bin == "(0,0.25]" ~ "0-25%", depletion_bin =="(0.25,0.5]" ~ "25-50%", .default = ">50%"))) |>
  mutate(depletion_bin = fct_relevel(depletion_bin, "0-25%","25-50%" )) |> 
  # filter(numeric_prop_mpa < 0.66, numeric_prop_mpa > 0.1) |> 
  ggplot(aes(x = mpa_bin, y = value)) +
  geom_hline(yintercept = 0, linetype = 2) +
  stat_interval(aes(color_ramp = after_stat(level),color = depletion_bin), .width = c(0.5,0.8,1), position = "dodge") +
  # stat_interval(aes(difficulty, value)) +
  # geom_density(aes(value, after_stat(scaled),fill = difficulty, color = difficulty),alpha = 0.25) +
  facet_wrap( ~ name, scales = "free_y", labeller = labeller(name = outcome_labeller)) + 
  scale_color_manual(name = "B/B0", values = c("tomato", "purple", "steelblue")) +
  scale_x_discrete(name = 'Seascape in MPA') +
  scale_y_continuous(name= "MPA Effect",limits = c(NA,2), oob = squish, breaks = sighbreaks, labels = sighlabs) +
  theme(legend.position = "bottom",
        axis.text.x = element_text(size = 12, angle = 45, hjust = 1, vjust = 1),
        axis.text.y = element_text(size = 8),
        panel.spacing.x = unit(2, "lines")) + 
  ggdist::scale_colour_ramp_discrete(name = "Quantile Range", labels = c("100%","80%", "50%")) 


figsaver(fig)

```

### Performance of Empirical Indicators of MPA Effects

```{r}
mape_meep_rho <- comparison |> 
  filter(!is.na(percent_mpa_effect) & !is.na(indicator_value),
         !str_detect(indicator, "cpue"),
         !str_detect(indicator, "catch"),
         prop_mpa > 0.5) |> 
  group_by(name, indicator) |> 
  nest() |> 
  mutate(error = map(data, \(x) rmse_vec(x$percent_mpa_effect, x$indicator_value)),
         bias = map(data, \(x) mean(x$indicator_value - x$percent_mpa_effect)),
         rho = map(data, \(x) correlate(x$indicator_value, x$percent_mpa_effect, method = "spearman", quiet = TRUE)),
          indicator = str_remove_all(indicator, "ind_")) |> 
  unnest(cols = c(error,bias, rho)) |> 
  rename(rho = x) |> 
  ungroup() |> 
  mutate(
      name = fct_recode(
      name,
      "Biomass Outside" = "fished_biomass",
      "Biomass Inside" = "mpa_biomass",
      "Total Biomass" = "biomass",
      "Catch" = "catch"),
      indicator = fct_recode(
      indicator,
      "Biomass Density BACI" = "biomass_baci",
      "Mean Length Response Ratio" = "length_rr",
      "Biomass Density Response Ratio" = "biomass_rr",
      "Effort Gradient" = "effort_gradient",
      "Biomass Density Gradient BACI" = "biomass_bag",
      "Biomass Density Gradient" = "biomass_gradient")
  ) |> 
    mutate(name = fct_relevel(name, "Biomass Inside","Biomass Outside"  ,"Total Biomass"))

```

Indicator performance varied widely across indicators, outcomes, and metrics (@fig-rho-error-bias A). All three *Inside vs. Outside* indicators had positive Spearman's $\rho$ with *Biomass Inside* and *Total Biomass*, with *Biomass Density BACI* having the highest $\rho$ values for both ($\rho^2 = 0.41$ and $\rho^2 = 0.11$ respectively), followed by *Biomass Density Response Ratio* ($\rho^2 = 0.25$ and $\rho^2 = 0.06$ respectively). All three *Inside vs. Outside* indicators had negative Spearman's $\rho$ values with *Biomass Outside*, meaning that simulations with relatively higher response ratios were associated with simulations with relatively lower *Biomass Outside* outcomes. Gradient based indicators had much lower Spearman's $\rho$ values across all outcomes (all $|\rho| < 0.1$), explaining almost none of the rank-level variation in outcomes. *Inside vs. Outside* indicators had negative Spearman's $\rho$ with catch outcomes. In summary, *Inside vs. Outside* indicators had relatively higher Spearman's $\rho$ with *Biomass* outcomes, *Gradient* based indicators explained almost none of the rank-level variation in any of the outcomes. None of the indicators explained any meaningful amount in the rank-level variation in the simulated *Catch* outcomes. (@fig-rho-error-bias A).

The $\rho$ values shown in @fig-rho-error-bias A. indicate how well a relatively high indicator value correlates to a relatively high or low outcome value. We also examined how well raw indicator values represented raw outcome values, by calculating error (root mean squared error) and bias (mean absolute error), where positive bias values indicate that on average indicator values were higher than true values, and *vice versa*. The average RMSE across all indicators was `r round(mean(100 * mape_meep_rho$error))` percentage points, with an average bias across all indicators of `r round(mean(100 * mape_meep_rho$bias))` percentage points. Most indicators were positively biased relative to the true effect size, though four out of the six evaluated indicators were negatively biased for *Biomass Inside*.

```{r}
#| label: fig-rho-error-bias
#| fig-cap: "A) Spearman correlaions $\rho$ (color) and  $\rho^2$ (text) between indicators (y-axis) and outcomes (x-axis) at the level of individual species and fleets across all simulations. B) Root mean squared error (RMSE, text) and mean error (Bias, color) between indicators (y-axis) and outcomes (x-axis) at the level of individual species and fleets across all simulations. Blue plain text indicats Inside vs. Outside indicators, red italic axis labels indicates a Near vs. Far indicator."
#| fig-height: 7


 
a <- mape_meep_rho |> 
  ggplot() + 
  geom_tile(aes(name, reorder(indicator, abs(rho)), fill = rho), color = "black") + 
  geom_text(aes(name, reorder(indicator, abs(rho)), label = round(rho^2,2))) +
  scale_fill_gradient2(name = expression(rho),limits = c(-1,1),
                       low = "tomato", high = "steelblue", mid = "white",
                       guide = guide_colorbar(frame.colour = "black",ticks.colour = "black", theme = theme(legend.key.width  = unit(1, "lines"),
  legend.key.height = unit(8, "lines")),
  direction = "vertical",
  title.position = "top",
  title.vjust = 0.75)) + 
  scale_x_discrete(expand = c(0,0), position ="bottom", name = '') + 
  scale_y_discrete(expand = c(0,0), name = '') + 
  theme(legend.position = "right",
        axis.text.x = element_text(angle = 35, vjust = 1, hjust = 1),
         axis.text.y = element_text(color = c(rep("red",3), rep("blue",3)),
                                    face = c(rep("italic",3), rep("plain",3)))) + 
    labs(caption = "Text shows psuedo-R<sup>2</sup>", title = "A") +
  theme(plot.caption = element_textbox())



b <- mape_meep_rho |> 
  ggplot() + 
  geom_tile(aes(name, reorder(indicator, abs(rho)), fill = bias * 100), color = "black") + 
  geom_text(aes(name, reorder(indicator, abs(rho)), label = round(100 * error,0))) +
  # ggtext::geom_richtext(aes(name, reorder(indicator, (rho)), label = round(100 * error,0)), size = 3, alpha = 0.75,color = "black") +
    scale_fill_gradient2(name = "Bias",
                       low = "blue", high = "gold", mid = "white",
                       guide = guide_colorbar(frame.colour = "black",ticks.colour = "black", theme = theme(legend.key.width  = unit(1, "lines"),
  legend.key.height = unit(8, "lines")),
  direction = "vertical",
  title.position = "top",
  title.vjust = 0.75)) + 
  scale_x_discrete(expand = c(0,0), position ="bottom", name = '') + 
  scale_y_discrete(expand = c(0,0), name = '') + 
  theme(legend.position = "right",
        axis.text.x = element_text(angle = 35, vjust = 1, hjust = 1),
         axis.text.y = element_text(color = c(rep("red",3), rep("blue",3)),
                                    face = c(rep("italic",3), rep("plain",3)))) + 
  labs(caption = "Text shows mean percentage-point RMSE", title = "B")

a / b 
rm(list = c("a","b"))
```

Sub-setting our results to only *Biomass Density Response Ratio* values that match the distribution of response ratios for targeted species reported in @smith2024b allows us to visualize the concepts shown in @fig-rho-error-bias. Simulated response ratios was positively correlated with *Biomass Inside* and *Total Biomass* ($\rho = 0.74$, $\rho = 0.5$), and negatively correlated with *Biomass Outside* and *Catch* ($\rho = -0.53$, $\rho = -0.62$) (@fig-rr-performance).

xx need to provide a clear explanation for the higher correlation in this results than in the prior results. The reason is that these indicators work better for the subset of simulations with response ratios distributions that match the CA rrs. This highlights that all the simualtion results can tell us is the range of outcomes and which have more ways of happening, but if for example the true world looks more like Figure 4, then response ratios might work for catch, but not if it looks like some of the other sates.

```{r}
#| label: fig-rr-performance
#| fig-cap: "Simulated Biomass Density Response Ratios (x-axis) plotted against simulated MPA effects (y-axis), with distribution of response ratios matched to empirical response ratios of targeted finfish reported by @smith2024b. Constrained to MPA sizes besteen 10-40% of seascape and the 'medium' difficulty"
#| fig-height: 6

rr_performance <- comparison |>
    filter(observation_error == default_observation_error,
           !is.na(percent_mpa_effect) & !is.na(indicator_value)) |> 
  filter(str_detect(indicator, ("biomass_rr"))) |>
  mutate(combo = paste(name, indicator, sep = " ~ ")) |>
  mutate(combo = str_remove_all(combo, "ind_"))

rrs <- rr_performance |>
  filter(name %in% c("mpa_biomass","biomass", "catch", "fished_biomass"),
         between(prop_mpa,0.1,0.4),
         difficulty != "simple") |> 
    mutate(approx_rr = round(indicator_value / 0.1) * 0.1)

# rrs <- rr_performance |>
#   filter(name %in% c("mpa_biomass","biomass", "catch", "fished_biomass"),
#          between(prop_mpa,0.1,0.4),
#          difficulty == "medium") |> 
#     mutate(approx_rr = round(indicator_value / 0.1) * 0.1)


ca_rrs <- read_rds(here("data", "mpa_level_meta_results.Rds")) |> 
  filter(target_status == "Targeted") |> 
  janitor::clean_names() |> 
  as_tibble() |> 
  mutate(approx_rr = round(estimate / 0.1) * 0.1) 

rr_weights <- ca_rrs |> 
  group_by(approx_rr) |> 
  count() |> 
  ungroup() |> 
  mutate(weight = n / sum(n))

before <- rrs |> 
  group_by(state_id, placement_id, prop_mpa, critter) |> 
  summarise(approx_rr = unique(approx_rr)) |> 
  ungroup() |> 
  left_join(rr_weights,by = join_by(approx_rr)) |> 
    left_join(state_depletions,relationship = "many-to-many",by = c("state_id", "critter")) |> 
  ungroup() |> 
  filter(!is.na(weight)) |> 
  group_by(approx_rr) |> 
  mutate(weight = weight / sum(weight)) |> 
  ungroup()
 


ca_indicator_performance <- before |> 
  slice_sample(n = 2500,replace = TRUE, weight_by = weight) |> 
      left_join(rrs |> select(state_id, placement_id, prop_mpa, critter, name, percent_mpa_effect, indicator_value),
             by = join_by(state_id, placement_id, prop_mpa, critter),
            relationship = "many-to-many") |> 
   filter(!is.na(indicator_value)) |> 
    ungroup() |> 
  filter(is.finite(percent_mpa_effect), is.finite(indicator_value)) |>
  mutate(name = fct_relevel(name, "mpa_biomass","fished_biomass", "biomass", "catch"))

rr_cores <- ca_indicator_performance |> 
  group_by(name) |> 
  nest() |> 
  mutate(tmp = map(data, \(x) correlate(x$indicator_value, x$percent_mpa_effect, method = "spearman", quiet = TRUE))) |> 
  unnest(cols = tmp) |> 
  ungroup() |> 
  mutate(max_y = map_dbl(data, \(x) 1.1 * pmin(1,max(x$percent_mpa_effect))))
 


# sigh |>
#   ggplot(aes(estimate)) +
#   geom_histogram(aes(estimate, fill = "observed"), bins = 20, alpha = 0.25) +
#   geom_histogram(aes(indicator_value, fill = "simulated"),bins = 20, alpha = 0.25) +
#   scale_x_continuous(breaks = seq(-2,5,by = 0.25) ) + 
#   facet_wrap(~name)

ca_rr_ind_plot <- ca_indicator_performance  |>
  mutate(name = fct_relevel(name, "mpa_biomass","fished_biomass", "biomass", "catch")) |> 
  ungroup() |> 
  ggplot(aes(indicator_value, pmin(2,percent_mpa_effect))) +
  # geom_density_2d(alpha = 1, show.legend = TRUE) +
  # geom_bin_2d() +
  geom_hex(show.legend = TRUE,bins = 15) +
    # geom_point(alpha = 0.5, size = 2) +
    # geom_rug(sides = "br") +
  geom_hline(yintercept = 0,
             linetype = 2,
             color = "tomato") +
  geom_vline(xintercept = 0,
             linetype = 2,
             color = "tomato") +
      geom_richtext(data = rr_cores, aes(
    x = .75,
    y = max_y,
    label = glue("&rho; = {round(x,2)}<br>&rho;² = {round(x^2,2)}")
  ),
  fill = "white", label.color = NA, alpha = 0.75) +

  facet_wrap( ~ name, scales = "free_y", ncol = 2, labeller = labeller(name = outcome_labeller)) +
  scale_y_continuous(limits = c(NA, NA), oob = squish, name = "Simulated effect of MPA on..", labels = scales::percent, expand = expansion(mult = c(0,.5))) +
  scale_x_continuous(limits = c(-.25,1.25), name = "Simulated Biomass Density Response Ratio") + scale_fill_viridis_c(option = "mako",name = "# of Simulations") +
  theme(legend.position = "top")


figsaver(ca_rr_ind_plot)
```

## Discussion

This study explored two questions: How variable can the effects of MPAs be, and how well do common empirical indicators measure these effects? We found that the effects of MPAs on conservation and fishery outcomes are variable enough to warrant empirical evaluation. Given the importance of evaluation, our results show that while some indicators performed well for some outcomes (e.g. *Biomass Density Response Ratios* as an indicator of MPA-mediated changes in *Biomass Inside*), others did not (e.g. any of the *Gradient* near vs. far based methods).

Our simulations confirm the common sense result that in almost all simulated cases closing an area to fishing results in an increase in fish biomass inside that area. The magnitude of this increase can vary greatly depending on how heavy fishing pressure would have been without the MPA, the size of the MPA relative to the movement of the species, and the placement of the MPA, consistent with past studies [@white2011; @hilborn2004a]. However, under our simulation framework that allows for heterogeneous habitats and fleet dynamics biomass went down, not up, outside the MPA in `r worse_outside` of simulations. This is not because of a lack of simulate spillover, but because the magnitude of spillover from inside the MPA was not enough overcome the concentration of fishing effort outside. The magnitude of increases inside were generally sufficiently greater than the losses outside that in most simulations (`r better_total`) total biomass did go up as a result of the MPA, though in some cases (`r worse_total`) total biomass at the species level did go down.

While our simulated MPAs generally increased *Biomass Inside* and *Total Biomass* (though often at the cost of *Biomass Outside*), catch results were more mixed. *Win-win* outcomes where MPAs increased both biomass and catch were possible, trade-offs where biomass increases came at the expense of total catches were more common. Simulations with higher fishing pressure were more likely to have more positive catch effects, the degree of fishing pressure alone was not a reliable indicator of the effect of MPAs on catch (@fig-quadrant-freq).

That MPAs can have negative effects on *Catch* is intuitive, as the asymptotic effect of MPA size (closing 100% of the ocean) has to be a 100% loss in catch, and therefore even for scenarios where *some* MPA size could increase catch the effects of closures on catch has to become negative at some MPA size. Our result that MPA can have a negative effect on *Biomass* outside, inside, and in total is less intuitive. This unintended consequence occurs in our model due to fleet dynamics. MPA can reduce biomass outside their borders by concentrating effort in the remaining fishing grounds to a level that cannot be compensated for by spillover from the MPA. Beyond this, if an MPA results in displacement of a fishing fleet from a relatively low biomass area for a given species to a high biomass area for that species, the net result can be net increase in the total fishing mortality on that species, and as a result a net decrease in the total biomass of that species, potentially both inside and outside the MPA since fish move across the borders. These negative effects on *Total* or *Inside* biomass were relatively rare, but are possible when species have heterogeneous and in cases negatively correlated distributions, and have heterogeneous vulnerability to different fishing fleets. Unintended consequences were also more common under the "avoid fishing" MPA placement strategy. @abbott2012 provides a real world example of this phenomenon,

The potential for negative conservation outcomes of MPAs should not be overstated; in most of our simulations MPAs increased biomass, often substantially. But, the potential for unintended consequences where species and fleets have heterogeneous distributions and behaviors should not be overlooked. Documenting the mechanisms for these unintended consequences as we have done here can help practitioners be aware of this possibility so that they can consider whether there is a risk in the planning stage, and not risk a "file drawer" effect of dismissing empirical results showing negative conservation outcomes of MPAs as impossible should they arise.

Our simulation results confirm that MPAs can have highly variable effects on both *Biomass* and *Catch,* which in turn implies that there is value in trying to empirically evaluate the effects of implemented MPAs, as their effects cannot reliably be assumed *a priori.* Empirical studies of MPAs generally depend on a range of indicators such as response ratios, BACI designs, or spillover gradients [see meta-analyses such as @ban2019]. @hopf2024 demonstrated that while indicators such as BACI designs and response ratios could track some conservation outcomes, they could also be misleading under certain conditions. @hilborn2024 demonstrated that the presence of gradients in fish biomass as a function of distance outside of an MPA were not reliable indicators of effects on catch or catch rates. Our study confirms these results, and expands on them by providing a comprehensive evaluation of the performance of multiple indicators across a range of outcomes under a much wider set of bio-economic states.

We find that *Biomass* effects of MPAs were often correlated with *Inside vs. Outside* style indicators (*Biomass Density BACI*, *Biomass Density Response Ratio,* *Mean Length Response Ratio*), with the strongest Spearman's $\rho$ values associated with *Biomass Inside*. All three of these indicators were negatively correlated with *Biomass Outside*, indicating that across our simulations relatively higher *Inside vs. Outside* indicators were associated with relatively lower *Biomass Outside* outcomes.

Despite MPAs producing a wide range of positive and negative outcomes on catch, none of indicators evaluated in this study were capable of reliability tracking these outcomes, producing low Spearman's $\rho$ values (all $\rho^2$ values \< 0.05), high RMSE, and generally positive bias (@fig-rho-error-bias). While our simulation results indicate that the magnitude of MPA effects on conservation could be highly variable, they were consistently positive, at least with regards to *Biomass Inside* and *Total Biomass*. The sign, let alone the magnitude, of our simulated catch effects were much more variable, meaning that having a a reliable empirical indicator of these effects is particularly important. Our results show that interpreting common empirical indicators as evidence of catch effects of MPAs can be highly misleading. For example, Biomass Density Response Ratios observed in targeted fish species around California MPAs were generally positive, often substantially so [@smith2024b]. Our simulation results show that this distribution of response ratios could be associated with net changes in catch ranging from effectively 0%, to as high as a near 50% increase, or as low as a -50% decrease (@fig-rr-performance).

Despite their common use, we find no evidence that gradient-based indicators, such as differences in biomass density or fishing effort near vs far from MPA borders, reliably track any of the outcomes evaluated here. Importantly, this does not mean that these gradients do not exist; rather that the MPA causing a gradient to exist does not in and of itself imply other broader MPA effects at the population or fishery level. Gradient-based methods have a long history in MPA science [@halpern2009; @lynham2024; @medoff2022; @roberts2001; @dilorenzo2016]. Part of their appeal is that they rely on neither before-after data, which requires monitoring programs to be in place prior to MPA implementation, or data from inside the reserve, which can be costly to collect as it usually depends on fishery-independent scientific surveys. Instead, they can in theory be calculated using only post-implementation fishery-dependent data. Early empirical use of gradient based methods was focused on measuring the presence of "spillover" from the MPA to surrounding water [@halpern2009], which was under debate at the time. We argue that the question is in fact not really an open or particularly relevant question anymore; simulation modeling and empirical evidence has confirmed that for almost any reasonable case the movement dynamics of marine organisms are such some level of spillover will almost always occur at one or more life stages.

The relevant question then is not "is spillover significantly different than 0", but "what is the net effect size of spillover on outcomes of interest". This is where we argue there has been a breakdown between the empirical evidence and the interpretation of that evidence. An illustration of this chain of reasoning is that 1) in order for MPAs to provide conservation or fishery benefits outside their borders there must be spillover 2) spillover can be inferred based on gradients near vs. far from MPAs and therefore 3) if a gradient is detected, spillover is occuring, and therefore so has a conservation and/or fishery benefits. This line of reasoning is used in the *Editor's summary* of @lynham2024:

> Marine protected areas (MPAs) have been repeatedly shown to protect species within their boundaries. This is even true for wide-ranging migratory species such as tunas. Another claimed benefit of MPAs, however, is a “spillover” of fish into areas open for fishing. Whether this occurs for migratory fishes has been an open question given their movement across regions. Lynham *et al*. show that even for highly mobile species, specifically economically important tunas in the Pacific and Indian oceans, there is a spillover benefit of MPAs. Such results clearly underline that MPAs are essential for protecting both species and fisheries. —[Sacha Vignieri](https://www.science.org/doi/10.1126/science.adn1146#editor-abstract)

Our results show that under our simulated conditions, the presence of true gradients in for example biomass density or fishing effort caused by an MPA, is neither necessary nor sufficient evidence for the effects of MPAs on *Biomass Inside*, *Biomass Outside*, *Total Biomass*, or *Catch.* There are clearly other objectives of MPAs besides those evaluated here, some of which may be reliably tracked by gradient based methods. Increases in the size and abundance of fish near MPA borders may be of high value to recreational fishers [@franceschini2024], even if those increases do not necessarily equate to commensurate benefits at the scale of the total population or fishery.

The poor performance of gradient-based indicators in our model presents a major challenge for the evaluation of MPAs where only fishery-dependent data are available, as in most cases these data will only be from areas outside the MPA, restricting evaluation to the gradient based methods which performed poorly here for many objectives of interest to management. For example, evaluation of high-seas MPAs created through efforts such as BBNJ are likely to depend solely on fisheries data from outside the MPA, as the costs to conduct fishery-independent surveys in large and remote pelagic MPAs are likely to be prohibitive.

In total, our results suggest three broad conclusions on the use of empirical indicators of MPA performance. While it is possible for MPAs to cause net losses in total biomass, these are likely to be edge cases, and in general our simulation results show that generally speaking MPAs result in increases in biomass inside their borders. Our results also show that, while subject to errors and biases under a range of conditions, *Inside vs. Outside* style indicators can track these effects of MPAs inside their borders, and to a lesser extent were negatively correlated with *Biomass Outside* though as shown here and in @hopf2024 they should still be used with caution. None of the evaluated indicators reliably tracked the catch effects of MPAs, indicating an urgent need for the development of practical and reliable methods for measuring the food security effects of MPAs, particularly as our simulation results show these effects can be highly variable. Importantly, what correlations there were between common indicators and catch were generally *negative*, meaning that while they explained little of the rank-order variation in catch outcomes, higher values of for example *Biomass Density Response Ratios*, taken as evidence of conservation benefits of MPAs, were associated with *worse* catch outcomes. Gradient based indicators showed no evidence of being reliable indicators of any of our evaluated conservation or catch outcomes.

There are a number of important caveats to our results. The operating model used here, `marlin` [@ovando2023a], makes a specific set of assumptions around population dynamics, movement, and fleet dynamics that while all relatively common in the literature are not the only assumptions available. However, we feel that the core of our results are a function of fairly uncontroversial assumptions, namely that fish and fishers move, and that heterogeneity in life history, movement, habitat use, and fleet dynamics exists in some form in most fisheries. While we have taken steps to try and produce plausible simulated states (e.g. constraining the life history of the species to conform to selected morphs), we cannot assign a probability of occurrence in the real world to any of our simulated states. As such, it is possible that in reality some subset of the simulations used here, and their associated implications for MPA effects and indicator performance, may be more commonly represented in the real world than others. Future work could focus on testing performance under a more focused set of scenarios tuned to the dynamics of a particular system. The model does not allow for trophic interactions. This is clearly another avenue through which MPAs could affect populations of fish, if for example rebuilding of a depleted piscivorous species by an MPA results in decreases in populations of their prey. The model also does not account for temporal trends in habitat or life history, for example those driven by climate change. Shifts in species distributions over time could further complicate empirical evaluation of MPAs using the kinds of indicators presented here.

Along with the assumptions made at the level of the operating model, the estimation model makes the very strong assumption that all data used in calculating selected indicators are observed without error. We make this choice to isolate the performance of selected indicators, but clearly in reality observation error and sample sizes will play a role in the ability of indicators to reliably track MPA outcomes. This implies that the indicator performances presented here are likely to be optimistic. Future work could consider the specific magnitude of error and bias in estimated MPA effects resulting from different kinds and magnitude of observation error. It is beyond the scope of this study to review best practices in causal inference in spatial social-ecological systems, but see @larsen2019, @ferraro2018, @mcelreath2020, @zuur2009, @byrnes2024, @punt2019, @thorson2024b, @tredennick2021a, @grace2024, @white2011, @hopf2024, and @ovando2021 for useful insights in this space.

Some of our results are tautological in a sense; indicators such as response ratios or BACI make specific assumptions, and we intentionally violate them and as a result the performance of these indicators is degraded. However, the types of biases that we introduce are reflective of real processes (e.g. movement of fish and fishers, preexisting differences in baseline attributes, exogenous changes to the outcomes of interest), and our goal here is not to say "does introducing bias cause bias", but rather to evaluate which indicators might still perform suitably well in the face of the kinds of biasing factors they are likely to face in reality. For example, our results show that despite facing violations of many core assumptions, *Biomass Density Response Ratios* and *Biomass Density BACI* studies still performed relatively well as measures of their core purpose, measuring the effects of MPAs on biomass densities inside their borders. Mechanistically, this implies that while bias exists, the causal effect is substantially larger, and as such the model is "approximately causal" as described by the Integrative Causal Investigative Paradigm presented in @grace2024. On the other hand, other indicators performed poorly, either because the biases were greater than the causal effect, or because of errors of extrapolation in which a real effect of an MPA on one thing (e.g. change in biomass densities near relative to far from an MPA) is mistakenly interpreted as an effect on another thing (change in total population size or catch).

Research on effective means of estimating the effects of MPAs outside their borders or when *Inside vs. Outside* data are unavailable is urgently needed. Collection of actual data on the economic performance of fisheries (rather than indirect indicators such as spillover gradients) could help provide better estimates of catch effects, though finding suitable "control" units to isolate the causal effect of the MPA from other exogenous shocks will be difficult. While our results show that as implemented here, gradient based methods are not effective indicators of any of the MPA outcomes evaluated in this study, research is needed on whether there are modifications fo these designs that are effective for some use cases, given that fishery-dependent *Near vs. Far* data are often all that are available and as such are likely to be used despite any associated warnings from works such as this. For example, perhaps conditional on the life history of the species gradients at specific distances are more meaningful than others. Research should also explore whether ensembles of indicators might perform better than any individual one [@anderson2017a].

In general, we concur with @hopf2024 that while purely empirical methods have value, best-practice in estimating the effect of MPAs should be to explicitly incorporate population and fleet dynamics into estimation models, or baring that to place purely empirical results in the context of appropriate theoretical predictions, with Bayesian priors being a natural means of doing so. Use of spatio-temporal modeling to appropriately standardize spatial observations [@thorson2019a] so that they can be passed to or integrated into spatial stock assessments [@punt2019] would be best practices for estimating net changes in population and fishery outcomes associated with MPA implementation, though these methods are highly data and expertise intensive. Rather than proscribing one solution, we highlight here that finding methods that effectively measure outcomes of interest of MPAs given the realities of data constraints around the world is an urgent need.

## Conclusions

The coming decades are likely to see a rapid expansion in the use of MPAs of various forms, both in coastal seas and increasingly in dynamic open-ocean systems. The simulation modeling informed by bio-economic theory implemented here supports the basic conclusion that this expansion is likely to produce conservation gains inside borders and at the total population level, though the exact magnitude of these benefits is highly uncertain. However, the effects of these MPAs outside their borders, on both biomass and catch, is far less certain and may be highly positive or highly negative, with negative effects being more common in our simulations.

As such, it is important that we be able to measure the effects of MPAs on a range of outcomes, so that we can quantify the costs and benefits produced by MPAs and subsequently adapt our understanding of effective design and use of MPAs as needed. Our results show that while imperfect, some empirical indicators such as response ratios can be reliable indicators of conservation outcomes inside MPA borders, but that few empirical indicators commonly in use reliably track the effects of MPAs outside their borders, particularly on fishery catches. Gradient based methods (e.g. those that assess spillover based on biomass densities near vs. far from MPA borders), while commonly used, performed particularly poorly as an indicator of any MPA outcome evaluated in this paper.

The next generation of MPA research urgently needs collaboration across disciplines such as conservation biology, ecology, fisheries, and social sciences to develop sufficiently reliable and realistic methods for tracking the effects of MPAs. Doing so will help ensure that future expansion of protected areas in the world's oceans stand the best chance of achieving positive and equitable outcomes for nature and people.

\newpage

## References

::: {#refs}
:::

# SI

```{r}
#| label: fig-reef
#| fig-cap: Growth and maturity for reef fish archetype
#| 
state_experiments$fauna[[1]]$reef_fish$plot()
```

```{r}
#| label: fig-reef-rec
#| fig-cap: Spawner recruit function for reef fish archetype
#| 
recs <- state_experiments$fauna[[1]]$reef_fish$rec_at_dep

tmp <- tibble(dep = seq(0, 1, length.out = length(recs)),rec = recs) 

tmp |> 
  ggplot(aes(dep, rec)) + 
  geom_line() + 
  scale_x_continuous("SSB/SSB0") + 
  scale_y_continuous("Recruits")

```

```{r}
#| label: fig-reef-move
#| fig-cap: Diffusion rate for reef fish archetype
#| 
adult_diffusion_distance <- tune_diffusion(home_range = state_experiments$fauna[[1]]$reef_fish$adult_home_range, mode = "plot") |> 
  mutate(life_stage = "post-recruit")

   recruit_diffusion_distance <- tune_diffusion(home_range = state_experiments$fauna[[1]]$reef_fish$recruit_home_range, mode = "plot") |> 
     mutate(life_stage = "recruit")

    adult_diffusion_distance |>
     bind_rows(recruit_diffusion_distance) |> 
      ggplot(aes(distance_from_centroid, cdist, color = life_stage)) +
      geom_jitter() +
      geom_hline(yintercept = 0.95) +
      geom_vline(aes(xintercept = home_range)) +
      scale_y_continuous(limits = c(0, NA), name = "Cumulative Distribution Function") + 
      scale_x_continuous(limits = c(0, 250), "Distance from initial location")
   

```

```{r}
#| label: fig-tuna
#| fig-cap: Growth and maturity for tuna archetype
#| 
state_experiments$fauna[[1]]$tuna$plot()
```

```{r}
#| label: fig-tuna-rec
#| fig-cap: Spawner recruit function for tuna archetype
#| 
recs <- state_experiments$fauna[[1]]$tuna$rec_at_dep

tmp <- tibble(dep = seq(0, 1, length.out = length(recs)),rec = recs) 

tmp |> 
  ggplot(aes(dep, rec)) + 
  geom_line() + 
  scale_x_continuous("SSB/SSB0") + 
  scale_y_continuous("Recruits")

```

```{r}
#| label: fig-tuna-move
#| fig-cap: Diffusion rate for tuna archetype
#| 
adult_diffusion_distance <- tune_diffusion(home_range = state_experiments$fauna[[1]]$tuna$adult_home_range, mode = "plot") |> 
  mutate(life_stage = "post-recruit")

   recruit_diffusion_distance <- tune_diffusion(home_range = state_experiments$fauna[[1]]$tuna$recruit_home_range, mode = "plot") |> 
     mutate(life_stage = "recruit")

    adult_diffusion_distance |>
     bind_rows(recruit_diffusion_distance) |> 
      ggplot(aes(distance_from_centroid, cdist, color = life_stage)) +
      geom_jitter() +
      geom_hline(yintercept = 0.95) +
      geom_vline(aes(xintercept = home_range)) +
      scale_y_continuous(limits = c(0, NA), name = "Cumulative Distribution Function") + 
      scale_x_continuous(limits = c(0, 250), "Distance from initial location")
   

```

```{r}
#| label: fig-shark
#| fig-cap: Growth and maturity for shark archetype
#| 
state_experiments$fauna[[1]]$shark$plot()
```

```{r}
#| label: fig-shark-rec
#| fig-cap: Spawner recruit function for shark archetype
#| 
recs <- state_experiments$fauna[[1]]$shark$rec_at_dep

tmp <- tibble(dep = seq(0, 1, length.out = length(recs)),rec = recs) 

tmp |> 
  ggplot(aes(dep, rec)) + 
  geom_line() + 
  scale_x_continuous("SSB/SSB0") + 
  scale_y_continuous("Recruits")

```

```{r}
#| label: fig-shark-move
#| fig-cap: Diffusion rate for shark archetype
#| 
adult_diffusion_distance <- tune_diffusion(home_range = state_experiments$fauna[[1]]$shark$adult_home_range, mode = "plot") |> 
  mutate(life_stage = "post-recruit")

   recruit_diffusion_distance <- tune_diffusion(home_range = state_experiments$fauna[[1]]$shark$recruit_home_range, mode = "plot") |> 
     mutate(life_stage = "recruit")

    adult_diffusion_distance |>
     bind_rows(recruit_diffusion_distance) |> 
      ggplot(aes(distance_from_centroid, cdist, color = life_stage)) +
      geom_jitter() +
      geom_hline(yintercept = 0.95) +
      geom_vline(aes(xintercept = home_range)) +
      scale_y_continuous(limits = c(0, NA), name = "Cumulative Distribution Function") + 
      scale_x_continuous(limits = c(0, 250), "Distance from initial location")
   

```

```{r}
#| label: fig-grouper
#| fig-cap: Growth and maturity for grouper archetype
#| 
state_experiments$fauna[[1]]$grouper$plot()
```

```{r}
#| label: fig-grouper-rec
#| fig-cap: Spawner recruit function for grouper archetype
#| 
recs <- state_experiments$fauna[[1]]$grouper$rec_at_dep

tmp <- tibble(dep = seq(0, 1, length.out = length(recs)),rec = recs) 

tmp |> 
  ggplot(aes(dep, rec)) + 
  geom_line() + 
  scale_x_continuous("SSB/SSB0") + 
  scale_y_continuous("Recruits")

```

```{r}
#| label: fig-grouper-move
#| fig-cap: Diffusion rate for grouper archetype
#| 
adult_diffusion_distance <- tune_diffusion(home_range = state_experiments$fauna[[1]]$grouper$adult_home_range, mode = "plot") |> 
  mutate(life_stage = "post-recruit")

   recruit_diffusion_distance <- tune_diffusion(home_range = state_experiments$fauna[[1]]$grouper$recruit_home_range, mode = "plot") |> 
     mutate(life_stage = "recruit")

    adult_diffusion_distance |>
     bind_rows(recruit_diffusion_distance) |> 
      ggplot(aes(distance_from_centroid, cdist, color = life_stage)) +
      geom_jitter() +
      geom_hline(yintercept = 0.95) +
      geom_vline(aes(xintercept = home_range)) +
      scale_y_continuous(limits = c(0, NA), name = "Cumulative Distribution Function") + 
      scale_x_continuous(limits = c(0, 250), "Distance from initial location")
   

```

Along with outcome-specific effects, our model allows us to examine joint effects on biomass and catch. We broke our simulated outcomes into quadrants defined by *negligible* (effect size less than \|2.5%\|), *positive* (effect size greater than 2.5%) and *negative* (effect size less than -2.5%), assigned the change in total catch and total biomass per species and fleet in each simulation to their appropriate quadrant, and then calculated the frequency of factorial combinations of each quadrant for each metric (@fig-quadrant-freq).

At MPA sizes between 0-15% of the seascape the most common result was *catch:negligible & biomass:negligible*, following by *catch:negative & biomass:negligible*. Increasing MPA size largely resulted in a decrease in the percent of simulations under *catch:unaffected & biomass:unaffected* and an increase in *catch:negative & biomass:positive* (\>20% of simulations with MPA sizes between 30-60% of the seascape). The "win-win" quadrant of *catch:positive & biomass:positive* was consistently in the top four most common outcome, representing up to 15% of simulations with MPA sizes between 30-60% of the seascape (@fig-quadrant-freq).

```{r}
#| label: fig-quadrant-freq
#| fig-cap: Frequency of different outcome quadrants as a function percent of seascape in MPA (panels). 


fig <- quadrant_outcomes |>
  mutate(prop_mpa = as.numeric(as.character(prop_mpa)),
         observation_error == default_observation_error) |>
  filter(prop_mpa <= 0.6) |>
  mutate(size_bin = cut(prop_mpa, breaks = c(0, 0.15, 0.3, 6))) |>
  group_by(quadrant, size_bin) |>
  count() |>
  group_by(size_bin) |>
  mutate(pn = n / sum(n)) |>
  mutate(size_bin = as_factor(case_when(size_bin == "(0,0.15]" ~ "0-15%", size_bin =="(0.15,0.3]" ~ "15-30%", .default = "30-60%"))) |>
  ggplot(aes(reorder(quadrant, pn), pn)) +
  geom_col(position = "dodge") +
  coord_flip() +
  facet_wrap( ~ size_bin) +
  scale_x_discrete(name = "") + 
  scale_y_continuous(name = "Percent of Simulations", labels = scales::percent)

figsaver(fig)



```

```{r}
#| label: fig-eg-b
#| fig-cap: Total biomass per species (facet) and patch (point) post-MPA as a function of distance from the nearest MPA border, where negative values indicate points inside the MPA and positive values outside the MPA. 


no_age <- fauna_results |> 
  group_by(critter, x,y,step, mpa) |> 
  summarise(b = sum(b),
            b0_p = unique(b0_p),
            distance_to_mpa_edge = unique(distance_to_mpa_edge)) |> 
  ungroup() |>
  mutate(outside_distance = if_else(mpa, NA, distance_to_mpa_edge)) |>
    mutate(outside_bin = percent_rank(outside_distance)) |>
    mutate(mpa_proximity = case_when(outside_bin <= 0.2 ~ "Near MPA", outside_bin >= 0.8 ~ "Far from MPA", .default = "nomans")) |> 
  mutate(mpa_proximity = fct_relevel(mpa_proximity,"Near MPA", "nomans"),
         mpa = if_else(mpa, "Inside MPA", "Outside MPA"))

small_fleet <- fleet_results |> 
  group_by(fleet, x,y,step, mpa) |> 
  summarise(effort = unique(effort),
            b0_p = sum(b0_p),
            distance_to_mpa_edge = unique(distance_to_mpa_edge)) |> 
  ungroup() |>
  mutate(outside_distance = if_else(mpa, NA, distance_to_mpa_edge)) |>
    mutate(outside_bin = percent_rank(outside_distance)) |>
    mutate(mpa_proximity = case_when(outside_bin <= 0.2 ~ "Near MPA", outside_bin >= 0.8 ~ "Far from MPA", .default = "nomans")) |> 
  mutate(mpa_proximity = fct_relevel(mpa_proximity,"Near MPA", "nomans"),
         mpa = if_else(mpa, "Inside MPA", "Outside MPA"))



no_age |> 
  group_by(critter) |> 
  mutate(b0_p = scale(b0_p)) |> 
  ungroup() |> 
  filter(step == max(step)) |> 
  ggplot(aes(distance_to_mpa_edge, b, color = b0_p)) + 
  geom_point() + 
  geom_vline(xintercept = 0) +
  facet_wrap(~critter, scales = "free_y") + 
  scale_color_viridis_c(name = "Centered and Scaled Unfished Biomass") + 
  theme(legend.position = "top") + 
  scale_y_continuous(name = "Biomass Density")


```

```{r}
#| label: fig-eg-rr
#| fig-cap: Distribution of biomass density per patch inside versus outside of MPA post-MPA. These are the simulated data that would be used to calculate a response ratio. 

no_age |> 
  filter(step == max(step)) |> 
  ggplot(aes(mpa, b)) + 
  stat_pointinterval() + 
  facet_wrap(~critter, scales = "free_y") + 
  scale_x_discrete(name = '') + 
  scale_y_continuous(name = "Biomass Density")
```

```{r}
#| label: fig-eg-baci
#| fig-cap: Distribution and trends of biomass density per patch inside versus outside of MPA before-and-after MPA. These are the simulated data that would be used to calculate a biomass-density before-after-control-impact study. 

no_age |> 
  filter(step == min(step) | step == max(step)) |> 
  mutate(fstep = as.factor(case_when(step == min(step) ~ "Before MPA", .default = "After MPA"))) |>
  mutate(fstep = fct_relevel(fstep, "Before MPA")) |> 
  ggplot(aes(fstep, b,fill = mpa, color = mpa )) + 
  stat_pointinterval(position = "dodge") + 
  geom_smooth(aes(as.numeric(fstep), b,fill = mpa, color = mpa ),method = "lm", se = FALSE) +
  facet_wrap(~critter, scales = "free_y") + 
  scale_fill_discrete(name = '') + 
  scale_color_discrete(name = '') +
  scale_y_continuous(name = "Biomass Density")
```

```{r}
#| label: fig-eg-gradient
#| fig-cap: Distribution biomass density per patch near and far from MPA border for areas outside of MPAs. These are the simulated data that would be used to calculate a biomass density gradient, or spillover, study. 

no_age |> 
  filter(step == max(step),mpa_proximity != "nomans") |> 
  ggplot(aes(mpa_proximity, b)) + 
  stat_pointinterval() + 
  facet_wrap(~critter, scales = "free_y") + 
  scale_y_continuous(name = "Biomass Density") + 
  scale_x_discrete(name = '')

```

```{r}
#| label: fig-eg-gradient-baci
#| fig-cap: Distribution and trends of biomass density per patch near versus far from MPA before-and-after MPA, for patches located outside the MPA. These are the simulated data that would be used to calculate a biomass-density before-after-control-impact gradient study. 

no_age |> 
  filter(step == min(step) | step == max(step), mpa_proximity != "nomans") |> 
  mutate(fstep = as.factor(case_when(step == min(step) ~ "Before MPA", .default = "After MPA"))) |>
  mutate(fstep = fct_relevel(fstep, "Before MPA")) |> 
  ggplot(aes(fstep, b,fill = mpa_proximity, color = mpa_proximity )) + 
  stat_pointinterval(position = "dodge") + 
  geom_smooth(aes(as.numeric(fstep), b,fill = mpa_proximity, color = mpa_proximity ),method = "lm", se = FALSE) +
  facet_wrap(~critter, scales = "free_y") + 
  scale_y_continuous(name = "Biomass Density") +
  scale_fill_discrete(name = '') + 
  scale_color_discrete(name = '')
```

```{r}
#| label: fig-eg-effort
#| fig-cap: Effort per fleet (facet) and patch (point) post-MPA as a function of distance from the nearest MPA border, where negative values indicate points inside the MPA and positive values outside the MPA. 


small_fleet |> 
  mutate(b0_p = scale(b0_p)) |> 
  ungroup() |> 
  filter(step == max(step)) |> 
  ggplot(aes(distance_to_mpa_edge, effort, color = b0_p)) + 
  geom_point() + 
  geom_vline(xintercept = 0) +
  facet_wrap(~fleet, scales = "free_y") + 
  scale_color_viridis_c(name = "Centered and Scaled Unfished Biomass") + 
  theme(legend.position = "top") + 
  scale_y_continuous(name = "Fishing Effort")
```

```{r}
#| label: fig-eg-effort-baci
#| fig-cap: Distribution and trends of effort per patch near versus far from MPA before-and-after MPA, for patches located outside the MPA. These are the simulated data that would be used to calculate a effort based before-after-control-impact gradient study.


small_fleet |> 
  filter(step == min(step) | step == max(step), mpa_proximity != "nomans") |> 
  mutate(fstep = as.factor(case_when(step == min(step) ~ "Before MPA", .default = "After MPA"))) |>
  mutate(fstep = fct_relevel(fstep, "Before MPA")) |> 
  ggplot(aes(fstep, effort,fill = mpa_proximity, color = mpa_proximity )) + 
  stat_pointinterval(position = "dodge") + 
  geom_smooth(aes(as.numeric(fstep), effort,fill = mpa_proximity, color = mpa_proximity ),method = "lm", se = FALSE) +
  facet_wrap(~fleet, scales = "free_y") + 
  scale_fill_discrete(name = '') + 
  scale_color_discrete(name = '') + 
  scale_x_discrete(name = '') + 
  scale_y_continuous(name = "Fishing Effort")
```

```{r}

outcome_labeller <- c(
  fished_biomass = "Biomass Outside",
  mpa_biomass = "Biomass Inside",
  biomass = "Total Biomass",
  catch = "Catch"
)

sighbreaks <- seq(-1,2, by = .5)
sighlabs <- paste0(sighbreaks * 100, "%")
sighlabs[length(sighlabs)] <- "≥200%"

fig <- total_mpa_outcomes |>
  filter(observation_error == default_observation_error) |>
  select(depletion,
         numeric_prop_mpa,
         difficulty,
         fished_biomass,
         mpa_biomass,
         biomass,
         catch) |>
  pivot_longer(-(depletion:difficulty)) |>
  mutate(
    depletion_bin = cut(pmin(1.19,depletion), breaks = c(0 ,.25, 0.5,1.2)),
  mpa_bin = cut(numeric_prop_mpa, breaks = c(0, 0.15, 0.3, 6)),
         name = fct_relevel(name, "mpa_biomass","fished_biomass", "biomass"),
         difficulty = fct_relevel(difficulty,"simple", "medium")) |>
  mutate(mpa_bin = as_factor(case_when(mpa_bin == "(0,0.15]" ~ "0-15%", mpa_bin =="(0.15,0.3]" ~ "15-30%", .default = "30-60%"))) |>
   mutate(depletion_bin = as_factor(case_when(depletion_bin == "(0,0.25]" ~ "0-25%", depletion_bin =="(0.25,0.5]" ~ "25-50%", .default = ">50%"))) |>
  mutate(depletion_bin = fct_relevel(depletion_bin, "0-25%","25-50%" )) |> 
  # filter(numeric_prop_mpa < 0.66, numeric_prop_mpa > 0.1) |> 
  ggplot(aes(x = depletion_bin, y = value)) +
  geom_hline(yintercept = 0, linetype = 2) +
  stat_interval(aes(color_ramp = after_stat(level),color = depletion_bin), .width = c(0.5,0.8,1)) +
  # stat_interval(aes(difficulty, value)) +
  # geom_density(aes(value, after_stat(scaled),fill = difficulty, color = difficulty),alpha = 0.25) +
  facet_grid(mpa_bin ~ name, scales = "free_y", labeller = labeller(name = outcome_labeller)) + 
  scale_x_discrete(name = 'Depletion (B/B0)') +
  scale_y_continuous(name= "MPA Effect",limits = c(NA,2), oob = squish, breaks = sighbreaks, labels = sighlabs) +
  theme(legend.position = "bottom",
        axis.text.x = element_text(size = 12, angle = 45, hjust = 1, vjust = 1),
        axis.text.y = element_text(size = 8),
        panel.spacing.x = unit(2, "lines")) + 
  ggdist::scale_colour_ramp_discrete(name = "Quantile Range", labels = c("100%","80%", "50%")) + 
  guides(color = "none")


figsaver(fig)
```

```{r}
state_depletions |> 
  ggplot(aes(depletion, fill = critter)) + 
  geom_histogram() + 
  facet_grid(difficulty ~ critter)
```

```{r}
#| fig-height: 8

huh <- comparison |> 
    filter(!is.na(percent_mpa_effect) & !is.na(indicator_value),
         !str_detect(indicator, "cpue"),
         !str_detect(indicator, "catch")) |> 
   ungroup() |> 
  mutate(
              indicator = str_remove_all(indicator, "ind_"),
      name = fct_recode(
      name,
      "Biomass Outside" = "fished_biomass",
      "Biomass Inside" = "mpa_biomass",
      "Total Biomass" = "biomass",
      "Catch" = "catch"),
      indicator = fct_recode(
      indicator,
      "Biomass Density BACI" = "biomass_baci",
      "Mean Length Response Ratio" = "length_rr",
      "Biomass Density Response Ratio" = "biomass_rr",
      "Effort Gradient" = "effort_gradient",
      "Biomass Density Gradient BACI" = "biomass_bag",
      "Biomass Density Gradient" = "biomass_gradient")
  ) |> 
    mutate(name = fct_relevel(name, "Biomass Inside","Biomass Outside"  ,"Total Biomass")) |> 
  ungroup() |> 
  filter(!is.na(indicator), !is.na(name))

huh |> 
  ggplot(aes(indicator_value, pmin(2,percent_mpa_effect))) + 
  geom_hline(yintercept = 0) + 
  geom_vline(xintercept = 0 ) +
  geom_bin_2d() + 
  facet_grid(indicator ~ name, scales = "free")
```

```{r}


compare <- ca_rrs |>
  mutate(source = "Observed California Response Ratios") |> 
  select(source, approx_rr) |> 
  bind_rows(ca_indicator_performance |> filter(name == "biomass") |>  select(approx_rr) |> mutate(source = "Simulated Response Ratios"))


compare |> 
  ggplot(aes(approx_rr, y = source)) + 
  geom_density_ridges(alpha = 0.75) + 
  scale_x_continuous("Biomass Density Response Ratio") + 
  scale_y_discrete(name = '')

```

```{r}
#| eval: true
#| fig-height: 8

total_mape_meep_rho <- total_comparison |> 
  filter(!is.na(percent_mpa_effect) & !is.na(indicator_value),
         !str_detect(indicator, "cpue"),
         !str_detect(indicator, "catch")) |> 
  group_by(name, indicator) |> 
  nest() |> 
  mutate(error = map(data, \(x) rmse_vec(x$percent_mpa_effect, x$indicator_value)),
         bias = map(data, \(x) mean(x$indicator_value - x$percent_mpa_effect)),
         rho = map(data, \(x) correlate(x$indicator_value, x$percent_mpa_effect, method = "spearman", quiet = TRUE)),
          indicator = str_remove_all(indicator, "ind_")) |> 
  unnest(cols = c(error,bias, rho)) |> 
  rename(rho = x) |> 
  ungroup() |> 
  mutate(
      name = fct_recode(
      name,
      "Biomass Outside" = "fished_biomass",
      "Biomass Inside" = "mpa_biomass",
      "Total Biomass" = "biomass",
      "Catch" = "catch"),
      indicator = fct_recode(
      indicator,
      "Biomass Density BACI" = "biomass_baci",
      "Mean Length Response Ratio" = "length_rr",
      "Biomass Density Response Ratio" = "biomass_rr",
      "Effort Gradient" = "effort_gradient",
      "Biomass Density Gradient BACI" = "biomass_bag",
      "Biomass Density Gradient" = "biomass_gradient")
  ) |> 
    mutate(name = fct_relevel(name, "Biomass Inside","Biomass Outside"  ,"Total Biomass"))

 
 
a <- total_mape_meep_rho |> 
  ggplot() + 
  geom_tile(aes(name, reorder(indicator, abs(rho)), fill = rho), color = "black") + 
  geom_text(aes(name, reorder(indicator, abs(rho)), label = round(rho^2,2))) +
  scale_fill_gradient2(name = "Correlation between Indicator and Outcome",limits = c(-1,1),
                       low = "tomato", high = "steelblue", mid = "white",
                       guide = guide_colorbar(frame.colour = "black",ticks.colour = "black", theme = theme(legend.key.width  = unit(8, "lines"),
  legend.key.height = unit(1, "lines")),
  direction = "horizontal",
  title.position = "left",
  title.vjust = 0.75)) + 
  scale_x_discrete(expand = c(0,0), position ="bottom", name = '') + 
  scale_y_discrete(expand = c(0,0), name = '') + 
  theme(legend.position = "top",
        axis.text.x = element_text(angle = 35, vjust = 1, hjust = 1)) + 
    labs(caption = "Text shows psuedo-R<sup>2</sup>", title = "A") +
  theme(plot.caption = element_textbox())



b <- total_mape_meep_rho |> 
  ggplot() + 
  geom_tile(aes(name, reorder(indicator, (rho)), fill = error), color = "black") + 
  ggtext::geom_richtext(aes(name, reorder(indicator, (rho)), label = round(100 * bias,0)), size = 3, alpha = 0.75,color = "black") +
  scale_fill_viridis_c(name = "RMSE",option = "plasma",limits = c(0, NA),
                       guide = guide_colorbar(frame.colour = "black",ticks.colour = "black", theme = theme(legend.key.width  = unit(8, "lines"),
  legend.key.height = unit(1, "lines")),
  direction = "horizontal",
  title.position = "left",
  title.vjust = 0.75), labels = scales::percent) + 
  scale_x_discrete(expand = c(0,0), position ="bottom", name = '') + 
  scale_y_discrete(expand = c(0,0), name = '') + 
  theme(legend.position = "top",
        axis.text.x = element_text(angle = 35, vjust = 1, hjust = 1)) + 
  labs(caption = "Text shows mean percentage-point bias (Indicator - Effect)", title = "B")

a / b + plot_layout(guides = "collect") & theme(legend.position = "top")

rm(list = c("a", "b"))


```

```{r}


outcome_labeller <- c(
  fished_biomass = "Biomass Outside",
  mpa_biomass = "Biomass Inside",
  biomass = "Total Biomass",
  catch = "Catch"
)

  sighbreaks <- seq(-1,2, by = .5)
  sighlabs <- paste0(sighbreaks * 100, "%")
  sighlabs[length(sighlabs)] <- "≥200%"

fig <- total_mpa_outcomes |>
  filter(observation_error == default_observation_error) |>
  select(depletion,
         numeric_prop_mpa,
         fished_biomass,
         mpa_biomass,
         biomass,
         catch) |>
  pivot_longer(-(depletion:numeric_prop_mpa)) |>
  mutate(mpa_bin = cut(numeric_prop_mpa, breaks = c(0, 0.15, 0.3, 6)),
         name = fct_relevel(name, "mpa_biomass","fished_biomass", "biomass")) |>
          mutate(mpa_bin = as_factor(case_when(mpa_bin == "(0,0.15]" ~ "0-15%", mpa_bin =="(0.15,0.3]" ~ "15-30%", .default = "30-60%"))) |>
    # filter(numeric_prop_mpa < 0.66, numeric_prop_mpa > 0.1) |> 
  ggplot(aes(x = mpa_bin, y = pmin(2,value))) +
  geom_hline(yintercept = 0, linetype = 2) +
  stat_interval(aes(color_ramp = after_stat(level),color = name), .width = c(0.5,0.8,1)) +
  # stat_interval(aes(difficulty, value)) +
  # geom_density(aes(value, after_stat(scaled),fill = difficulty, color = difficulty),alpha = 0.25) +
  facet_wrap( ~ name, scales = "free_y", labeller = labeller(name = outcome_labeller)) +
  scale_x_discrete(name = 'Seascape in MPA') +
  scale_y_continuous(name= "MPA Effect",limits = c(NA,2), oob = squish, breaks = sighbreaks, labels = sighlabs) +
  theme(legend.position = "bottom",
        axis.text.x = element_text(size = 12, angle = 45, hjust = 1, vjust = 1),
        axis.text.y = element_text(size = 8),
        panel.spacing.x = unit(2, "lines")) + 
  ggdist::scale_colour_ramp_discrete(name = "Quantile Range", labels = c("100%","80%", "50%")) + 
  guides(color = "none")

 
figsaver(fig)
```

```{r}
#| label: fig-total-rr-performance
#| fig-cap: "Simulated response ratios (x-axis) plotted against simulated MPA effects (y-axis), for subset of scenarios more reflective of the California MPA network. Simulations selected such that distribution of simulated response ratios roughly matches distribution of empirical response ratios for targeted finfish in California MPAs, reported in @smith2024b."

total_rr_performance <- total_comparison |>
    filter(observation_error == default_observation_error) |> 
  filter(str_detect(indicator, ("biomass_rr"))) |>
  mutate(combo = paste(name, indicator, sep = " ~ ")) |>
  mutate(combo = str_remove_all(combo, "ind_"))

total_rrs <- total_rr_performance |>
  filter(name %in% c("mpa_biomass","biomass", "catch", "fished_biomass"),
         between(prop_mpa,0.1,0.4),
         difficulty == "medium") |> 
    mutate(approx_rr = round(indicator_value / 0.1) * 0.1)


ca_rrs <- read_rds(here("data", "mpa_level_meta_results.Rds")) |> 
  filter(target_status == "Targeted") |> 
  janitor::clean_names() |> 
  as_tibble() |> 
  mutate(approx_rr = round(estimate / 0.1) * 0.1) 


sigh <- ca_rrs |> 
  left_join(total_rrs |> select(approx_rr, name, percent_mpa_effect, indicator_value, state_id),
            relationship = "many-to-many", by = "approx_rr") |> 
  left_join(state_depletions,relationship = "many-to-many",by = "state_id") |> 
  filter(!is.na(indicator_value)) |> 
  ungroup() |> 
  filter(between(depletion,0.2,0.8)) |> 
  group_by(name) |> 
  slice_sample(n = 200) |> 
  ungroup()

ca_indicator_performance <- sigh |>
  ungroup() |> 
  filter(is.finite(percent_mpa_effect), is.finite(indicator_value)) |>
  mutate(name = fct_relevel(name, "mpa_biomass","fished_biomass", "biomass", "catch"))


rr_cores <- ca_indicator_performance |> 
  group_by(name) |> 
  nest() |> 
  mutate(tmp = map(data, \(x) correlate(x$indicator_value, x$percent_mpa_effect, method = "spearman", quiet = TRUE))) |> 
  unnest(cols = tmp) |> 
  ungroup() 
 


# sigh |>
#   ggplot(aes(estimate)) +
#   geom_histogram(aes(estimate, fill = "observed"), bins = 20, alpha = 0.25) +
#   geom_histogram(aes(indicator_value, fill = "simulated"),bins = 20, alpha = 0.25) +
#   scale_x_continuous(breaks = seq(-2,5,by = 0.25) ) + 
#   facet_wrap(~name)

ca_rr_ind_plot <- sigh |>
  mutate(name = fct_relevel(name, "mpa_biomass","fished_biomass", "biomass", "catch")) |> 
  ggplot(aes(indicator_value, percent_mpa_effect)) +
  # geom_density_2d(alpha = 0.5, show.legend = FALSE) +
  # geom_bin_2d(color = "transparent", show.legend = FALSE, alpha = 0.5, bins = 10) +
    geom_point(aes(color = depletion), alpha = 0.75, size = 2) +
    geom_rug(sides = "br") +
  geom_hline(yintercept = 0,
             linetype = 2,
             color = "black") +
  geom_vline(xintercept = 0,
             linetype = 2,
             color = "black") +
      geom_richtext(data = rr_cores, aes(
    x = .25,
    y = 0.75,
    label = glue("&rho; = {round(x,2)}<br>psuedo-R² = {round(x^2,2)}")
  ),
  fill = NA, label.color = NA) +

  facet_wrap( ~ name, scales = "free_y", ncol = 2, labeller = labeller(name = outcome_labeller)) +
  scale_y_continuous(limits = c(NA, NA), oob = squish, name = "Simulated effect of MPA on..", labels = scales::percent) +
  scale_color_viridis_c(
    "BAU B/B0",
    limits = c(0, 1),
    option = "plasma",
    guide = guide_colorbar(
      frame.colour = "black",
      ticks.colour = "black",
      barwidth =  unit(11, "lines")
    )
  )  +  
  scale_x_continuous(limits = c(NA,NA), name = "Simulated Response Ratios (Biomass Inside / Biomass Outside - 1)") +
  theme(legend.position = "top")


figsaver(ca_rr_ind_plot)
```

```{r}

  sighbreaks <- seq(-1,3.5, by = .5)
  sighlabs <- paste0(sighbreaks * 100, "%")
  sighlabs[length(sighlabs)] <- "≥350%"

indicator_ranges <- comparison |> 
  filter(!is.na(percent_mpa_effect) & !is.na(indicator_value),
         !str_detect(indicator, "cpue"),
         !str_detect(indicator, "catch"),
         name == "mpa_biomass") |> 
  mutate(indicator = str_remove_all(indicator, "ind_")) |> 
    mutate(
      indicator = fct_recode(
      indicator,
      "Biomass Density BACI" = "biomass_baci",
      "Mean Length Response Ratio" = "length_rr",
      "Biomass Density Response Ratio" = "biomass_rr",
      "Effort Gradient" = "effort_gradient",
      "Biomass Density Gradient BACI" = "biomass_bag",
      "Biomass Density Gradient" = "biomass_gradient")
  )

indicator_ranges |> 
  ggplot(aes(prop_mpa, indicator_value)) + 
  stat_interval() + 
  geom_hline(yintercept = 0, linetype = 2, color = "red") +
  facet_wrap(~indicator) + 
  scale_color_brewer(name= "Quantile") + 
  scale_x_continuous(labels = scales::percent, name = "Seascape in MPA") + 
  scale_y_continuous(labels = sighlabs, breaks = sighbreaks)


```

```{r}
ind_performance <- comparison |>
    filter(observation_error == default_observation_error) |> 
  filter(str_detect(indicator, ("ind_effort_gradient"))) |>
  mutate(combo = paste(name, indicator, sep = " ~ ")) |>
  mutate(combo = str_remove_all(combo, "ind_"))

inds <- ind_performance |>
  filter(name %in% c("mpa_biomass","biomass", "catch", "fished_biomass"),
         between(prop_mpa,0.1,0.4)) |> 
    mutate(approx_rr = round(indicator_value / 0.1) * 0.1)


sigh <- inds |> select(approx_rr, name, percent_mpa_effect, indicator_value, state_id) |>  
  left_join(state_depletions,relationship = "many-to-many",by = "state_id") |> 
  filter(!is.na(indicator_value)) |> 
  ungroup() |> 
  filter(between(depletion,0.2,0.8)) |> 
  group_by(name) |> 
  slice_sample(n = 500) |> 
  ungroup()

tmp_performance <- sigh |>
  ungroup() |> 
  filter(is.finite(percent_mpa_effect), is.finite(indicator_value)) |>
  mutate(name = fct_relevel(name, "mpa_biomass","fished_biomass", "biomass", "catch"))


ind_cores <- tmp_performance |> 
  group_by(name) |> 
  nest() |> 
  mutate(tmp = map(data, \(x) correlate(x$indicator_value, x$percent_mpa_effect, method = "spearman", quiet = TRUE))) |> 
  unnest(cols = tmp) |> 
  ungroup() |> 
  mutate(max_y = map_dbl(data, \(x) 1.1 * pmin(2,max(x$percent_mpa_effect))))
 


# sigh |>
#   ggplot(aes(estimate)) +
#   geom_histogram(aes(estimate, fill = "observed"), bins = 20, alpha = 0.25) +
#   geom_histogram(aes(indicator_value, fill = "simulated"),bins = 20, alpha = 0.25) +
#   scale_x_continuous(breaks = seq(-2,5,by = 0.25) ) + 
#   facet_wrap(~name)

ca_rr_ind_plot <- sigh |>
  mutate(name = fct_relevel(name, "mpa_biomass","fished_biomass", "biomass", "catch")) |> 
  ggplot(aes(indicator_value, pmin(2,percent_mpa_effect))) +
  # geom_density_2d(alpha = 0.5, show.legend = FALSE) +
  # geom_bin_2d(color = "transparent", show.legend = FALSE, alpha = 0.5, bins = 10) +
    geom_point(aes(color = depletion), alpha = 0.5, size = 2) +
    geom_rug(sides = "br") +
  geom_hline(yintercept = 0,
             linetype = 2,
             color = "black") +
  geom_vline(xintercept = 0,
             linetype = 2,
             color = "black") +
      geom_richtext(data = ind_cores, aes(
    x = .75,
    y = max_y,
    label = glue("&rho; = {round(x,2)}<br>&rho;² = {round(x^2,2)}")
  ),
  fill = "white", label.color = NA, alpha = 0.75) +

  facet_wrap( ~ name, scales = "free_y", ncol = 2, labeller = labeller(name = outcome_labeller)) +
  scale_y_continuous(limits = c(NA, NA), oob = squish, name = "Simulated effect of MPA on..", labels = scales::percent, expand = expansion(mult = c(0,.5))) +
  scale_color_viridis_c(
    "BAU B/B0",
    limits = c(0, 1),
    option = "plasma",
    guide = guide_colorbar(
      frame.colour = "black",
      ticks.colour = "black",
      barwidth =  unit(11, "lines")
    )
  )  +  
  scale_x_continuous(limits = c(-.25,1.25), name = "Indicator") +
  theme(legend.position = "top")


figsaver(ca_rr_ind_plot)
```

# Scraps

Empirical techniques for doing so depend on at least one or more strong and often untested assumptions, such as no baseline differences in MPAs and selected reference sites, no exogenous environmental shocks, and no impact of the MPA on control.

The most reliable way to determine the causal effects of MPAs would be to run a series of large-scale experiments randomly deploying MPAs and then tracking their performance relative to randomly selected control areas. This is clearly not possible given the spatial and temporal scales involved, meaning that we must instead rely on imperfect approximations of this ideal design. The most common form in the literature are before-after and control-impact studies [@ban2019; @hopf2024]. However, own their own before-impact studies cannot control for unrelated environmental changes over the study period, and control-impact studies cannot control for baseline differences between the two selected areas. Both of these problems are a type of omitted variable bias, which can result in estimates of the "MPA effect" being positively or negatively biased, depending on the magnitude of the omitted variable effect on the outcome and the degree of correlation of the omitted variable with the variable of interest (in this case MPA status).

One solution to these problems is to combine the two approaches into a before-after-control-impact (BACI) study, which in theory can on its own control for both temporal shocks and baseline differences that might otherwise bias estimated MPA effects. BACI studies are rarer because they require greater amounts of data than before-after or control-impact on their own. While BACI can be a clear improvement, it still relies on some critical assumptions, importantly for this case what is known as the "Stable Unit Treatment Value Assumption" (SUTVA), which despite its nearly unintelligible name simply means that in order for something like BACI to work as intended, the "impact" units (in this case the MPA) cannot affect the "control" units (in this case the reference sites outside the MPA). For example, if closure of an MPA results in displacement of fishing effort to surrounding waters, and those surrounding waters are used in a BACI analysis, we have violated SUTVA since the "impact" site is now affecting our "control" site, and thus any estimates from BACI in this scenario will be biased.

This topic and its implications for interpretation of the empirical MPA literature has been discussed extensively, see @ferraro2018, @larsen2019, @byrnes2025. Despite this, the body of our empirical knowledge of MPA still depends on these studies that stand a good chance of being affected to some degree by omitted variable bias, SUTVA, or both. While our perception is that many users of these methods are aware of these potential issues, they remain in use because 1) they are often the only data variable and 2) the hope is that whatever biases may exist are small relative to the true effect size of interest.

Our results indicate that

Our results show that some indicators are potentially reliable measures of some outcomes

What next

-   Best practices would be full spatial stock assessment, and more of these should be done, but simply not possible

-   Current inside vs. outside indicators likely sufficient for "did MPA increase biomass inside / in total more here than there, but probably not for effect size"

-   Reseasrch on what exactly gradient indicatros do work for (e.g. conditional on movement and depletion, is there a useful gradient)

-   Ensemble indicators

Our results are not an empirical evaluation of the effects of MPAs, or a estimation of the true frequency of MPA outcomes XX. We have now way of knowing the relative frequency of the kinds of simulated states used here, so it is possible in the real world that one scenario...

Cite the summary of lynham. While not stated by the authors, it implies a general assumption of correlation: if MPAs are causing spillover (as quantified by gradients) therefore they are benefiting conservation and fisheries. Our results provide no evidence for this claim.

That MPAs produce spillover is not really a question; animals move to some degree, the question of interest then is how much, and we would aregue that the sheer magnitude of spillover itself is not really of interest, it is the net effect, in terms of conservatino or fishery gains outside, and that is what these things do not tell us.

All else being equal, bigger conservation outcomes equal bigger ratios, but bigger conservation outcomes mean lower fishing all else being equal

Why not CPUE?

There is a large body of "indicator" based empirical evidence from MPAs, which can create an impression of clear empirical conclusions around MPAs. For example, a 2018 NPR piece stated that

"The jury is in on marine reserves: They work. Research has repeatedly shown that fish numbers quickly climb following well-enforced fishing bans, creating tangible benefits for fishers who work the surrounding waters. In fact, many experts believe fishing will only be sustainable if marine reserves are expanded significantly." [@bland2018]

Simulating multiple species at a time is important because the same area of ocean protected could correspond to very different percentages of protection from the perspective of the population in question.

@hopf2024

@grace2024

Results are highly optimistic in terms of data quality: we assume no observation error, and that a true index of unfished species distribution are known to act as a control for habitat quality.

There are three problems, two statistical and one epistomological. For indicators lacking a clear causal identification strategy, the core problem is simply omitted variable bias (e.g. failing to control for background trends in the outcome of interest). For indicators with a causal identification strategy (e.g. BACI), the problem is SUTVA, i.e. that what is labeled as a control is fact affected by the treatment.

However, even when these statistical problems are resolved, there remains an epistimological problem, namely that what is measured, even if it is being measuerd correctl, does not always map on to the outcome of interest.

1.  MPAs are expanding. Despite this, lots of questions around what exactly we can expect from no-take MPAs

2.  Let's not overthink it: our simulations support the common-sense result that sufficiently sized and well-enforced no-take MPAs increase biomass inside their borders, often by a lot, though scale depending mostly on movement and fishing pressure. MPAs also generally have positive effects on total biomass, but not always, particularly because in 50% or more of simulations MPAs resulted in lower total biomass outside (but higher biomass in 50% as well).

3.  Catch outcomes largely mirrored distribution of biomass outside, with positive and negative outcomes about evenly split within MPA size bind and complexity.

4.  Why does this matter? These effects happen whether we measure them or not. But, effects are variable enough that measurement is useful (can't take effects for granted), for a few purpose. Given that negative impacts (catch, fished area, total biomass) are possible, if we weren't planning on them clearly want to measure outcomes to see if they happen and correct them if possible

5.  Even in the case of positive benefits, helpful to know "how positive", for example market-based programs, or to consider opportunity cost, or to adapt future management (how big does an MPA have to be to achieve X amount of conservation)

6.  Going to back to "let's not overthink it"; obvious that inside vs. outside is ripe for statistical problems. However, simulation testing says that it can be a perfectly fine, in fact good, indicator of the core purpose of an MPA: increase biomass inside the MPA.

7.  However, common indicators performed very badly as indicators of "outside" effects, either total biomass or catch. At extreme levels, they tended to be associated with positive conservation outcomes. However, in most cases almost no signal between indicator values degree of MPA effects. Runs contrary to conventional wisdom in papers of "clear response ratio is evidence for positive fishery effect". Seems to more often mean that the MPA was able to reduce fishing pressure so much that it resulted in a massive buildup inside but loss outside.

8.  So what? Link to @ban2019 . Case and empiric of MPAs often based on these indicators. We show that while these can be good indicators of "MPA was big enough to achieve positive effects inside", they are basically useless as indicators of outside processes

9.  @medoff2022 and @lynham2024 are two of the highest profile empirical MPA studies of the recent era. Both of these papers measured an indicator of MPA performance (CPUE near relative to far) for tunas, which then in the paper or in the press surrounding the paper made claims about outcomes. We explicitly test the performance of this type of gradient -based indicator, and find that it has almost no explanatory power as an indicator of biomass inside, outside, or both, or on total catch. As stated by @lynham2024, presence of a spillover benefit does not imply higher abundance or a more profitable fishery, but that message is quickly lost, as evidenced by the Editor's summary of @lynham2024 that states that "Such results clearly underline that MPAs are essential for protecting both species and fisheries", in direct contradiction of both @lynham2024 and the simulation results we show here, which is that indicators such as these don't provide reliable information on these broader-scale outcomes.

10. What do we suggest?

    1.  Shortening the game of telephone used around indicators. Results suggest that the indicators used here may indeed be useful for the original question of "did the MPA increase biomass inside", but have little signal for anything else

    2.  Development of a new set of data more closely tied to the actual outcomes in question (e.g. actual monitoring of economic performance)

    3.  Closer integration with the spatial stock assessment literature and world: if we want to make statements about effects of MPAs at population / fishery levels, then need to use the class of models that tracks things at that resolution @punt2023

### Caveats

Unbiased observation error is a little hard to say much about since impact depends on sample size, which you can simulate away here. But, tactical papers should think about what can actually be collected and then simulate test based around actual sampling process

No complexities like layered fisheres management or external economic shocks

Potential negative impacts are not unique to MPAs, a quota could also have leakage into a non-quota species

### Discussion phrases parking lot

Acknolweding that negative effects are possible across all areas can help reduce risk of a filedrawer effect

emphasize scale of response ratio axes: a response ratio value of 100%, meaning that there being roughly 100% more biomass inside the reserve than outside could have anything from a negative effect to a 300% effect.

Coming years will see large increases in design and evaluation of MPAs. Urgent need to design monitoring programs that are able to track performance of relevant metrics so that we can learn appropiately, etc.

Results show that MPA performance is variable enough to warrant investment in monitoring. Unintended consequences are possible, more ways for positive conservation effects, but effect sizes are highly variable holding MPA size constant, so important to measure how effective if MPAs are being used to guide management.

What drives negative conservation effects when they do happen? One or more of heterogeneous and negatively correlated habitat, effort displacement, open access dynamics, and the "avoid fishing" placement strategy. The last is interesting, as it under the most control of MPA planners, and is certainly an outcome that can happen (place the MPAs in marginal fishing grounds that are less likely to cause conflict). Examples?

Heavy fishing correlated with positive catch outcomes, particularly in simple scenarios, but not deterministic. Plenty of cases, particularly under the more complex scenario, where catch goes down even when overfishing present.

Depletion was generally most important important predictor of MPA effects, followed by measures of the correlation across species, adult movement, and sensitivity of the species to fishing (steepness). This is interesting for a few reasons, namely that suggests that models that don't take into account the ways that fleets interact with multiple species across hetergenous habitats can miss the mark (ovando et al. 2024 in review). Also interesting that factors such as recruit diffusion had very little importance?

Bioimass BACI / response ratio best predictors of MPA biomass, and both performed reasonably well, though not perfect. Plenty of simulations, particularly in more complex world, where MPA had a positive effect inside the reserve but BACI showed no effect. But, outcomes were correlated and very high BACI / response ratio values tended to correspond to high effect sizes, even in cases where the core assumptions of BACI / response ratio are violated. Compare effect sizes to ratio values reported in lester et al.

Population effect messier. Little directional disagreement (very high indicator, negative population effects, and negative effects associated with lower indicator values. But, wide variability, with very high indicator values corresponing with a very wide range of outcomes, ranging from 0 to 400%. So, to some extent, doesn't tell you much more than "had a positive effect", up until massive values. Massive values might be an artifact of confined nature of simulation space though.

The story with catch is much worse. None of the evaluated indicators had any meaningful ability on their own to predict catch outcomes. While @medoff2022 did not claim a catch increase in their paper, media coverage of said paper attributed higher CPUE near vs. far as a fishery benefit, whereas these results show that there is no relationship between the two, and indeed some bimodality where high values could either correspond to a massive benefit or a near 100% loss in the fishery (though that would presumably be noticed in the real world).

That MPAs can have negative effects on catch is intuitive, as the asymptotic effect of MPA size (closing 100% of the ocean) has to be a 100% loss in catch, and therefore even for scenarios where *some* MPA size could increase catch the effects of closures on catch has to become negative at some point MPA size. Our result that MPA can have a negative effect on total biomass outside, inside, and in total is less intuitive. This unintended consequence occurs in our model due to fleet dynamics. MPA can reduce biomass outside their borders by concentrating effort in the remaining fishing grounds to a level that cannot be compensated for by spillover from the MPA. Beyond this, if an MPA results in displacement of a fishing fleet from a relatively low biomass area for a given species to a high biomass area for that species, the net result can be net increase in the total fishing mortality on that species, and as a result a net decrease in the total biomass of that species, potentially both inside and outside the MPA since fish move across the borders. These negative effects on *Total* or *Inside* biomass were relatively rare, but are possible when species have heterogeneous and in cases negatively correlated distributions, and have heterogeneous vulnerability to different fishing fleets.

Ensemble shows possible to make some predictions in quadrants, but highly uncertain. Goes back to basics of "simulated MPAs generally improved biomass, but how much was highly variable, and no indicator mapped onto catch".

Very important to note. This all assumes perfectly measured information. Clearly, uncertain and/or biased sampling will make any relationships between indicators and outcomes more uncertain. Further research needed to consider reliability of indicators taking into account reasonable observation error.

So what does this suggest for MPA monitoring going forward? Conditional on quality of monitoring program always. Reality is often complicated, conceptual model important in thinking through how real is real enough. Results suggest that response ratio works best for MPA biomass, not bad for population biomass but very imprecise, and absolutely terribly for catch. No tested indicator was a reliable indicator of fishery outcomes. So, current indicators may be suitable for "are we succeeding inside the borders", could be used with caution for population level effects (no guarantee, see @ovando2021), and should not be used as evidence for fishery outcomes.

What does the future suggest? Better integration with spatial stock assessment literature, linking process-based models to indicators rather than pure statistical outcomes (e.g. leveraging basic life history in terms of time to effects etc) @punt2021 @nickols2019. Also, lots of advances in spatial-temporal modeling @thorson2024a. At the same time, collaborations with field biologists and the like critical to getting the conceptual model right. Need better integration with social science to figure out how do we effectively monitor socio-economic impacts.

Snappy concluding thing.

### 

high percent variability in catch at low exploitation since catch is close to zero

Indicators worked best for MPA conservation, then biomass. Biomass was uncertain, but positive was that generally speaking "high" indicator values corresponded to "high" conservation outcomes. But, those are really extreme values, map onto @lester2009. For smaller values, very uncertain, range from negative to positive.

For catch, no indicator performed well.

Note that this is all assuming equilibrium! NPV is important too, communities aren't happy if they go through 50 years of loss for benefits in the 51st year @ovando2016

Just as a quota for one species can have unintended consequences on another, so can MPAs.

Let us be clear. The simulation results presented here indicate that clearly MPAs are capable of benefiting biomass and catch. However, they are also capable of harming both.

We implement size limits all the time without needing complex causal inference. Part of the reason for that is that it's a more direct lever, but still. But, if the movement of the coming yeasr was "No Undersized by 2035", resulting in a massive global investment in the design and roll of out size limit programs, a deeper look at measuring the performance of size limits might be warranted.

@halpern2004

@franceschini2024

@kay2012

@kellner2007

@ohayon2021

MPAs are increasingly being looked to to achieve a range of objectives around the world [@grorud-colvert2021], 30x30, etc.

A common thread across these objectives is that they are often hard to measure directly, either due to logistics or problems of causal inference. By logistics, mean the challenge of collecting representative and high quality data on lots of species and fleets over space and time. By causal inference, even if you do all that, if catch goes up or down without a counterfactual hard to know if caused by MPA or something else.

As a result, empirical evidence for MPAs often depends on evaluating simplier indicators [@harford2021] that are interpreted as proxies for broader harder to measure objectives. For example "response ratios" measure attributes such as biomass densities inside MPAs relative to selected "reference" sites outside MPAs, which in turn are then interpreted as being indicative of MPA performance [@lester2009; @caselle2022].

However, interpreting empirical indicators as evidence for causal effects on broader processes can be challenging in social-ecological systems [@ferraro2018]. Even a perfectly measured indicator may not actually map onto the outcome in question. Violations of key assumptions in common empirical strategies (SUTVA, parallel trends, etc) can bias estimates.

To that end, this paper asks two questions:

1.  Are MPA outcomes variable enough to justify efforts to measure their performance?

2.  If so, which indicators are reliable measures of performance?

The first is important since if the effects of MPAs are sufficiently consistent and predictable, there isn't really a need for careful monitoring; if closing 30% of an area produces the same general magnitude of conservation and food security benefits 99% of the time, probably not worth spending time trying to track the 1% of surprises.

But, if MPA effects are variable, then we want to be able to measure performance to inform management (e.g. is population increasing or decreasing because of MPA), and offset trade offs (e.g. losses in food or profit related to fishing).

So far, our results show that 1. MPA outcomes can be highly variable, particulary for food security, and 2. empirical indicators commonly used to track performance of MPAs are actually poor predictors of real outcomes.

We suggest some solutions.

## Introduction Paragraphs

While the range of outcomes and protections conferred by MPAs varies widely, the most common type of MPAs are those that restrict fishing activities within their borders in order to achieve some set of conservation, and sometimes fishery, goals. The science behind this idea is simple. Removing fishing from a sufficiently large area relative to the movement dynamics of the species in question can result in an increase in the numbers and size of animals inside an MPA. Subsequently, some of these increases inside the MPA can produce "spillover" to surrounding waters, through dispersal of larvae or movement of post-recruitment animals xx (REFs) xx. These potential benefits come with potential costs of lost fishing opportunities inside the MPA and concentrated fishing effort outside. The net effect of these interacting costs and benefits has been the subject of intense debate, with competing claims as to the likely effects of MPA expansion on a range of objectives [@hilborn2004a; @gaines2010; @white2011; @sala2021; @ovando2023].

<!-- @hopf2024 assessed relationship between indicators and a set of -->

<!-- conservation outcomes. @hilborn2024 assessed the relationship between -->

<!-- one particular indicator and fishery outcomes. This paper builds on both -->

<!-- of those studies by greatly expanding the degree of social-ecological -->

<!-- realism built into the underlying model and assessing the performance of -->

<!-- a range of indicators on conservation and fishery outcomes and -->

<!-- trade-offs of MPAs. -->

The expansion of MPAs since the 1990s has seen a commensurate increase in empirical studies seeking to measure the effects of these MPAs on a range of outcomes in the real world. The most common forms often involve comparing ecological attributes such as biomass density inside or near to MPAs relative to outside or farther from MPAs, sometimes with measurements both before and after MPA implementation [@hopf2024; @lester2009; @lynham2024; @ban2019]. These studies have demonstrated that xx ... MPAs often contain higher abundances and biomass compared to unprotected areas, especially for species that are targeted by fishing activities and for MPAs that are older, larger, and fully protected [@lester2009; @edgar2014; @gill2017, @smith2024b]. However, biodiversity, spillover, and population effects are less clear ... add more detail. xx While this body of empirical work is extremely valuable, we argue that there are two major problems, the first statistical and the second epistemological, with the interpretation of this literature that cloud our understanding of the effects

The statistical challenge relates to the basic problems of establishing causality in coupled social-ecological systems in the absence of a true experimental design. MPAs are not randomly assigned, and so determining their effect from purely observational data is difficult. Simply comparing metrics inside versus outside or before versus after requires invoking a number of strong assumptions, such as no baseline differences in attributes or no exogenous shocks over time. Using before-after-control-impact (BACI, or difference-in-difference in some disciplines) studies can reduce some of these issues, but still requires selecting an appropriate control unit that is sufficiently similar to the MPA but also completely unaffected by the MPA. These challenges in MPA evaluation are well documented in the literature [@ferraro2018; @larsen2019; @byrnes2025], but the actual impact of these potential biases on the reliability of the empirical indicators of MPA performance has not been comprehensively evaluated.

The epistemological problem stems from extrapolating measured impacts on one outcome to another unobserved objective. This is because MPA studies often cannot measure the actual outcome of interest, but rather another outcome that is claimed as a proxy for the broader phenomenon of interest. For example, many studies are based on comparison of attributes of interest in waters near MPA borders compared to far from MPA borders, which is interpreted as evidence of spillover from the MPA [@halpern2009; @medoff2022; @lynham2024; @roberts2001]. This observed evidence of spillover is sometimes then assumed to imply an outcome for an in fact unobserved outcome, such as changes in total fishery catches or total population size. While possible, the reliability of these sorts of extrapolations have not been rigorously evaluated.

```{r}
#| eval: false

state_fishing <- inds_and_outs |> 
  select(state_id, difficulty, critter, f_v_m) |> 
  unique()

predictors <- quadrant_outcomes |> 
  left_join(state_fishing,by = join_by(state_id, critter, difficulty)) |> 
  left_join(state_depletions,by = join_by(state_id, critter, difficulty)) |> 
  select(quadrant, ends_with("raw"), state_id, f_v_m, depletion) |> 
  na.omit() |> 
  mutate(quadrant = as.factor(quadrant))

# create initial split
quadrant_split <- group_initial_split(predictors, group = state_id, prop = 0.5)

# design cross validation splits

training_split <- training(quadrant_split)

testing_split <- testing(quadrant_split)

# model_spec <-
#   rand_forest(mtry = tune(),
#               min_n = tune(),
#               trees = tune()) %>%
#   set_engine("ranger") %>%
#   set_mode("classification")


  
model_spec <-
  rand_forest(mtry = tune(),
              min_n = tune(),
              trees = 100) %>%
  set_engine("ranger") %>%
  set_mode("classification")

model_recipe <- recipe(quadrant ~ ., data = training_split) |> 
  step_rm(state_id,f_v_m, depletion) |> 
  step_smote(quadrant,over_ratio = 0.5) 

# |> 
#   prep()
# 
# d = bake(a, new_data = NULL) |> 
#   count(quadrant, name = "training")


model_recipe_f <- recipe(quadrant ~ ., data = training_split) |> 
  step_rm(state_id, depletion) |> 
  step_smote(quadrant,over_ratio = 0.5) 


model_recipe_dep <- recipe(quadrant ~ ., data = training_split) |> 
  step_rm(state_id, f_v_m) |> 
  step_smote(quadrant,over_ratio = 0.5)

model_f_only <- recipe(quadrant ~ ., data = training_split) |> 
  step_rm(starts_with("ind_"),depletion,state_id) |> 
  step_smote(quadrant,over_ratio = 0.5)
# 
# a = bake(prep(model_f_only), new_data = NULL)


model_workflow <- 
  workflow() %>% 
  add_model(model_spec) %>% 
  add_recipe(model_recipe)

model_workflow_f <- model_workflow |> 
  update_recipe(model_recipe_f)

model_workflow_dep <- model_workflow |> 
  update_recipe(model_recipe_dep)

model_workflow_fonly <- model_workflow |> 
  update_recipe(model_f_only)

if (tune_grids | !file.exists(file.path(results_dir,"tuned_quant_grid.rds"))){
  future::plan(future::multisession, workers = 8)
  
  tuned_quant_grid <-
    model_workflow %>%
    tune_grid(
      resamples = group_vfold_cv(training_split, group = state_id, v = 2),
      grid = 20,
      control = control_grid(save_pred = FALSE)
    )
  
  future::plan(future::sequential)


write_rds(tuned_quant_grid, file.path(results_dir,"tuned_quant_grid.rds"))
} else {
  
  tuned_quant_grid <- read_rds(file.path(results_dir,"tuned_quant_grid.rds"))
  
}

model_spec <-
  rand_forest(mtry = tune(),
              min_n = tune(),
              trees = 100) %>%
  set_engine("ranger", importance = "permutation") %>%
  set_mode("classification")


model_workflow <- 
  workflow() %>% 
  add_model(model_spec) %>% 
  add_recipe(model_recipe)


best_params <- tune::select_best(tuned_quant_grid, metric = "accuracy")

tuned_model_workflow <- model_workflow |> 
  finalize_workflow(best_params)

tuned_model_workflow_f <- model_workflow_f |> 
  update_model(model_spec) |> 
  finalize_workflow(best_params)

tuned_model_workflow_dep <- model_workflow_dep |> 
    update_model(model_spec) |> 
  finalize_workflow(best_params)


tuned_model_workflow_fonly <- model_workflow_fonly |>
  update_model(model_spec) |>
  finalize_workflow(best_params)

fits <- list()
fits$tuned_fit <- parsnip::fit(tuned_model_workflow, training_split)

fits$tuned_fit_f <- parsnip::fit(tuned_model_workflow_f, training_split)

fits$tuned_fit_dep <- parsnip::fit(tuned_model_workflow_dep, training_split)

fits$tuned_fit_fonly <- parsnip::fit(tuned_model_workflow_fonly, training_split)

quadrant_vip_plot <- fits$tuned_fit %>% 
  extract_fit_parsnip() %>% 
  vip(num_features = 40) + 
  scale_y_continuous(name = "Permutation-Based Variable Importance") + 
  labs(title = "A)")


# explain_fit <- DALEXtra::explain_tidymodels(
#   tuned_fit,
#   data = training_split,
#   y = tmp$delta,
#   label = "rf",
#   colorize = TRUE,
#   verbose = FALSE
# )


# pdp_fit  <- model_profile(
#   explain_fit,
#   type = "partial",
#   N = 500
# )


# pd_plot <- plot(
#   pdp_fit,
#   geom = "points"
# ) +
#   theme_minimal() +
#   labs(title = "B)", subtitle = '', y = "Predicted Delta")

# fig <- catch_vip_plot| pd_plot

make_quadrant_predictions <- function(fit, testing_split) {
  
  predicted_quadrant <- predict(fit, testing_split)
  
  testing_split$predicted_quadrant <- predicted_quadrant$.pred_class
  
  acc <-  testing_split |>
    group_by(quadrant) |>
    summarise(accuracy = mean(quadrant == predicted_quadrant)) |>
    ungroup() |>
    mutate(mean_accuracy = mean(accuracy))
  
  confusion_matrix <- testing_split |>
    group_by(quadrant, predicted_quadrant) |>
    count() |>
    ungroup() |>
    complete(predicted_quadrant, quadrant, fill = list(n = 0)) |>
    group_by(predicted_quadrant) |>
    mutate(pn = n / sum(n), label_pn = percent(pn, accuracy = 1))
  
  out <- list(accuracy = acc, confusion_matrix = confusion_matrix)
  
}

fit_performance <- tibble(fits = fits, fit_name = names(fits)) |> 
  mutate(performance = map(fits, make_quadrant_predictions, testing_split = testing_split))

rm(fits)

fit_performance <- fit_performance |> 
  mutate(accuracy = map(performance, "accuracy"))



```

```{r}
#| label: fig-quadrant-prediction 
#| fig-cap: Confusion matrix of indicator based ensemble model of quadrant outcomes of MPAs.
#| eval: false
  

fig <- fit_performance$performance[[1]]$confusion_matrix|> 
  ggplot(aes(predicted_quadrant, quadrant)) +
  geom_tile(aes(fill = pn), color = "black") +
  geom_abline(
    color = "tomato",
    slope = 1,
    intercept = 0,
    alpha = 0.5,
    linetype = 2
  ) +
  geom_text(aes(label = n), size = 2, color = "tomato") +
  scale_fill_viridis_c(limits = c(0,1)) +
  theme(axis.text.x = element_text(
    angle = 45,
    vjust = 1,
    hjust = 1
  )) +
  scale_y_discrete(name = "Simulated Reality") +
  scale_x_discrete(name = "Ensemble Model Prediction") + 
  labs(title = "A") + 
  guides(fill = "none")
  

figsaver(fig)

  
```

```{r}
#| label: fig-tradeoffs
#| fig-cap: Distribution of simulation outcomes for total biomass (x-axis) and catch (y-axis), by proportion of seascape in MPA (rows), and scenario complexity (columns). Color indicates the business as usual degree of depletion (Biomass divided by unfished biomass) in the absence of the MPA. 
  # mutate(percent_mpa_effect = pmin(100, 100 * percent_mpa_effect))


  
  # quad_labels <- data.frame(
  #   x = c(50, 50, -24, -24),
  #   y = c(50, -50, 50, -50),
  #   label = c("Win-Win", "Win-Lose", "Lose-Win", "Lose-Lose")
  # )


  sighbreaks <- seq(-1,2, by = 1)
  sighlabs <- paste0(sighbreaks * 100, "%")
  sighlabs[length(sighlabs)] <- "≥200%"


  thirty_protected_plot <- mpa_outcomes |>
    filter(observation_error == default_observation_error) |> 
    mutate(mpa_bin = as.character(cut(numeric_prop_mpa, breaks = c(0, 0.15, 0.3, 6)))) |> 
    mutate(mpa_bin = as_factor(case_when(mpa_bin == "(0,0.15]" ~ "0-15%", mpa_bin =="(0.15,0.3]" ~ "15-30%", .default = "30-60%"))) |> 
    # filter(numeric_prop_mpa <= 0.4) |>
    # filter(between(numeric_prop_mpa, 0.2, 0.4)) |>
    ggplot(aes(biomass, catch)) +
    geom_vline(xintercept = 0, color = "black", linetype = 2) +
    geom_hline(yintercept = 0, color = "black",linetype = 2) +
    geom_point(aes(color = pmin(1,depletion)), alpha = 0.25) +
    # geom_rug(alpha = 1/4) +
    # geom_text(
    #   data = quad_labels,
    #   aes(x, y, label = label),
    #   size = 6,
    #   color = "red"
    # ) +
    scale_color_viridis_c(
      "BAU B/B0",
      limits = c(0, 1),
      option = "plasma",
      guide = guide_colorbar(
        frame.colour = "black",
        ticks.colour = "black",
        barwidth =  unit(11, "lines")
      )
    )  +
    scale_x_continuous(name = "Change in Species Biomass",
                       oob = squish,
                       limits = c(NA, 2), 
                       labels = scales::percent) +
    scale_y_continuous(name = "Change in Species Catch",
                       oob = squish,
                       limits = c(NA, 2), 
                       breaks = sighbreaks,
                       labels = sighlabs) +
    theme(legend.position = "bottom") +
    facet_grid(mpa_bin~fct_rev(difficulty))
  
  
  # thirty_protected_plot <- ggMarginal(thirty_protected_plot,
  #                                     type = "histogram",
  #                                     fill = "steelblue")
  
  
  
  figsaver(thirty_protected_plot)

  #ggplotly(thirty_protected_plot)
```

```{r}
#| label: fig-sigh
#| fig-cap: Probably won't include, but measures of performance with different model specs
#| eval: false

fit_performance |> 
  select(fit_name, accuracy) |> 
  unnest(cols = accuracy) |> 
  ggplot(aes(reorder(quadrant, accuracy), accuracy, fill = fit_name)) + 
  geom_col(position = "dodge") + 
  coord_flip()

fit_performance |> 
  select(fit_name, accuracy) |> 
  unnest(cols = accuracy) |> 
  group_by(fit_name) |> 
  summarise(accuracy = mean(mean_accuracy)) |> 
  ggplot(aes(reorder(fit_name, accuracy), accuracy)) + 
  geom_col()

```

```{r}
moreofthis <- function(tmp){

  sigh <- tmp |> 
  mutate(nprop_mpa = as.numeric(as.character(prop_mpa))) |> 
  mutate(percent_mpa_effect = pmin(percent_mpa_effect,4))|> 
  rsample::initial_split()

a = ranger(percent_mpa_effect ~ f_v_m + nprop_mpa, data = analysis(sigh))

b <- predict(a,data = assessment(sigh))

blah <- assessment(sigh) |> 
  mutate(effect_hat = b$predictions)

out <- blah |> 
  summarise(rmse = yardstick::rmse_vec(percent_mpa_effect, effect_hat),
            r2 = yardstick::rsq_vec(percent_mpa_effect, effect_hat))
}

# benchmarks <- inds_and_outs |> 
#   group_by(name) |> 
#   nest() |> 
#   mutate(tmp = map(data,moreofthis)) |> 
#   select(name, tmp) |> 
#   unnest(cols = tmp)
# 
# benchmarks
#   

measure_performance <- function(x) {
  augx <- broom::augment(x)
  # browser()
  # plot((augx$.fitted),(augx$percent_mpa_effect))
  out <- data.frame(
    rmse = yardstick::rmse_vec(augx$percent_mpa_effect, augx$.fitted),
    bias = mean(augx$percent_mpa_effect - augx$.fitted)
  )
  
}

indicator_performance <- comparison |>
  left_join(state_depletions, by = c("critter", "state_id", "difficulty")) |> 
  ungroup() |> 
  filter(observation_error == default_observation_error) |> 
  filter(is.finite(percent_mpa_effect), is.finite(indicator_value)) |>
  filter(!is.na(indicator)) |>
  mutate(percent_mpa_effect = percent_mpa_effect) |>
  group_by(name, indicator) |>
  nest() |>
  mutate(model = map(data, ~ lm(
    percent_mpa_effect ~ indicator_value, data = .x
  ))) |>
  mutate(model_summary = map(model, broom::glance)) |>
  mutate(model_performance = map(model, measure_performance)) |>
  unnest(cols = c(model_summary, model_performance)) |>
  select(-model, -data)

best_indicators <- indicator_performance |>
  group_by(name) |>
  filter(rmse == min(rmse)) |>
  rename(best_indicator = indicator)

difficulty_indicator_performance <- comparison |>
  ungroup() |>
  filter(observation_error == default_observation_error) |>
  filter(is.finite(percent_mpa_effect), is.finite(indicator_value)) |>
  filter(!is.na(indicator)) |>
  mutate(percent_mpa_effect = percent_mpa_effect) |>
  group_by(name, indicator, difficulty) |>
  nest() |>
  mutate(model = map(data, ~ lm(
    percent_mpa_effect ~ indicator_value, data = .x
  ))) |>
  mutate(model_summary = map(model, broom::glance)) |>
  mutate(model_performance = map(model, measure_performance)) |>
  unnest(cols = c(model_summary, model_performance)) |>
  select(-model, -data) |>
  ungroup() |> 
  mutate(
    name = fct_recode(
      name,
      "Biomass Outside" = "fished_biomass",
      "Biomass Inside" = "mpa_biomass",
      "Total Biomass" = "biomass",
      "Catch" = "catch"
    )
  ) |> 
  mutate(combo = paste(name, indicator, sep = " ~ ")) |>
  mutate(combo = str_remove_all(combo, "ind_"))


best_performers <- comparison |>
  left_join(best_indicators, by = "name") |>
  filter(observation_error == default_observation_error) |> 
  filter(indicator == best_indicator) |>
    mutate(
    name = fct_recode(
      name,
      "Biomass Outside" = "fished_biomass",
      "Biomass Inside" = "mpa_biomass",
      "Total Biomass" = "biomass",
      "Catch" = "catch"
    )
  ) |> 
  mutate(combo = paste(name, indicator, sep = " ~ ")) |>
  mutate(combo = str_remove_all(combo, "ind_"))


best_indicators_noncausal <- indicator_performance |>
  filter(str_detect(indicator, ("_rr|_gradient"))) |>
  group_by(name) |>
  filter(rmse == min(rmse)) |>
  rename(best_indicator = indicator)

best_performers_noncausal <- comparison |>
    filter(observation_error == default_observation_error) |> 
  filter(str_detect(indicator, ("_rr|_gradient"))) |>
  left_join(best_indicators_noncausal, by = "name") |>
  filter(indicator == best_indicator) |>
  mutate(combo = paste(name, indicator, sep = " ~ ")) |>
  mutate(combo = str_remove_all(combo, "ind_"))
```

```{r}
#|label: total-ind-performance
#|
measure_performance <- function(x){
  
  augx <- broom::augment(x)
  # browser()
  # plot(exp(augx$.fitted),exp(augx$log_percent_mpa_effect))
  out <- data.frame(rmse = yardstick::rmse_vec(augx$percent_mpa_effect, augx$.fitted),
                    bias = mean(augx$percent_mpa_effect- augx$.fitted))
  
}

total_indicator_performance <- total_comparison |>
  filter(observation_error == default_observation_error) |> 
  filter(is.finite(percent_mpa_effect), is.finite(indicator_value)) |> 
  filter(!is.na(indicator)) |> 
    mutate(percent_mpa_effect = percent_mpa_effect) |> 
  group_by(name, indicator) |>
  nest() |>
  mutate(model = map(data, ~ lm(
    percent_mpa_effect ~ indicator_value, data = .x
  ))) |> 
  mutate(model_summary = map(model, broom::glance)) |> 
  mutate(model_performance = map(model, measure_performance)) |> 
  unnest(cols = c(model_summary,model_performance)) |> 
  select(-model,-data) |> 
  mutate(rmse = pmin(5,rmse))

best_total_indicators <- total_indicator_performance |> 
  group_by(name) |> 
  filter(r.squared == max(r.squared)) |> 
  rename(best_indicator = indicator)

best_total_performers <- total_comparison |> 
    filter(observation_error == default_observation_error) |> 
  left_join(best_total_indicators, by ="name") |> 
  filter(indicator == best_indicator) |> 
  mutate(combo = paste(name, indicator, sep = " ~ ")) |> 
  mutate(combo = str_remove_all(combo, "ind_"))
  

best_total_indicators_noncausal <- total_indicator_performance |> 
  filter(str_detect(indicator,("_rr|_gradient"))) |> 
  group_by(name) |> 
  filter(rmse == min(rmse)) |> 
  rename(best_indicator = indicator)

best_total_performers_noncausal <- total_comparison |> 
  filter(str_detect(indicator,("_rr|_gradient"))) |> 
  left_join(best_total_indicators_noncausal, by ="name") |> 
  filter(indicator == best_indicator) |> 
  mutate(combo = paste(name, indicator, sep = " ~ ")) |> 
    mutate(combo = str_remove_all(combo, "ind_"))

```

```{r}
#| label: fig-top-performers
#| fig-cap: Indicator value (x-axis) and outcome value (y-axis) for the best performing indicator for the outcome in question (row label) broken out by simulation complexity (rows). Candidate indicators include those with access to data before, after,inside, and outside of MPAs. 'baci' stande for Before-After-Control-Impact, 'rr' stands for Response Ratio, 'ba' stands for Before-After.
#| eval: false


tmp <- best_performers |>
  left_join(state_depletions) |>
  ungroup() |>
  slice_sample(prop = 0.6) |> 
  ungroup() |> 
   mutate(combo = str_remove_all(combo, "biomass_")) |>
  mutate(combo = fct_relevel(combo, "Biomass Inside ~ baci", "Biomass Outside ~ rr"  ,"Total Biomass ~ baci"))
# 

model_summary <- difficulty_indicator_performance |>
  ungroup() |> 
  mutate(combo = str_remove_all(combo, "biomass_")) |>
  mutate(combo = fct_relevel(combo, "Biomass Inside ~ baci","Biomass Outside ~ rr"  ,"Total Biomass ~ baci")) |> 
  filter(combo %in% tmp$combo)

a = tmp |> 
  filter(str_detect(combo, "Catch")) |> 
  group_by(difficulty) |> 
  summarise(max(indicator_value))

fig <- tmp |>
  group_by(indicator) |>
  mutate(indicator_value = indicator_value) |>
  ggplot(aes(indicator_value, percent_mpa_effect)) +
  geom_point(aes(color = depletion), alpha = 0.25) +
  geom_rug(alpha = 1 / 4) +
  # geom_hex(bins = 10) +
  geom_hline(yintercept = 0,
             linetype = 2,
             color = "tomato") +
  geom_vline(xintercept = 0,
             linetype = 2,
             color = "tomato") +
  geom_richtext(data = model_summary, aes(
    x = 2,
    y = 1,
    label = glue("R<sup>2</sup> = {round(r.squared,2)}")
  )) +
  facet_grid(fct_rev(difficulty) ~ combo, scales = "free_x") +
  scale_y_continuous(
    oob = squish,
    labels = scales::percent,
    name = "MPA Effect",
    limits = c(NA, 2)
  ) +
  scale_x_continuous(name = "BACI Estimate", limits = c(NA,2)) +
  scale_color_viridis_c(
    "BAU B/B0",
    limits = c(0, 1.1),
    option = "plasma",
    guide = guide_colorbar(
      frame.colour = "black",
      ticks.colour = "black",
      barwidth =  unit(11, "lines")
    )
  )  +    theme(legend.position = "bottom")

figsaver(fig)

```

```{r}
#| label: tbl-test

r2_table <- indicator_performance |> 
  mutate(indicator = str_remove_all(indicator, "ind_")) |> 
  select(name, indicator, r.squared) |> 
  mutate(r.squared = round(r.squared / 0.01) * 0.01) |> 
  group_by(name) |> 
  mutate(order = mean(r.squared)) |> 
  ungroup() |> 
  mutate(indicator = fct_reorder(indicator,r.squared)) |> 
  arrange(rev(indicator)) |> 
  select(-order) |> 
  pivot_wider(names_from = name, values_from = r.squared) |> 
  ungroup() |> 
  mutate(metric = "R2") |> 
  select(indicator, metric, everything())


rmse_table <- indicator_performance |> 
  mutate(indicator = str_remove_all(indicator, "ind_")) |> 
  select(name, indicator, rmse) |> 
  mutate(rmse = round(rmse / 0.01) * 0.01) |> 
  group_by(name) |> 
  mutate(order = mean(rmse)) |> 
  ungroup() |> 
  mutate(indicator = fct_reorder(indicator,rmse)) |> 
  arrange(rev(indicator)) |> 
  select(-order) |> 
  pivot_wider(names_from = name, values_from = rmse) |> 
  ungroup() |> 
  mutate(metric = "RMSE") |> 
  select(indicator, metric, everything())

metric_table <- r2_table |> 
  bind_rows(rmse_table) |> 
  arrange(indicator)


metric_table |> 
  gt() |> 
  tab_caption("R2 and RMSE of each tested indicator as a predictor of each considered outcome. Will clean this up xx.")
 
```

```{r}
outcome_labeller <- c(
  fished_biomass = "Biomass Outside",
  mpa_biomass = "Biomass Inside",
  biomass = "Total Biomass",
  catch = "Catch"
)

  sighbreaks <- seq(-1,2, by = .5)
  sighlabs <- paste0(sighbreaks * 100, "%")
  sighlabs[length(sighlabs)] <- "≥200%"

fig <- mpa_outcomes |>
  filter(observation_error == default_observation_error) |>
  select(depletion,
         numeric_prop_mpa,
         difficulty,
         fished_biomass,
         mpa_biomass,
         biomass,
         catch) |>
  pivot_longer(-(depletion:difficulty)) |>
  mutate(mpa_bin = cut(numeric_prop_mpa, breaks = c(0, 0.15, 0.3, 6)),
         name = fct_relevel(name, "mpa_biomass","fished_biomass", "biomass"),
         difficulty = fct_relevel(difficulty,"simple", "medium")) |>
          mutate(mpa_bin = as_factor(case_when(mpa_bin == "(0,0.15]" ~ "0-15%", mpa_bin =="(0.15,0.3]" ~ "15-30%", .default = "30-60%"))) |>
    # filter(numeric_prop_mpa < 0.66, numeric_prop_mpa > 0.1) |> 
  ggplot(aes(x = difficulty, y = value)) +
  geom_hline(yintercept = 0, linetype = 2) +
  stat_interval(aes(color_ramp = after_stat(level),color = difficulty), .width = c(0.5,0.8,1)) +
  # stat_interval(aes(difficulty, value)) +
  # geom_density(aes(value, after_stat(scaled),fill = difficulty, color = difficulty),alpha = 0.25) +
  facet_grid(mpa_bin ~ name, scales = "free_y", labeller = labeller(name = outcome_labeller)) + 
  scale_x_discrete(name = '') +
  scale_y_continuous(name= "MPA Effect",limits = c(NA,2), oob = squish, breaks = sighbreaks, labels = sighlabs) +
  theme(legend.position = "bottom",
        axis.text.x = element_text(size = 12, angle = 45, hjust = 1, vjust = 1),
        axis.text.y = element_text(size = 8),
        panel.spacing.x = unit(2, "lines")) + 
  ggdist::scale_colour_ramp_discrete(name = "Quantile Range", labels = c("100%","80%", "50%")) + 
  guides(color = "none")

 
figsaver(fig)
```

```{r}
mape_meep_rho <- comparison |> 
  filter(!is.na(percent_mpa_effect) & !is.na(indicator_value),
         !str_detect(indicator, "cpue"),
         !str_detect(indicator, "catch")) |> 
  group_by(difficulty,name, indicator) |> 
  nest() |> 
  mutate(error = map(data, \(x) rmse_vec(x$percent_mpa_effect, x$indicator_value)),
         bias = map(data, \(x) mean(x$indicator_value - x$percent_mpa_effect)),
         rho = map(data, \(x) correlate(x$indicator_value, x$percent_mpa_effect, method = "spearman", quiet = TRUE)),
          indicator = str_remove_all(indicator, "ind_")) |> 
  unnest(cols = c(error,bias, rho)) |> 
  rename(rho = x) |> 
  ungroup() |> 
  mutate(
      name = fct_recode(
      name,
      "Biomass Outside" = "fished_biomass",
      "Biomass Inside" = "mpa_biomass",
      "Total Biomass" = "biomass",
      "Catch" = "catch"),
      indicator = fct_recode(
      indicator,
      "Biomass Density BACI" = "biomass_baci",
      "Mean Length Response Ratio" = "length_rr",
      "Biomass Density Response Ratio" = "biomass_rr",
      "Effort Gradient" = "effort_gradient",
      "Biomass Density Gradient BACI" = "biomass_bag",
      "Biomass Density Gradient" = "biomass_gradient")
  ) |> 
    mutate(name = fct_relevel(name, "Biomass Inside","Biomass Outside"  ,"Total Biomass"))

 
 
a <- mape_meep_rho |> 
  ggplot() + 
  geom_tile(aes(name, reorder(indicator, abs(rho)), fill = rho), color = "black") + 
  geom_text(aes(name, reorder(indicator, abs(rho)), label = round(rho^2,2))) +
  facet_wrap(~fct_rev(difficulty)) + 
  scale_fill_gradient2(name = "Correlation between Indicator and Outcome",limits = c(-1,1),
                       low = "tomato", high = "steelblue", mid = "white",
                       guide = guide_colorbar(frame.colour = "black",ticks.colour = "black", theme = theme(legend.key.width  = unit(8, "lines"),
  legend.key.height = unit(1, "lines")),
  direction = "horizontal",
  title.position = "left",
  title.vjust = 0.75)) + 
  scale_x_discrete(expand = c(0,0), position ="bottom", name = '') + 
  scale_y_discrete(expand = c(0,0), name = '') + 
  theme(legend.position = "top",
        axis.text.x = element_text(angle = 35, vjust = 1, hjust = 1)) + 
    labs(caption = "Text shows psuedo-R<sup>2</sup>", title = "A") +
  theme(plot.caption = element_textbox())



b <- mape_meep_rho |> 
  ggplot() + 
  geom_tile(aes(name, reorder(indicator, (rho)), fill = error), color = "black") + 
  ggtext::geom_richtext(aes(name, reorder(indicator, (rho)), label = round(100 * bias,0)), size = 3, alpha = 0.75,color = "black") +
  facet_wrap(~fct_rev(difficulty)) + 
  scale_fill_viridis_c(name = "RMSE",option = "plasma",limits = c(0, NA),
                       guide = guide_colorbar(frame.colour = "black",ticks.colour = "black", theme = theme(legend.key.width  = unit(8, "lines"),
  legend.key.height = unit(1, "lines")),
  direction = "horizontal",
  title.position = "left",
  title.vjust = 0.75), labels = scales::percent) + 
  scale_x_discrete(expand = c(0,0), position ="bottom", name = '') + 
  scale_y_discrete(expand = c(0,0), name = '') + 
  theme(legend.position = "top",
        axis.text.x = element_text(angle = 35, vjust = 1, hjust = 1)) + 
  labs(caption = "Text shows mean percentage-point bias (Indicator - Effect)", title = "B")

a / b + plot_layout(guides = "collect") & theme(legend.position = "top")

rm("b")
```
