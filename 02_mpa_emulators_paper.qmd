---
title: "Predicted Effects of Marine Protected Areas on Conservation and Catches are Sensitive to Model Structure."
author:
  - name: Daniel Ovando
    affiliation:
      - name: Inter-American Tropical Tuna Commission
        department: Ecosystem & Bycatch Group
        id: 1
        address: 8901 La Jolla Shores Drive
        city: La Jolla
        state: CA
        postal-code: 92037
    email: dovando@iattc.org
    attributes:
      equal-contributor: true
      corresponding: true
format:
  html: 
    toc: true
  pdf:
    toc: true
  nature-pdf:
    keep-tex: true
    classoption: [lineno, referee]
    toc: true
    equal-margins: true
bibliography: references.bib
abstract: |
 Use of Marine Protected Areas (MPAs) are expanding around the world. MPAs can have a wide variety of objectives (e.g. science, conservation, food security, cultural value), and scientific guidance on how to design MPAs to achieve objectives is often based on simulation modeling. Many different models may all provide an answer to questions such as the predicted change in population biomass and fisheries catches resulting from implementation of an MPA. When multiple levels of model complexity are all in theory capable of answering the same question, and the models cannot be confronted with data directly, the decision of what level of model complexity to use can be *ad hoc*. In this, paper I compare the predicted effects of MPAs on catch and biomass produced by a spatially explicit age-structured multi-species and multi-fleet (*High-definition*) model to the predictions generated by a two-patch surplus production (*Low-definition*) model, fitted to emulate the *High-definition* model. I found that in many cases the predictions made by the two models were markedly different, with the *Low-definition* model frequently predicting substantially higher biomass benefits from MPAs than the *High-definition* model, and in some cases incorrectly estimating the direction (positive or negative) of the MPA effects. However I also found that the *Low-definition* model has strategic value for broad classification and ranking exercises. My results show that care should be taken in selecting and interpreting the results of MPA simulation models, and that research is needed to understand what models are best suited to what policy recommendations when multiple viable options exist. 
keywords: [MPA, Simulation Modeling, Model Selection, Conservation Planning, Food Security]
execute: 
  echo: false
  warning: false
---

```{r}
#|label: setup
#|include: false

foos <- list.files(here::here("R"))

purrr::walk(foos, ~ source(here::here("R", .x)))

# prep_run(run_name = "emulators_v1.0") # loads packages and creates and returns some global variables for the analysis

prep_run(run_name = "emulators_v1.1") # loads packages and creates and returns some global variables for the analysis



# clean up figures generated in the report to ensure that all figures come from a fresh state
paper_figs <- file.path(fig_dir,list.files(fig_dir)[list.files(fig_dir) |> str_detect("fig_")])

unlink(paper_figs)

difficulties <- c("simple","medium","complex")

min_depletion <- 0.00001

tune_grids <- FALSE
```

```{r}
#| label: load-results
#| include: false


results <- list.files(results_dir)

results <- results[str_detect(results,"(processed_sims.rds$)|(emulated_experiment_results.rds)|(placement_experiments.rds)|(state_experiments.rds)|(emulator_fits.rds$)")]



purrr::walk(results, ~ assign(str_remove_all(.x,"\\.rds$"), read_rds(here(results_dir,.x)), envir = .GlobalEnv))



critter_namer <- function(x){
  
  y <- forcats::fct_recode(x,shark = "carcharhinus amblyrhynchos",grouper = "epinephelus fuscoguttatus",snapper = "lutjanus malabaricus", "deep-snapper" = "pristipomoides filamentosus")
  
}

# process marlin simulations

## get MPA sizes

simple <- simple_state_experiments |> 
  select(state_id, depletion) |> 
  unnest(cols = depletion) |> 
  mutate(difficulty = "simple")

medium <- medium_state_experiments |> 
  select(state_id, depletion) |> 
  unnest(cols = depletion) |> 
  mutate(difficulty = "medium")

complex <- complex_state_experiments |> 
  select(state_id, depletion) |> 
  unnest(cols = depletion) |> 
  mutate(difficulty = "complex")

  state_depletions <- simple |> 
  bind_rows(medium) |> 
  bind_rows(complex) |> 
  mutate(state_id = glue("{difficulty}_{state_id}"))
  
  valid_state_depletions <- state_depletions |> 
    filter(depletion >= min_depletion)


simple <- simple_processed_sims$mpa_outcomes |> 
  mutate(difficulty = "simple")

medium <- medium_processed_sims$mpa_outcomes |> 
  mutate(difficulty = "medium")

complex <- complex_processed_sims$mpa_outcomes |> 
  mutate(difficulty = "complex")

# results of all marlin simulations
highres <- simple |> 
  bind_rows(medium) |> 
  bind_rows(complex) |> 
  mutate(state_id = glue("{difficulty}_{state_id}")) |> 
  mutate(id = glue("{difficulty}-{id}")) |> 
  mutate(prop_mpa = as_factor(prop_mpa))


simple <- simple_emulated_experiment_results |> 
  mutate(difficulty = "simple")

medium <- medium_emulated_experiment_results |> 
  mutate(difficulty = "medium")

complex <- complex_emulated_experiment_results |> 
  mutate(difficulty = "complex")

# results of all PT simulations
lowres <- simple |> 
  bind_rows(medium) |> 
  bind_rows(complex) |> 
  mutate(state_id = glue("{difficulty}_{state_id}")) |> 
  unnest(cols = mpa_experiment) |> 
  filter(year == max(year)) |> 
  mutate(prop_mpa = as_factor(prop_mpa))

tidy_lowres <- lowres |>
  mutate(percent_biomass = b_mpa / b_bau - 1,
         percent_catch = yield_mpa / yield_bau - 1) |>
  select(state_id, prop_mpa, critter, starts_with("percent")) |>
  pivot_longer(
    starts_with("percent"),
    names_to = "name",
    values_to = "lowres_percent_mpa_effect",
    names_prefix = "percent_"
  )  

faulty_states <- tidy_lowres |> 
  filter((name == "biomass" & lowres_percent_mpa_effect < 0)) # there are a few edge cases when depletion is basically or 1 when things aren't quite at equilibrium and so negative MPA effects possible with low-definition model. Since this is model artifact, filtering out

highres_vs_lowres <- highres |>
  filter(step == max(step)) |> 
  left_join(tidy_lowres, by = c("state_id", "name", "critter", "prop_mpa")) |> 
  filter(!is.na(lowres_percent_mpa_effect)) |> 
  left_join(state_depletions |> select(state_id, critter, depletion), by = c("state_id","critter")) |> 
  filter(depletion > min_depletion,
         !(state_id %in% unique(faulty_states$state_id))) |> 
  mutate(numeric_prop_mpa = as.numeric(as.character(prop_mpa)),
         critter = critter_namer(critter))

# doing this fast and sloppy
simple = simple_state_experiments |> 
  mutate(critter = map(fauna, ~names(.x))) |> 
  select(state_id,critter, sel_form) |> 
  unnest(cols = c(sel_form)) |> 
  unnest(cols = c(critter,sel_form)) |> 
  group_by(state_id, critter) |> 
  mutate(fleet = c("fleet_alpha_sel_form","fleet_beta_sel_form")) |> 
  ungroup() |> 
  pivot_wider(names_from = fleet, values_from = sel_form) |> 
  mutate(difficulty = "simple")

medium = medium_state_experiments |> 
  mutate(critter = map(fauna, ~names(.x))) |> 
  select(state_id,critter, sel_form) |> 
  unnest(cols = c(sel_form)) |> 
  unnest(cols = c(critter,sel_form)) |> 
  group_by(state_id, critter) |> 
  mutate(fleet = c("fleet_alpha_sel_form","fleet_beta_sel_form")) |> 
  ungroup() |> 
  pivot_wider(names_from = fleet, values_from = sel_form) |> 
  mutate(difficulty = "medium")

complex = complex_state_experiments |> 
  mutate(critter = map(fauna, ~names(.x))) |> 
  select(state_id,critter, sel_form) |> 
  unnest(cols = c(sel_form)) |> 
  unnest(cols = c(critter,sel_form)) |> 
  group_by(state_id, critter) |> 
  mutate(fleet = c("fleet_alpha_sel_form","fleet_beta_sel_form")) |> 
  ungroup() |> 
  pivot_wider(names_from = fleet, values_from = sel_form) |> 
  mutate(difficulty = "complex")

fleet_sels <- bind_rows(simple, medium, complex) |>
  mutate(state_id = glue("{difficulty}_{state_id}"),
         critter =  critter_namer(critter))


highres_vs_lowres <- highres_vs_lowres |> 
  left_join(fleet_sels, by = c("state_id", "critter", "difficulty"))

fail_rate <- percent(1 - mean(unique(highres$id) %in% unique(highres_vs_lowres$id)))


simple <- simple_emulator_fits |> 
  filter(fit_worked) |> 
  mutate(fit_mape = map_dbl(twopbd_params, c("result","fit_mape"))) |> 
  mutate(difficulty = "simple")

medium <-medium_emulator_fits |> 
  filter(fit_worked) |> 
  mutate(fit_mape = map(twopbd_params, c("result","fit_mape"))) |> 
  unnest(cols = fit_mape) |> 
  mutate(difficulty = "medium")



complex <-complex_emulator_fits |> 
  filter(fit_worked) |> 
  mutate(fit_mape = map(twopbd_params, c("result","fit_mape"))) |> 
  unnest(cols = fit_mape) |> 
  mutate(difficulty = "complex")

fit_mapes <- bind_rows(simple, medium, complex)
# 
# fit_mapes |> 
#   ggplot(aes(fit_mape, fill = difficulty)) + 
#   geom_density(alpha = 0.5)
# 

rm(list = c("simple", "medium", "complex", "tidy_lowres"))

```

## Introduction

The field of ecology depends on models; it is how we move from simply
describing ecological phenomena to understanding ecological processes.
All models are abstractions of reality, requiring scientists to make
decisions as to how best to approximate a given system to address the
ecological question at hand. In some cases, these decisions can be based
simply on first principles such as our understanding of the basic
physics of the universe. In other cases we are faced with multiple
competing models of the ecological process in question, with a common
goal being the search for a "parsimonious" model that best explains the
phenomena in question without containing extraneous features that may
reduce the performance or efficiency of the model.

While science has employed numerous practices for judging the
performance of competing models, for much of recent history we have
relied on parameterizing and confronting models with data
[@hilborn1997], with the specific metric of model performance ideally
determined based on the objective of the model [e.g. whether the goal of
the model is for data exploration, inference, or prediction,
@tredennick2021a]. Regardless of the method, the key feature of this
process is that models are judged by their ability to explain observed
data. For example, @murdoch2002 examined under what conditions a
single-species model may or may not be a valid representation of
population dynamics of species existing in a multi-species environment.
They found that the data on the dynamics of generalist consumers (such
as many species of fish) in a multi-species environment could be
explained by a single species model.

While quantitative methods for data fitting and comparison are
appealing, they are not always feasible. For example, the widely used
Ecopath with Ecosim [@christensen2004] modeling framework allows for
complex simulation of the effects of environmental and/or policy drivers
on marine ecosystems. While such a model can be tuned to data, if often
has far more parameters than data points, meaning that many different
model configurations might all explain the available data equally well.
Alternatively, a different end-to-end ecosystem model, such as ATLANTIS
[@audzijonyte2019], could in theory be tuned to fit the same data
equally well. In these cases it is unclear how to judge performance when
alternative parameterizations or model structures can all explain the
data (or when there is no data to confront a model with). This can have
important implications if alternative equally plausible models provide
conflicting guidance as to the impact of a particular phenomena or
policy.

This challenge is well illustrated by the science of Marine Protected
Areas (MPAs). While MPAs have taken and continue to take numerous forms
throughout human history [@johannes1978; @grorud-colvert2021], I refer
to them here broadly as spatially defined areas in which some forms of
human activities are restricted regardless of their objective [^1]. The
most conventional form of MPAs involve the restriction of some to all
forms of extractive activities such as fishing within their borders. The
exact form of these restrictions may vary but the choice of what is
implemented is ideally made to achieve some policy objective. For
example, the California MPA network developed as part of the Marine Life
Protection Act was designed around a broad set of policy objectives
ranging from recreation, cultural value, research, and rebuilding of
depleted populations (California Fish and Game Code, §§ 2850-2863).

[^1]: Note that the term MPA has many different definitions, see
    @grorud-colvert2021

The use of MPAs to achieve various policy objectives has exploded in
recent years and looks to grow further, as expressed by the goals of the
30x30 movement, which seeks to place 30% of terrestrial and marine
ecosystems in some form of protected area by 2030 [@cbd2022]. However,
the choice of exactly what 30% to protect, and what forms that
protection will take, can have large impacts on the actual outcomes that
this proposed network will have. The difficulty is that baring the most
straight-forward of cases (e.g. protection of sensitive habitat of
sessile species such as deep-water corals, @huvenne2016), determining
how to design MPAs to achieve a given policy objective is almost
entirely dependent on simulation models [@oleary2016].

This is due in large part to the scale of the processes involved in
determining the outcomes of a given MPA or MPA network. For instance,
marine organisms move vast distances at one or more parts of their life
cycle [@gerber2005]. Furthermore, the impacts of protection can take
years or decades to develop [@nickols2019]. This means that empirical
studies of the net effect of MPAs inside and outside of their borders
can require collection of data over a large spatial scale over many
years, an important but costly task. As such, an experimental design
approach to understanding what MPA network might achieve a given effect
size for a given objective is not generally feasible. In the absence of
experimental designs, observational studies lacking appropriate
statistical controls can easily misdiagnose the effects of a spatial
policy such as an MPA [@ovando2021; @ferraro2018].

Given then that we cannot realistically rely on direct empirical
evidence to design large-scale networks of MPAs, we instead must often
rely on simulations if we wish to provide guidance as to the predicted
policy effects of a proposed protected area. Many models have been
developed to fill this gap [@fulton2015]. These models vary greatly in
complexity, ranging from single species two-patch biomass dynamics
models with analytical solutions [@hastings1999] to end-to-end spatially
explicit social-ecological models with thousands of parameters such as
ATLANTIS [@audzijonyte2019].

Several works have surveyed the MPA modeling landscape. @gerber2003
reviewed a range of MPA models and summarized the types of processes
included and common insights across models (e.g. that MPAs can increase
yield when overfishing is present, and that highly-mobile species may
benefit less from MPAs). @pelletier2005 scored the suitability of
different MPA models for addressing different kinds of policy questions,
finding that many different complexities could be appropriate for broad
questions like addressing "Enhancement of fisheries yield". @fulton2015
examined features and utility of different MPA models across a spectrum
of complexity. As part of this paper, they identified different
"appropriate model types" for addressing specific questions around MPA
performance. They found that the list of models categorized as
appropriate for particular MPA questions can span a vast range. For
example, the list of models listed as appropriate for assessing the
ecological impacts of MPAs range form "population models", "qualitative
mathematical models", "multi-species models", or "explicit ecosystem
models" [@fulton2015].

Collectively, these studies demonstrate that models across a wide range
of complexity are all in theory capable of providing guidance on the
effects of MPAs. However, it remains unclear to how the choice of a
specific model within this spectrum might influence the direction and
magnitude of the effect being studied.

For example, suppose we compare the predictions made by two models, a
"low-definition" two-patch biomass dynamics model and a
"high-definition" multi-patch age structured population dynamics model.
The first "low-definition" model tracks total population biomass in two
patches connected by dispersal, where one patch is designated as a
no-take MPA and the size of the patches is governed by the biomass
carrying capacity. The high-definition model tracks numbers-at-age (and
subsequently length and biomass) across a two-dimensional seascape, with
specific patches within this seascape designed as no-take MPAs. Ideally,
the predictions of the low-definition should be correct on average over
a region, providing strategic guidance as to the potential outcomes of
MPAs in that area. The more detailed high-definition model though might
be needed to provide tactical advice as to the exact configuration of
the protected patches.

While this additive gradient in MPA model complexity would be ideal, I
am unaware of any work that has explicitly tested whether it exists.
Answering this question has real policy implications, particularly
because models are the primary tool used to provide advice on MPA design
[@oleary2016; @fulton2015]. If different levels of model complexity
provide different answers to the same questions, then the predicted
effects and subsequent design of MPA networks that will increasingly
affect marine ecosystems and dependent communities may simply be an
artifact of the type of model selected rather than a reflection of a
robust understanding of the dynamics of these social-ecological systems.

To illustrate the potential consequences of diverging predictions of
alternative models, consider the case of @sala2021. That paper used a
single species two-patch biomass dynamics modeling framework to predict
the conservation and food security outcomes of a proposed global network
of no-take MPAs, and as of publication of this paper, is among the most
highly cited and widely publicized findings in the recent marine
conservation literature
(<https://nature.altmetric.com/details/101895056>, noting that the food
and conservation outputs of this model are only one part of the broader
results presented in @sala2021). However, @ovando2023 showed that
changes to core assumptions made by @sala2021 (e.g. choice of population
model, spatial boundaries of individual fish stocks) fundamentally
altered both the total predicted outcomes of MPAs for food security and
the prioritization map of this proposed global MPA network.

The question then is what models of MPAs are best suited for addressing
which policy questions when multiple different models can in theory
serve? For example, two outcomes of interest MPAs are changes in total
population biomass and total fishery catches [@gaines2010]. These
metrics, or at least representations of them, can be produced both by a
two-patch biomass dynamics model and a full ecosystem model, and
essentially every MPA model in between. It is unclear then how to decide
which of the many models capable of simulation biomass and catch
outcomes of MPAs is best suited for the task at hand.

The question of exactly what model is appropriate for what question
related to spatial policies such as MPAs in marine social-ecological
systems is far beyond the scope of this paper. However, this paper seeks
to provide a step towards this broader goal by assessing whether models
of differing complexity provide complimentary or contradictory
predictions of the effects of MPAs across multiple policy dimensions.

To do so, I simulated a range of MPA outcomes using a spatially explicit
age structured multi-species and multi-fleet simulation framework
presented in @ovando2023a called `marlin`. I then tuned a two-patch
biomass dynamics model presented in @ovando2023 and based on
@cabral2020, the foundation for the results presented in @sala2021, to
emulate the simulated dynamics of the more complex `marlin` model. I
then compare the effects of no-take MPAs predicted by these two models,
and evaluate if and when the two models are in agreement. While these
are only two models out of the many available to model MPAs, they are
instructive as both types of models have been used to provide
predictions of the effects of MPAs on biomass and catch. I find evidence
that while the two models have areas of agreement, the choice of one
model over the other can strongly affect the predicted impacts of MPAs
on conservation and catches.

## Methods

This paper uses two general classes of models that I call the *High-*
and *Low-definition* models. The *High-definition* model uses a Eularian
framework called `marlin` described in @ovando2023a . The `marlin` model
simulates user-specified numbers of independent age-structured fish-like
populations distributed in a two-dimensional seascape. These fish
populations can be targeted by arbitrary numbers of fishing fleets each
of which can have individual *métiers* that specify the relationship
between a given fleet and a specific fish species. The *Low-definition*
model is two-patch Pella-Tomlinson [@pella1969] surplus production
model, described in @ovando2023 and based on @cabral2020.

Each simulation follows the same general structure (@fig-flow):

1.  Generate a set of state variables (e.g. life history parameters and
    fleet dynamics) from a range of *simple* (one species one fleet),
    *medium* (four species one fleet), and *complex* (four species two
    fleets) scenarios (@tbl-scenes)

2.  Simulate data from the *High-definition* simulation and estimate the
    parameters of the *Low-definition* model that best explain the
    simulated data (@tbl-model)

3.  Apply a range of MPA designs comprised of size (percent of seascape)
    and placement strategy for the *High-definition* case, and size only
    for the *Low-definition* model

4.  Compare the percent change in biomass and catch predicted by the
    *High* and *Low-definition* models

This paper involves a great deal of code that cannot realistically be
translated in full into the text of the methods section here. The code
needed to reproduce this paper and all results contained within can be
examined, accessed, and run through the repository available at
https://github.com/DanOvando/mpa-indicators-and-emulators/releases/tag/mpa_emulators_v1.0

```{r}
#| label: fig-flow
#| fig-cap: "Flowchart of the simulation process used to generate the results presented in this paper."
#| fig-height: 6
knitr::include_graphics("imgs/flow.png")
```

### High-definition Model and Simulations

The equations and processes describing `marlin` model used in the
*High-definition* are presented in detail in @ovando2023a. Briefly, the
model simulates fish populations using an age-structured population.
Length-at-age is calculated using the von Bertalanffy growth equation
with log-normally distributed variation in the length at age. Natural
mortality at age is calculated using the length-inverse mortality
function described in @lorenzen2022. Fecundity at age is a function of
weight at age, with the potential for hyperallometric fecundity in which
fecundity increases faster than weight. Recruitment follows a
Beverton-Holt dynamics parameterized around steepness (*h*), with
multiple options for the timing and spatial scale of density dependence
(e.g. local vs. global or pre- vs. post-dispersal). Movement is
simulated using a continuous-time Markov chain , as described in
@thorson2021a. This process breaks movement in a diffusion (random
non-directed movement) and taxis (directed movement) component, where
the taxis component allows fish to preferentially move towards better
habitat. The model runs in 6-month time steps for these simulations.
Core life history values (growth, mortality, and maturity) are pulled
from `Fishlife` for each individual species [@thorson2020].

Fishing fleets are simulated based on effort. Each fleet exerts an
amount of fishing effort in a time step, and chooses how to allocate
that effort in space based on a spatial-allocation strategy (e.g.
revenue-per-unit-effort in the previous time step). Effort in a given
patch applies fishing mortality to simulated species based on the
*métier* in question. The *métier* specifies the contact selectivity
(uniform, logistic, or double-normal) at age of that fleet for each
simulated species, the price per unit weight for each species, and the
proportion of the total fishing mortality experienced by that fish
species contributed by the *métier* in question. Fishing fleets can have
home ports, which add a cost to fishing in a given patch that increase
with linear distance from the home port.

Together, these fish and fleet dynamics allow `marlin` to simulate the
effects of multiple fishing fleets on multiple species. For example, by
simulating multiple fleets and fish species simultaneously, the model
can capture bycatch dynamics in which a fleet targets one species but
incidentally captures another species if it occurs in the same location
as the target species.

#### Simulated States

The four possible species simulated are a grouper (*Epinephelus
fuscoguttatus*, Serranidae), a shallow-reef snapper (*Lutjanus
malabaricus*, Lutjanidae), a deep-reef snapper (*Pristipomoides
filamentosus*, Lutjanidae), and a reef shark (*Carcharhinus
amblyrhynchos*, Carcharhinidae). These species were chosen to reflect a
portfolio commonly caught in coastal reef fisheries, and to encompass a
range of life-history strategies related to somatic growth rates,
natural mortality rates, and fecundity schedules. Two possible fleets
are simulated. Both fleets catch all four species to some extent. The
set of scenarios evaluated are shown in @tbl-scenes.

::: {#tbl-scenes}
| Name      | Species                                 | Fleets               |
|-----------|-----------------------------------------|----------------------|
| *simple*  | *Snapper*                               | $\alpha$             |
| *medium*  | *Snapper, Deep-Snapper, Grouper, Shark* | $\alpha$             |
| *complex* | *Snapper, Deep-Snapper, Grouper, Shark* | $\alpha$ and $\beta$ |

Description of the three categories of simulation states evaluated.
:::

For each scenario set I simulated
`r n_distinct(state_depletions$state_id) / 3` states (a completely
random number, chosen to make clear that this is not a statistical
estimation process after determining a minimum sample size that the
results presented here stabilized). Each state was generated by drawing
a random variable from the sets described in @tbl-states. Variables not
listed in this table (e.g. natural mortality) are fixed based on the
values for the species in question found in FishLife.

::: {#tbl-states}
| Name | Description |
|-------------------------|-----------------------------------------------|
| KISS | Keep it Simple Stupid. When TRUE, sets habitat equal in all patches for all species |
| MPA response | Dictates whether effort that used to fish inside MPAs "stays" and is redistributed or "leaves" the fishery |
| Habitat patchiness ($\kappa$) | Low values create smooth habitat, higher values patchy habitat |
| Max absolute correlation | Scales the maximum absolute correlation between species |
| Spatial catchability | Whether catchability of the fishing fleets varies in space |
| Spatial fleet allocation | How the fleet distributes itself in space, one of revenue, profit per unit effort, and revenue per unit effort |
| Seasonal movement | Whether habitat flips in one half of the year to another |
| Spawning aggregation | Whether spawning occurs in a concentrated location |
| Fishing vs. Natural mortality | Ratio of instantaneous fishing mortality rate relative to natural mortality. The higher this is, the lower $B_{bau}/B_0$ will be. |
| Adult diffusion | The diffusion rate of "adult" (non-larval) fish |
| Larval diffusion | The diffusion rate of the larval fish |
| Steepness | Beverton-Holt steepness value |
| b0 | The unfished biomass for a given species |
| Hyperallometry | Degree of hyperallometry in fecundity at age relationship |
| Density dependence | The timing of density dependence, one of "global_habitat", "local_habitat", "pre_dispersal", "post_dispersal". |
| Ontogenetic shift | Whether recruitment habitat is the inverse of adult habitat |
| Use ports? | Whether or not to assign ports to individual fleets that alter cost per unit effort in patches |
| Selectivity at age | Selectivity at age, set separately for every *métier* |
| Selectivity form | one of uniform, logistic, or double-normal, set separately for every *métier* |
| Price per unit weight | Price per unit weight for every *métier* |

Variables that define a given simulation state. See accompanying code at
https://github.com/DanOvando/mpa-indicators-and-emulators/releases/tag/mpa_emulators_v1.0
for details of individual distributions.
:::

#### Simulating Habitats

Marine species are often distributed heterogeneously in space with
various degrees of covariance among species, i.e. some species tend to
be found together, others tend to be found apart, and those
distributions can be clustered in space. I modified the methods
described in @thorson2017a to automate simulation of these spatial
habitat dynamics. The key parameters process is a parameter $\kappa$
that dictates the rate at which correlation among patches decrease with
distance from each other. $\kappa$ is \>0. The closer $\kappa$ is to 0,
the greater the distance at which habitat among patches are still
correlated becomes. The larger $\kappa$ becomes, the less correlated
habitat becomes with distance. The other parameter is a *c* by *c*
symmetric matrix **R**, where *c* is the number of species being
simulated. The upper-triangle of **R** is the correlation (bounded
between -1 and 1) in habitat between each simulated species. A value of
1 indicates that that given pair share habitat perfectly, -1 that they
share no habitat. When only one species is present, **R** has no effect.

Together then $\kappa$ dictates how "patchy" a simulated seascape is,
with lower values producing a smoother habitat distribution per species,
and **R** dictates how similar the habitats are across species.
Generating random draws of $\kappa$ and **R** allows us to automatically
generate simulations that range from essentially uniform habitats across
species to cases where habitat is patchy and individual species tend to
avoid each other [@fig-hab].

```{r}
#| label: fig-hab
#| fig-cap: Example of simulated habitat distributions for two species with varying degrees of correlation between species (*r*) and smoothness of habitat surface $\kappa$. First and third rows show negatively correlated species, second and fourth rows positively correlated species.
#| fig-height: 8


make_hab <- function(kappa, correlation) {
  
  critters <- c("snapper", "shark")
  
  core_matrix <- matrix(0, nrow = 2, ncol = 2)
  
  # Fill in the upper triangle of the matrix
  core_matrix[upper.tri(core_matrix)] <- correlation
  
  lower_triangle <- t(core_matrix)
  
  critter_correlations <- core_matrix + lower_triangle
  
  diag(critter_correlations) <- 1
  
  resolution <- c(20, 20)
  
  correlations
  
  habs <- marlin::sim_habitat(
    critters,
    kp = kappa,
    critter_correlations = critter_correlations,
    resolution = resolution,
    patch_area = patch_area
  )
  
  out <- habs$critter_distributions
  
}

scenes <- expand_grid(kappa = c(.01,.25),
                      correlation = c(-.5,.5)) |>
  mutate(habs = map2(kappa, correlation, make_hab))


scenes |>
  mutate(scene = glue::glue("k:{kappa} r:{correlation}")) |>
  unnest(cols = habs) |>
  group_by(critter, scene) |>
  mutate(habitat = habitat / max(habitat)) |>
  ggplot(aes(x, y, fill = habitat)) +
  geom_tile() +
  facet_grid(scene ~ critter) +
  scale_fill_viridis_c() +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0)) +
  theme(
    axis.text = element_blank(),
    axis.ticks = element_blank(),
    strip.text = element_text(size = 14)
  )

```

### Low-definition Model

Much of the early MPA modeling literature used various forms of "surplus
production" models [see @kokkalis2024] often using a two-patch system in
which MPAs are modeled by tracking total biomass in two patches while
adjusting the relative size of patches and setting fishing mortality to
zero in the MPA patch [@gerber2003]. While much more detailed models
have been developed since then, these types of models are still used,
particularly in cases where the goal is to simulate large number of
fisheries or states [e.g. @sala2021].

The form of two-patch surplus production model used here is the same
Pella-Tomlinson structure used in @costello2016 although modified to
allow for the kinds of two-patch MPA dynamics used in @sala2021. This
model tracks biomass *B* over time *t*, given biological parameters *g*
(the growth rate), *K* (the carrying capacity), and $\phi$ which scales
the shape of the production curve (when $\phi$ = 0.188
$B_{MSY}/K = 0.4$). MPAs are simulated through the parameter *R*, the
proportion of the total carrying capacity inside the MPA patch. Movement
between the two patches is set my *m*. Catches are produced by a fishing
mortality rate $F$ is the fishing mortality rate.

$F$ can be calculated with or without effort displacement. When effort
displacement is turned off, total F is constant at "business as usual"
($F_{BAU}$)

$$F_t = F_{BAU}$$

When effort displacement is turned on, fishing mortality outside the
MPAs (MPA = 0) increases proportionally to the size of the protected
area patch (MPA = 1), in the same manner as @sala2021 .

$$F_t = 1 - (1 - F_{BAU})^{\frac{1}{1 - R}}$$

Under "local" density dependence, the population model is

$$
\begin{aligned}
B_{t+1,MPA = 1} = B_{t,MPA = 1} + \frac{\phi + 1}{\phi}gB_{t,MPA = 1} \left(1 - \left(\frac{B_{t,MPA = 1}}{K \times R}\right)^{\phi} \right) \\ - m(B_{t,MPA = 1} - \frac{R}{1 - R}B_{t,MPA = 0}).
\end{aligned}
$$

$$
\begin{aligned}
B_{t+1,MPA = 0} = (1 - F_{t}) \times ( B_{t,MPA = 0} + \frac{\phi + 1}{\phi}gB_{t,MPA = 0} \left(1 - \left(\frac{B_{t,MPA = 0}}{K \times (1 - R)}\right)^{\phi} \right) \\ +  m\left(B_{t,MPA = 1} - \frac{R}{1 - R}B_{t,MPA= 0}\right) ).
\end{aligned}
$$

Under "pooled" density dependence, the population model is

$$B_{t,Total} = B_{t,MPA = 1} + B_{t,MPA = 0},$$

$$
\begin{aligned}
B_{t+1,MPA = 1} = B_{t,MPA = 1} + R \frac{\phi + 1}{\phi}gB_{t,Total} \left(1 - \left(\frac{B_{t,Total}}{K}\right)^{\phi} \right) \\ -  m\left(B_{t,MPA = 1} - \frac{R}{1 - R}B_{t,MPA=0}\right).
\end{aligned}
$$

$$
\begin{aligned}
B_{t+1,MPA = 0} = (1 - F_{t}) \times ( B_{t,MPA = 0} + (1 - R) \frac{\phi + 1}{\phi}gB_{t,Total} \left(1 - \left(\frac{B_{t,Total}}{K}\right)^{\phi} \right) \\ +  m\left(B_{t,MPA = 1} - \frac{R}{1 - R}B_{t,MPA=0}\right) ).
\end{aligned}
$$

The model uses "local" density dependence when the form of density
dependence used in the High-definition model is in some way local, and
"pooled" when the High-definition model density dependence is in some
way global.

#### Fitting Low-definition Model

The Low-definition model has five core parameters: $\phi$, *g*, *m*,
*K*, and *D*, where *D* is the depletion (B/K) at the start of the
simulation. Clearly all of these parameters could be made up. However,
the goal of this paper is to assess the impact of model structure on
simulated outcome, holding as much else constant as possible. This means
that we want to find values of these parameters that allow the
Low-definition model to best match the dynamics of the High-definition
model.

To achieve these, I estimated these five parameters along with required
variance parameters using the Stan programming language and the cmdstanR
[@cmdstanr2023] interface. See @tbl-model for penalty distributions used
for each parameter. For a given scenario *s* simulated by the
High-definition model, I created the following experiment.

1.  Fish each population from unfished biomass B0 down to a depletion of
    0.1 B0, generating a vector of total biomass **bdep** and catch
    **cdep** over time.
2.  From that depletion of 0.1 B0, move all the fish to the left-hand
    side of the simulated seascape, such that the right 50% of the
    seascape is empty of fish.
3.  Close the seascape to fishing, and then let the population rebuild
    and disperse, create a vector of biomass in the left-hand **bleft**
    and right-hand **bright** side of the seascape as the population
    approaches B0 again and fills in the right-hand side of the seascape
    through adult movement and larval dispersal.
4.  Pass **bdep,cdep,bleft, bright** to the *Low-definition* estimation
    model to estimate the parameters of the model.

The concept here is that **bdep** and **cdep** provide information on
the scale of the population (B0,unfished biomass, and the volume of
catch the population can sustain), where as **bleft** and **bright**
provide additional information on *g*, $\phi$, and *m*, as the model can
see how fast the population grows from a depleted state as a function of
biomass, and how fast the population recolonizes the right-hand patch.

The structure of the model is given below, variables with $\hat{}$
indicate estimates by the model. Penalty distributions (as models are
fit through maximum likelihood) were selected to be generally
uninformative while providing some guidance as to the general parameter
space of the variables. This model could be refined, but provides a
general means for quickly and robustly fitting the data generated by the
*High-definition* model.

::: {#tbl-model}
| Process | Penalty Distribution |
|--------------------|----------------------------------------------------|
| Initial biomass decline | $log(bdep_t) \sim N(log(\hat{bdep_t}),\sigma_b)$ |
| Initial catch decline | $log(cdep_t) \sim N(log(\hat{cdep_t}),\sigma_c)$ |
| Biomass in right-hand rebuilding patch | $log(bright_t) \sim N(log(\hat{bright_t}),\sigma_b)$ |
| Biomass in left-hand rebuilding patch | $log(bleft_t) \sim N(log(\hat{bleft_t}),\sigma_b)$ |
| Total carrying capacity | $log(K) \sim N(10,2)$ |
| Dispersal rate | $m \sim N(0.2,0.2), 0 < m < 1$ |
| Initial depletion | $D \sim N(0.5,0.5) ,0 < D < 1$ |
| Production function shape | $log(\phi) \sim N(log(0.188),0.4))$ |
| Observation error | $\sigma_b \sim N(0.05,0.1), \sigma_b > 0$ |

Processes estimated by the low-definition model, along with associated
penalty distributions. *t* indicates time step.
:::

The model was fit using penalized maximum likelihood through the
`cmdstan` `optimize` function rather than fit using full Bayesian
inference, in order to speed up computation and since we are not
interested in examining uncertainty in this analysis. Models that failed
to converge (`r fail_rate` of high-definition states) were discarded
from the process. Convergence failure was defined either by an abnormal
termination of the optimization, or a mean absolute percent error
between the "observed" (high-definition) and "estimated"
(low-definition) biomass greater than 25%. The post-filter mean absolute
percent error (MAPE) between the biomass data generated by the
High-definition model and the biomass values estimated by the
Low-definition model was `r percent(mean(fit_mapes$fit_mape) / 100)`.
Once the Low-definition parameters were estimated for a given state, the
Low-definition model was then run through the appropriate MPA scenarios
(@fig-flow).

### MPA Placement Scenarios

MPAs in this simulations are defined as fully no-take MPAs for all of
the species simulated in a given iteration of the model. MPA size is
defined by the proportion of the seascape placed inside the MPA. In the
*High-definition* case, this is the proportion of cells in the
two-dimensional space. In the *Low-definition* case, this is the patch
size parameter *R*.

The *High-definition* case must also decide which patches will be used
to achieve a given MPA size. The three possible options are:

1.  *target_fishing*: place MPAs in descending order of catch per patch
2.  *avoid_fishing*: place MPAs in ascending order of catch per patch
3.  *area*: start placing MPAs in bottom left corner of seascape and
    build up from there

A given placement scenario *p* then is the intersection of the
proportion of the seascape in an MPA and the strategy for placing the
MPA patches.

### Types of Results

For each simulation, both the *High-definition* and *Low-definition*
models start at the same business-as-usual depletion level
($B_{bau} /  B_{0}$), the biomass level that would occur in the absence
of the MPA. The lower this value, the higher fishing pressure. Both
definition models are then simulated forward in time 50 years with and
without the selected MPA designs. Each simulation (a combination of
scenario, state and placement) produces simulated biomass per species
and catch per species per fleet with and without MPAs for the *Low-* and
*High-definition* models. I measured the effect sizes of the MPAs (MPAE)
for state *s* and MPA placement scenario *p* for model type *m* as
percentage differences in the outcome in question

$$
MPAE_{s,p,m} = \frac{Outcome_{MPA=1,s,p,m}}{Outcome_{MPA=0,s,p,m}} -1 
$$

Where *Outcome* is one of catch or biomass in the water. I then
calculate the percentage point difference ($\Delta$) between the two
models as

$$
\Delta_{s,p} = MPAE_{s,p,m=Low} - MPAE_{s,p,m=High}
$$

A positive value of $\Delta$ indicates that the *Low-definition* model
predicted a higher percent change in the given metric than the
*High-definition* model, and *vice versa*.

Rather than comparing specific predictions of percent point changes of
biomass and catch, we can also compare the "rank" of each fishery, in
terms of biomass or catch potential from MPAs, predicted by the *Low-*
and *High-definition* models. To that end I grouped simulations by MPA
size and then ranked the change in biomass and catch for each simulated
fishery conditional on a given MPA size. This provides a prediction of,
if we were to protect a given percentage of a seascape in an MPA, which
fisheries stand to benefit the most and the least.

The objective of an MPA modeling exercise may be even coarser than
rankings, simply asking which fisheries might benefit or lose in terms
of biomass and catch for a given MPA size. To assess this use case, I
assigned each of our simulation results to one of five quadrants:

1.  Biomass increases and catch decreases
2.  Biomass increases and catch increases
3.  Biomass decreases and catch decreases
4.  Biomass decreases and catch increases
5.  No effect (neither biomass or catch changes by $\pm$ 5%)

This can be viewed as a "diagnosis" problem, where the *Low-definition*
model predicts the quadrant a given MPA will place a fishery in, which
we can then compare to the "true" quadrant resulting from the MPA under
the *High-definition* model. Since MPA outcomes are asymptotic as MPA
size goes to 0 or 100%, I restricted this analysis to the more realistic
range of 5-40% of the seascape.

Each simulation run provides an estimate of the difference $\Delta$
between the biomass and catch outcomes predicted by the *Low-definition*
and *High-definition* models. I used a random forest model to predict
the magnitude of $\Delta$ for both catch and biomass as a function of
the state variables defining the High-definition state, and then
extracted the permutation-based variable importance scores for each
state variable.

We can use this simulation framework to evaluate the outcomes of
following guidance based on the *Low-definition* model in a
*High-definition* world. To achieve this, for each state I found the MPA
size that maximized the total gain in catches according to the
*Low-definition* model. For single species cases in the *simple*
scenarios, this is equal to the MPA size that maximizes catch for the
individual species. For the *complex* scenario, this is the single MPA
size that maximized the *Low-definition* catch across all four species
in total. I then applied that "catch maximizing" MPA size recommended by
the *Low-definition* model to the *High-definition* model and compared
the outcomes.

### A Note on MSY

Readers may be used to seeing differences in fishery outcomes measured
in changes in maximum sustainable yield (MSY) based reference points
such as the biomass relative to the biomass capable of producing MSY
(B/BMSY) and the fishing mortality relative to the fishing mortality
that would result in BMSY at equilibrium (F/FMSY). While these
quantities are defined for the *Low-definition* model, they are much
more complex for the *High-definition* model. This is because MSY is a
function many parameters including life history, spatial density
dependence, selectivity, discard rates, and relative effort across
fleets [@kapur2021; @goethel2018; @goethel2017]. Spatial policies such
as MPAs can impact the contribution of many of these (e.g. the relative
overlap of different fleets with different selectivities on particular
life stages of fish). This means that the MSY-based reference points
would need to be recalculated for every equilibrium fleet distribution
at a given MPA size, potentially leading to confusing results. For
example, B/BMSY could increase as B decreases if changes to the fleet
distribution in space result in BMSY decreasing. See @kapur2021 and
@bosley2019 for a discussion of these challenges.

## Results

@fig-eg-complex shows a result from the *complex* set of scenarios, in
which the *High-definition* model simulates four different species
differentially targeted by two different fishing fleets.

```{r}
#| label: fig-eg-simple
#| fig-cap: "Example simulated effects of MPAs on biomass and catch under the 'simple' scenario (*High-definition* model only has one species and one fleet). X-axis shows the percent of the seascape protected in a no-take MPA. Y-axis shows biomass divided unfished biomass (A) or catch (B). Panel columns show MPA placement strategy used in *High-definition* model."
#| include: false



i <- 42

i <- as.integer(sample(unique(simple_emulated_experiment_results$state_id),1))

# i <- 48

# test <- simple_state_experiments |> 
#   filter(state_id == 48)

emulation <- simple_emulated_experiment_results |> 
  filter(state_id == i) |> 
  unnest(cols = mpa_experiment) |> 
  filter(year == max(year)) 

reality <- simple_processed_sims$mpa_outcomes |> 
  mutate(state_id = as.integer(state_id)) |> 
  filter(state_id == i)

a = ggplot() +
  geom_line(
    data = reality |> filter(name == "biomass"),
    aes(prop_mpa, value / b0, color = "High-definition Model")
  ) +
  geom_point(data = emulation, aes(prop_mpa, depletion_mpa, color = "Low-definition Model")) +
  scale_y_continuous(limits = c(0, 1), name = "B/B0") + 
  scale_x_continuous(name = "MPA Size", labels = scales::percent, guide = guide_axis(n.dodge = 2)) +
  facet_wrap(~placement_strategy) + 
  labs(title = "A") + 
  scale_color_discrete(name = '')

b = ggplot() +
  geom_line(
    data = reality |> filter(name == "catch"),
    aes(prop_mpa, value, color = "High-definition Model")
  ) +
  geom_point(data = emulation, aes(prop_mpa, yield_mpa, color = "Low-definition Model")) +
  scale_y_continuous(limits = c(0, NA), name = "Catch") + 
  scale_x_continuous(name = "MPA Size", labels = scales::percent, guide = guide_axis(n.dodge = 2)) +
  facet_wrap(~placement_strategy) + 
  labs(title = "B") + 
    scale_color_discrete(name = '')



fig <- (a | b) + plot_layout(guides = "collect", heights = c(1,1.5)) & theme(legend.position = "bottom", axis.text.x = element_text(size = 8))

figsaver(fig)

```

```{r}
#| label: fig-eg-complex
#| fig-cap: Example simulated effects of MPAs on biomass and catch under the 'complex' scenario (*High-definition* model has four species targeted by two fleets). X-axis shows the percent of the seascape protected in a no-take MPA. Y-axis shows biomass divided unfished biomass (A) or catch (B). In *A*, color represents species, points are the *Low-definition* model, and lines are the *High-definition* model. In *B*, color indicates the fleet, and each row of the panel is a separate species. Panel columns show MPA placement strategy used in *High-definition* model.
#| fig-height: 7




i <- as.integer(sample(unique(complex_emulated_experiment_results$state_id),1))

i <- 83

emulation <- complex_emulated_experiment_results |> 
  filter(state_id == i) |> 
  unnest(cols = mpa_experiment) |> 
  filter(year == max(year)) |> 
    mutate(critter = critter_namer(critter))


reality <- complex_processed_sims$mpa_outcomes |> 
  mutate(state_id = as.integer(state_id)) |> 
  filter(state_id == i) |> 
  mutate(critter = critter_namer(critter))


a = ggplot() +
  geom_line(
    data = reality |> filter(name == "biomass"),
    aes(
      prop_mpa,
      value / b0,
      color = critter,
      linetype = "High-definition"
    )
  ) +
  geom_point(data = emulation, aes(prop_mpa, depletion_mpa, color = critter, shape = "Low-definition")) +
  scale_y_continuous(limits = c(0, NA), name = "~B/B0") +
  scale_x_continuous(name = "MPA Size", labels = scales::percent, guide = guide_axis(n.dodge = 2)) +
  scale_color_discrete(name = '') +
  scale_shape(name = "") + 
  scale_linetype(name = '') + 
  facet_wrap( ~ placement_strategy) + 
  guides(color = guide_legend(name = '', nrow = 2)) + 
  guides(shape = guide_legend(order = 1),
         linetype = guide_legend(order = 2),
         color = guide_legend(order = 3)) + 
  labs(title = "A") +
  theme(legend.box="vertical")

b = ggplot() +
  geom_line(
    data = reality |> filter(name == "catch") |> mutate(fleet = paste0("High-definition Fleet ",fleet)),
    aes(prop_mpa, value, color = fleet)
  ) +
  geom_point(data = emulation |> mutate(fleet = "Low-definition Fleet"), aes(prop_mpa, yield_mpa, color = fleet)) +
  scale_y_continuous(limits = c(0, NA), name = "Catch") + 
  scale_x_continuous(name = "MPA Size", labels = scales::percent, guide = guide_axis(n.dodge = 2)) +
  facet_grid(critter~placement_strategy,scales = "free") + 
  scale_color_brewer(name = '',palette = "Accent") +
  guides(color = guide_legend(nrow = 3)) + 
  theme(strip.text.y = element_text(size = 6), 
        legend.box = "vertical") + 
  labs(title = "B")

fig <- ((a | b)) & theme(legend.position = "bottom", axis.text.x = element_text(size = 8), strip.text = element_text(size = 7),legend.margin=margin()) 

figsaver(fig)

```

```{r}

highres_max_catch <- highres |> 
  filter(name == "catch") |> 
  group_by(critter, state_id, placement_id) |> 
  filter(value == max(value)) |> 
  select(state_id, critter, placement_id, prop_mpa, value,difficulty,percent_mpa_effect, kiss, spatial_q) |>
  rename(highres_prop_mpa = prop_mpa, highres_catch = value, highres_catch_percent = percent_mpa_effect)

lowres_max_catch <- lowres |> 
  group_by(critter, state_id) |> 
  filter(yield_mpa == max(yield_mpa)) |> 
  mutate(lowres_catch_percent = yield_mpa / yield_bau - 1) |> 
  rename(lowres_prop_mpa = prop_mpa, lowres_catch = yield_mpa)

compare_max_catch_mpa <-  highres_max_catch |>
  right_join(lowres_max_catch, by = c("critter", "state_id", "difficulty"))

```

```{r}
#| label: fig-msy-size
#| fig-cap: "Percent of seascape protected in MPA that maximizes catch predicted by the *High-definition* model (x-axis) and *Low-definition* model (y-axis)"
#| eval: false


compare_max_catch_mpa |>
  mutate(highres_prop_mpa = as.numeric(as.character(highres_prop_mpa))) |> 
  mutate(lowres_prop_mpa = as.numeric(as.character(lowres_prop_mpa))) |> 
  ggplot(aes(highres_prop_mpa, lowres_prop_mpa)) +
  geom_bin_2d(bins = 10) +
  geom_abline(slope = 1, intercept = 0) +
  scale_x_continuous(limits = c(NA, 1), oob = squish, labels = scales::percent, name = "Highres Catch Maximizing MPA") +
  scale_y_continuous(limits = c(NA, 1), oob = squish,labels = scales::percent, name = "Lowres Catch Maximizing MPA") + 
  facet_grid(kiss ~ difficulty) 
```

### Low-definition Compared to High-definition {#sec-compare}

Each state, placementstrategy and MPAsize is associated with predictions
of percent change in biomass and catch for each species from the *Low-*
and *High-definition* models (noting that fleet-specific predictions are
only possible for the *High-definition* model results). Plotting the
*Low-definition* versus the *High-definition* predictions provides a
measure of the degree of agreement between these two models.

```{r}



tallies <- highres_vs_lowres |>
  group_by(name) |>
  summarise(
    lowres_higher = percent(mean(
      lowres_percent_mpa_effect > percent_mpa_effect
    )),
    r2 = yardstick::rsq_vec(percent_mpa_effect, lowres_percent_mpa_effect)
  )

diff_tallies <- highres_vs_lowres |>
  group_by(name, difficulty) |>
  summarise(
    lowres_higher = percent(mean(
      lowres_percent_mpa_effect > percent_mpa_effect
    )),
    r2 = round(yardstick::rsq_vec(percent_mpa_effect, lowres_percent_mpa_effect),2)
  )

```

Examining first changes in biomass (top row of @fig-hi-v-low), across
`r tallies$lowres_higher[tallies$name == "biomass"]` of simulations the
*Low-definition* model predicted a higher percent increase in biomass
than the *High-definition* model, often substantially so. The *Low-* and
*High-definition* models agreed that the potential increases in biomass
are positively correlated with the degree of fishing pressure (as
measured by BAU depletion, $B_{bau}/B_0$). However, across all
difficulties the *Low-definition* model explained roughly
`r percent(tallies$r2[tallies$name == "biomass"])` of the variation in
the *High-definition* biomass outcomes, and this value decreased as
model complexity increased (@fig-hi-v-low).

Examining the catch results (bottom row of @fig-hi-v-low), across
`r tallies$lowres_higher[tallies$name == "catch"]` of simulations the
*Low-definition* model predicted a higher percent increase in catch than
the *High-definition* model. The *Low-definition* model explained
`r percent(tallies$r2[tallies$name == "catch"])` of the variation in the
*High-definition* catch outcomes across all difficulties, and this value
decreased as model complexity increased. The *Low-definition* models had
a clear cutoff point where depletion values greater than 0.25 were less
likely to provide positive catch benefits. In contrast, the
*High-definition* models predicted positive catch effects across many
levels of depletion (see Discussion section).

<!-- This may seem counter-intuitive, as the literature and basic biology is -->

<!-- fairly clear that MPA can only increase catch if the population was -->

<!-- overfished in the first place. As with the biomass results, -->

<!-- while there is a positive correlation between the predicted catch -->

<!-- effects of MPAs of the *Low-definition* and *High-definition* models the -->

<!-- relationship is much more variable than the biomass-based results. The -->

<!-- catch-based results are more sensitive to the complexity of the -->

<!-- simulation, in particular the addition of a second fleet in the -->

<!-- *complex* scenarios, than the biomass results. -->

<!-- The increased catches under higher -->

<!-- depletion levels (lower fishing pressure) predicted by the -->

<!-- *High-definition* model come under the *avoid_fishing* placement -->

<!-- strategies, specifically where the fleet is concentrated in remaining -->

<!-- fishing grounds given a constant effort fleet model and the assumption -->

<!-- of MPA displacement rather than attrition. -->

```{r}
#| label: fig-hi-v-low
#| fig-cap: Percent change in biomass (top row) and catch (bottom row) resulting from MPAs covering between 5-40% of the simulated seascape predicted by the High-definition (x-axis) and Low-definition (y-axis) models. Panel columns correspond to the simulation set used.  Each point represents the outcome for a given species, fleet, and MPA scenario. Point color indicates the biomass divided by unfished biomass (B/B0) under business as usual (BAU) conditions without any MPA. Plotted effect sizes are capped at 200%. Red diagonal line shows the 1:1 relationship that points would fall on if Low- and High-definition models had the same predicted MPA effect. Text box shows the coefficient of determination between the Low- and High definition models. 


fig <- highres_vs_lowres |> 
  filter(between(numeric_prop_mpa,0,1)) |> 
  ggplot(aes(lowres_percent_mpa_effect,percent_mpa_effect)) + 
  geom_hline(yintercept = 0) + 
  geom_vline(xintercept = 0) +
  geom_abline(slope = 1, intercept = 0, color = "tomato") +
    geom_jitter(alpha = 0.1, aes(color = depletion)) + 
    geom_richtext(data = diff_tallies, aes(x = 0, y = 1.5, label = glue("R<sup>2</sup>={r2}"))) +

  facet_grid(name~fct_rev(difficulty)) +
  scale_y_continuous(
    name = "High-definition % MPA Effect",
    labels = scales::percent,
    limits = c(NA, 2),
    oob = squish
  ) +
  scale_x_continuous(
    name = "Low-definition % MPA Effect",
    labels = scales::percent,
    limits = c(NA, 2),
    oob = squish
  ) +
  scale_color_viridis_b(name = "BAU B/B0", option = "mako", direction = 1) +
  theme(legend.position = "top", panel.spacing.x = unit(20, "points"))

figsaver(fig)

```

The *Low-definition* model consistently overestimated the percent
increase in biomass caused by a given MPA across all levels of
$B_{bau}/B_0$ (top row of @fig-delta). When $B_{bau}/B_0$ was low, the
level of positive bias followed a dome-shaped pattern, with peak median
bias levels generally greater than or equal to 50 percentage points.
When $B_{bau}/B_0$ values were higher, the level of bias was lower at
smaller MPA sizes but increased as MPA size increased. Higher levels of
$B_{bau}/B_0$ had lower bias levels, as the models tended to agree more
that the closer a population was to unfished biomass, the less scope for
percentage increases in biomass is possible.

Predicted catch effects were less biased than predicted biomass effects.
The *Low-definition* model was more likely to overestimate catch effects
when $B_{bau}/B_0$ was low, but across all levels of $B_{bau}/B_0$ the
*Low-definition* model started to become generally negatively biased
(meaning it underestimated the potential increase in catch) as MPA size
increased. However, while patterns in the direction of bias exist,
across all scenarios and levels of $B_{bau}/B_0$ the range of $\Delta$
values were generally extremely large, generally spanning 50 to 200
percentage points (@fig-delta).

```{r}
#| label: fig-delta
#| fig-cap: Distribution of percentage point difference (*Low-definition* minus *High-definition*) in predicted MPA effect size on biomass (top row) and catch (bottom row) (y-axis) as a function of percent of seascape in MPA (x-axis). Positive y-axis values indicates that the Low-definition predicts a more positive effect than the High-definition model, negative a more negative effect. Columns indicate simulation set used. Line is median value, bands are 50% and 100% interquantile ranges, respectively. Color indicates the biomass divided by unfished biomass (B/B0) under business as usual (BAU) conditions without any MPA.  Plotted delta values sizes are capped at 200 percentage points. 

fig <- highres_vs_lowres |>
  mutate(prop_mpa = as.numeric(as.character(prop_mpa))) |> 
  mutate(
    delta =   (pmin(lowres_percent_mpa_effect, 2) - pmin(2, percent_mpa_effect)),
    delta2 = delta ^ 2
  ) |>
  select(contains("percent"), delta2, everything()) |>
  mutate(depbin = cut(pmin(1,depletion),breaks = seq(0,1,by = 0.25))) |> 
  ggplot(aes(prop_mpa,100 * delta , fill = depbin, color = depbin)) +
  geom_hline(yintercept = 0) +
  stat_lineribbon(na.rm = TRUE, alpha = 1/5, .width = c(0.5,1)) +
  facet_grid(name ~ fct_rev(difficulty), scales = "free_y") + 
  scale_y_continuous(name = expression("Percentage Points Difference (" * Delta * ")")) + 
  scale_x_continuous(name = "% Seascape in MPA", labels = scales::percent) + 
  scale_color_viridis_d(name = "BAU B/B0", option = "mako", direction = 1) +
  scale_fill_viridis_d(name = "BAU B/B0", option = "mako", direction = 1) + 
  theme(legend.position = "top")

figsaver(fig)

```

Both models estimated similar levels of maximum potential catch
increases achievable by MPAs, though the *Low-definition* generally
underestimated the maximum potential catch increase achievable by MPAs
compared to the *High-definition* model [@fig-max-catch].

```{r}
#| label: fig-max-catch
#| fig-cap: "Maximum potential percent increase in catch caused by an MPA predicted by the High-definition (y-axis) and Low-definition (x-axis) models. Facets indicate simulation set. Plotted effect sizes are capped at 200%."

fig <- compare_max_catch_mpa |> 
  ggplot(aes(lowres_catch_percent,highres_catch_percent)) + 
  # geom_bin_2d(bins = 15) + 
  geom_point(aes(color = depletion), alpha = 0.5,size = 2) +
  geom_abline(slope = 1, intercept = 0, color = "tomato") + 
  facet_wrap(~fct_rev(difficulty)) + 
  scale_y_continuous(limits = c(NA, 2), oob = squish, labels = scales::percent, name = "High-definition Max Potential Catch Increase") +
  scale_x_continuous(limits = c(NA, 2), oob = squish,labels = scales::percent, name = "Low-definition Max Potential Catch Increase") + 
  scale_color_viridis_b(name = "BAU B/B0", option = "mako", direction = 1) +
  theme(legend.position = "top", panel.spacing.x = unit(20, "points"))

figsaver(fig)

```

Both the *Low-* and *High-definition* models agreed that for both catch
and biomass, the highest rank fisheries were those with the lowest
$B_{bau}/B_0$ values (@fig-ranks). For the *simple* scenarios, there was
near 100% agreement in the top-ranked fisheries for both biomass and
catch. However, in the *complex* scenarios there was less agreement
between the models even at the top ranks. Biomass rankings were
relatively stable between the *High-* and *Low-definition* models across
all ranges of complexity. Catch rankings were much more variable between
the two models; for the *complex* scenarios, fisheries ranked in the top
75% by the *Low-definition* models could be anywhere between near the
bottom 0 or top 95% according the *High-definition* model.

```{r}
#| label: fig-ranks
#| fig-cap: Percent rank of individual fisheries (intersection of fleet and species) conditional on proportion of seascape protected in a no-take MPA predicted by High-definition (x-axis) and Low-definition (y-axis). Higher percent rank indicates that an MPA is predicted to have more positive outcomes for a given fishery, lower worse outcomes. Top row shows results for biomass, bottom row shows results for catch. Columns indicate simulation set. Color indicates the biomass divided by unfished biomass (B/B0) under business as usual (BAU) conditions without any MPA. Red dashed line indicates 1:1 line; if rankings from Low- and High-definition models are identical they could fall on the red dashed line. 

fig <- highres_vs_lowres |>
  group_by(prop_mpa, name, difficulty) |>
  mutate(
    highres_rank = percent_rank(percent_mpa_effect),
    lowres_rank = percent_rank(lowres_percent_mpa_effect)
  ) |> 
  arrange(highres_rank, desc(lowres_rank)) |> 
  ggplot(aes(lowres_rank,highres_rank)) + 
  geom_abline(slope = 1, intercept = 0, color = "tomato") +
    geom_point(alpha = 0.05, aes(color = depletion)) +
  facet_grid(name~fct_rev(difficulty), scales = "free") +
  scale_y_continuous(
    name = "High-definition % Rank",
    labels = scales::percent,
    limits = c(0, 1),
    oob = squish
  ) +
  scale_x_continuous(
    name = "Low-definition % Rank",
    labels = scales::percent,
    limits = c(0, 1),
    oob = squish
  ) +
  scale_color_viridis_b(name = "BAU B/B0", option = "mako", direction = 1) + 
  theme(legend.position = "top", panel.spacing.x = unit(20, "points"))

figsaver(fig)
```

The *Low-definition* model was a reliable predictor of "No Effect"
outcomes, correctly diagnosing the *High-definition* state over 90% of
the time across all complexity levels (@fig-agreement). The
*Low-definition* model was also a reliable predictor of the "Biomass
Increases & Catch Increases" scenarios. Across all complexity levels the
most poorly predicted quadrant was "Biomass Increases & Catch
Decreases", with the "true" effect in those cases most commonly being
"No Effect" (@fig-agreement).

```{r}
#| label: fig-agreement
#| fig-cap: A) Percent agreement between quadrant predicted by *Low-definition* and *High-definition* model. Percent values normalized to sum to 100% for each *Low-definition* prediction bin. Red dashed diagonal line shows 1:1 line which passes through cells that indicate agreement between *Low-definition* and *High-definition* models. Fill of the cells indicates the distribution of simulations with a given *High-definition* row. MPA sizes constrained to be between 5-40% of the seascape.
#| fig-height: 4

# B) Percent agreement values for a given Low-definition prediction. Percent of seascape in MPA restricted to between 10-40%. "No Effect" indicates that |percent change| is less than or equal to 5% for both biomass and catch.

# need to do this in a few confusing stages since there are multiple fleets per run
fleet_outcomes <- highres_vs_lowres |>
  filter(name != "biomass") |>
  pivot_longer(contains("percent"),
               names_to = "model",
               values_to = "percent_effect_catch")  |> 
  select(-name)

nature_outcomes <- highres_vs_lowres |>
  filter(name == "biomass") |>
  pivot_longer(contains("percent"),
               names_to = "model",
               values_to = "percent_effect_biomass") |> 
  select(state_id, placement_id, prop_mpa, critter, difficulty, model,percent_effect_biomass,-name)

compare_outcomes <- fleet_outcomes |>
  left_join(nature_outcomes,
            by = join_by(prop_mpa, placement_id, state_id, critter, difficulty, model)) |>
  mutate(
    quadrant = case_when(
      abs(percent_effect_biomass) < 0.05 &
        abs(percent_effect_catch) < 0.05 ~ "No Effect",
      percent_effect_biomass > 0 &
        percent_effect_catch > 0 ~ "Biomass Increases & Catch Increases",
      percent_effect_biomass > 0 &
        percent_effect_catch < 0 ~ "Biomass Increases & Catch Decreases",
      percent_effect_biomass < 0 &
        percent_effect_catch > 0 ~ "Biomass Decreases & Catch Increases",
      percent_effect_biomass < 0 &
        percent_effect_catch < 0 ~ "Biomass Decreases & Catch Decreases"
    )
  ) 

lowres_quadrants <- compare_outcomes |> 
  filter(str_detect(model, "lowres")) |> 
  rename(lowres_quadrant = quadrant)

highres_quadrants <- compare_outcomes |> 
  filter(!str_detect(model, "lowres")) |> 
  rename(highres_quadrant = quadrant) |> 
  select(-matches("percent|model"))

confusion_components <- lowres_quadrants |> 
  left_join(highres_quadrants) |> 
  filter(between(numeric_prop_mpa,0.01,1)) 

confusion_matrix <- confusion_components |> 
  left_join(highres_quadrants) |> 
  filter(between(numeric_prop_mpa,0.05,0.4)) |> 
  group_by(highres_quadrant, lowres_quadrant, difficulty) |>
  count() |>
  group_by(difficulty) |>
  mutate(
    highres_quadrant = factor(highres_quadrant),
    lowres_quadrant = factor(lowres_quadrant, levels = levels(highres_quadrant))
  ) |>
  complete(highres_quadrant, lowres_quadrant, fill = list(n = 0)) |>
  group_by(difficulty, lowres_quadrant) |>
  mutate(pn = n / sum(n),
         label_pn = percent(pn, accuracy = 1)) |> 
  group_by(highres_quadrant,difficulty) |> 
  mutate(hpn = n / sum(n))

confusion_matrix_plot <-  confusion_matrix |>
  ggplot(aes(lowres_quadrant, highres_quadrant)) +
  geom_tile(aes(fill = hpn), color = "black") +
  geom_abline(
    color = "tomato",
    slope = 1,
    intercept = 0,
    alpha = 0.5,
    linetype = 2
  ) +
  geom_text(aes(label = label_pn), size = 2) +
  facet_wrap(~ fct_rev(difficulty)) +
  # scale_fill_viridis_b() +
  scale_fill_gradient(
    low = "lightgrey",
    high = "steelblue2",
    name = "% simulations by row",
    labels = scales::percent,
    limits = c(0, 1)
  ) +
  theme(axis.text.x = element_text(
    angle = 45,
    vjust = 1,
    hjust = 1
  )) +
  scale_y_discrete(name = "High-definition Reality") +
  scale_x_discrete(name = "Low-definition Prediction") + 
  labs(title = "A") + 
  guides() + 
  theme(legend.position = "top")

agreement_plot <- confusion_matrix |> 
  filter(highres_quadrant == lowres_quadrant) |> 
  group_by(difficulty) |> 
  complete(lowres_quadrant, fill = list(pn = 0)) |>
  ggplot(aes(reorder(highres_quadrant, pn),pn, fill = fct_rev(difficulty))) + 
  geom_col(position = "dodge") + 
  scale_y_continuous(limits = c(0,1), labels = scales::percent, name = "% Agreement") +
  scale_x_discrete(name = "") +
  coord_flip() + 
  scale_fill_viridis_d(name = "Scenario") + 
  labs(title = "B")

fig <- confusion_matrix_plot# / agreement_plot

figsaver(fig)

```

### Variable Importance Scores

Depletion ($B_{bau}/B_0$) and prop_mpa (percent of seascape in MPA) were
the most important predictor for both biomass and catch by a wide
margin. Examining the partial dependency plots, $\Delta$ tended to
increase as $B_{bau}/B_0$ decreases, meaning the lower biomass was, the
more the *Low-definition* model over-estimated both biomass and catch
outcomes, all else being equal (Fig.S1). Following these variables, the
next most important group for biomass and/or catch included the MPA
placement strategy, the timing of density dependence, steepness, adult
diffusion, and the degree of correlation across species. Factors such as
larval diffusion rate (recruit_diffusion), the degree of hyperallometry
present in the fecundity of the species in question, or the type of
selectivity curve used had relatively lower variable importance scores.
Recall though that this is the importance in predicting differences
between the *High-* and *Low-definition* models, not importance in raw
outcomes themselves (@fig-all-importance).

```{r}

tmp <- highres_vs_lowres |>
  mutate(delta = pmax(-2, pmin(
    2, lowres_percent_mpa_effect - percent_mpa_effect
  )),
  sel_form = paste(fleet_alpha_sel_form,fleet_beta_sel_form, sep = "-")) |>
  filter(name == "catch", between(numeric_prop_mpa,0, 1) )|>
  select(-matches("percent|value|id|numeric|f_v_m|name|fleet"),-max_cor,-min_cor,-mean_abs_cor,-mean_cor,-spawning_season,-placement_error,-step,-contains("patchiness")) |>
  mutate(random = rnorm(length(delta))) |>
  filter(is.finite(range_cor))

tmp <- tmp[, which(map_lgl(tmp,  ~ !any(is.na(.x))))]


model_spec <-
  rand_forest(mtry = tune(),
              min_n = tune(),
              trees = tune()) %>%
  set_engine("ranger", importance = "permutation") %>%
  set_mode("regression")

model_recipe <- recipe(delta ~ ., data = tmp)

model_workflow <- 
  workflow() %>% 
  add_model(model_spec) %>% 
  add_recipe(model_recipe)

if (tune_grids | !file.exists(file.path(results_dir,"tuned_catch_grid.rds"))){

tuned_catch_grid <-
  model_workflow %>%
  tune_grid(
    resamples = vfold_cv(tmp,4),
    grid = 20,
    control = control_grid(save_pred = TRUE)
  )

write_rds(tuned_catch_grid, file.path(results_dir,"tuned_catch_grid.rds"))
} else {
  
  tuned_catch_grid <- read_rds(file.path(results_dir,"tuned_catch_grid.rds"))
  
}

best_params <- tune::select_best(tuned_catch_grid, metric = "rmse")

tuned_model_workflow <- model_workflow |> 
  finalize_workflow(best_params)

tuned_fit <- parsnip::fit(tuned_model_workflow, tmp)

catch_vip <- tuned_fit %>%
  extract_fit_parsnip() %>%
  vi(num_features = 40)


explain_fit <- DALEXtra::explain_tidymodels(tuned_fit,
                                       data = tmp, 
                              y = tmp$delta,
                                       label = "rf",
                                       colorize = TRUE,
                                       verbose = FALSE)




pdp_fit  <- model_profile(
  explain_fit,
  variables = c("depletion", "steepness", "b0", "adult_diffusion", "range_cor"),
  type = "partial",
  N = 500
)


pd_plot <- plot(
  pdp_fit,
  geom = "points",
  variables = c("depletion", "steepness", "b0", "adult_diffusion", "range_cor")
) +
  theme_minimal() +
  labs(y = "Predicted Delta")

ggsave(filename = file.path(fig_dir,"catch_pd_plot.png"), pd_plot)


# fig <- catch_vip_plot| pd_plot
# 
# figsaver(fig)

```

```{r}
#| label: fig-all-importance
#| fig-cap: Permutation-based variable importance score of included covariates on predictions of model disagreement (Low-definition minus High-definition) on biomass (red points) and catch (blue triangle) effects.

tmp <- highres_vs_lowres |>
  mutate(delta = pmax(-2, pmin(
    2, lowres_percent_mpa_effect - percent_mpa_effect
  )),
  sel_form = paste(fleet_alpha_sel_form,fleet_beta_sel_form, sep = "-")) |>
  filter(name == "biomass", between(numeric_prop_mpa,0, 1) )|>
  select(-matches("percent|value|id|numeric|f_v_m|name|fleet"),-max_cor,-min_cor,-mean_abs_cor,-mean_cor,-spawning_season,-placement_error,-step,-contains("patchiness")) |>
  mutate(random = rnorm(length(delta))) |>
  filter(is.finite(range_cor))

tmp <- tmp[, which(map_lgl(tmp,  ~ !any(is.na(.x))))]


model_spec <-
  rand_forest(mtry = tune(),
              min_n = tune(),
              trees = tune()) %>%
  set_engine("ranger", importance = "permutation") %>%
  set_mode("regression")

model_recipe <- recipe(delta ~ ., data = tmp)

model_workflow <- 
  workflow() %>% 
  add_model(model_spec) %>% 
  add_recipe(model_recipe)


if (tune_grids | !file.exists(file.path(results_dir,"tuned_biomass_grid.rds"))){

tuned_biomass_grid <-
  model_workflow %>%
  tune_grid(
    resamples = vfold_cv(tmp,4),
    grid = 10,
    control = control_grid(save_pred = TRUE)
  )

write_rds(tuned_biomass_grid, file.path(results_dir,"tuned_biomass_grid.rds"))
} else {
  
  tuned_biomass_grid <- read_rds(file.path(results_dir,"tuned_biomass_grid.rds"))
  
}

best_params <- tune::select_best(tuned_biomass_grid, metric = "rmse")

tuned_model_workflow <- model_workflow |> 
  finalize_workflow(best_params)

tuned_fit <- parsnip::fit(tuned_model_workflow, tmp)

biomass_vip <- tuned_fit %>% 
  extract_fit_parsnip() %>% 
  vi(num_features = 40) 

vip_plots <- biomass_vip |>
  mutate(outcome = "Biomass") |>
  bind_rows(catch_vip |> mutate(outcome = "Catch")) |>
  filter(Importance > max(Importance[Variable == "random"])) |> 
  ggplot(aes(reorder(Variable, Importance), Importance, color = outcome, shape = outcome)) +
  geom_hline(yintercept = 0) +
  geom_point(size = 4,alpha = 0.75) +
  coord_flip() +
  scale_x_discrete(name = "") +
  scale_y_continuous(name = "Variable Importance") +
  scale_color_brewer(name = "Outcome",palette = "Set1") + 
  scale_shape(name = "Outcome") +
  theme(legend.position = "top")


explain_fit <- DALEXtra::explain_tidymodels(tuned_fit,
                                       data = tmp, 
                              y = tmp$delta,
                                       label = "rf",
                                       colorize = TRUE,
                                       verbose = FALSE)




pdp_fit  <- model_profile(
  explain_fit,
  variables = c("depletion", "steepness", "b0", "adult_diffusion", "range_cor"),
  type = "partial",
  N = 500
)


biomass_pd_plot <- plot(
  pdp_fit,
  geom = "points",
  variables = c("depletion", "steepness", "b0", "adult_diffusion", "range_cor")
) +
  theme_minimal() +
  labs(y = "Predicted Delta")


ggsave(filename = file.path(fig_dir,"biomass_pd_plot.png"), biomass_pd_plot)
# fig <- (biomass_vip_plot| biomass_pd_plot) /  (catch_vip_plot| pd_plot)


figsaver(vip_plots)

# https://htmlpreview.github.io/?https://github.com/ModelOriented/DALEX-docs/blob/master/vignettes/DALEX_parsnip.html


```

### Implications of Differences in Predictions {#sec-imps}

```{r}
catch_max_mpa_lowres <- lowres |>
  mutate(numeric_prop_mpa = as.numeric(as.character(prop_mpa))) |>
  mutate(
    delta_yield = yield_mpa - yield_bau,
    percent_delta_yield = yield_mpa / yield_bau - 1,
    delta_biomass = b_mpa - b_bau,
    percent_delta_biomass = b_mpa / b_bau - 1
  ) |>
  group_by(state_id, prop_mpa) |>
  summarise(
    total_delta_yield = sum(delta_yield),
    percent_delta_yield = total_delta_yield / sum(yield_bau),
    percent_delta_biomass = sum(b_mpa) / sum(b_bau) - 1,
    lowres_catch_prop_mpa = unique(numeric_prop_mpa)
  ) |> 
  group_by(state_id) |> 
  filter(total_delta_yield == max(total_delta_yield)) |> 
  select(-prop_mpa)

lowres_to_highres <- highres |>
  mutate(numeric_prop_mpa = as.numeric(as.character(prop_mpa))) |>
  left_join(catch_max_mpa_lowres, by = "state_id") |>
  mutate(delta_mpa = (numeric_prop_mpa - lowres_catch_prop_mpa) ^ 2) |>
  group_by(state_id, placement_strategy) |>
  filter(delta_mpa == min(delta_mpa)) |> 
  ungroup()


fleet_part <- lowres_to_highres |> 
  filter(name %in% c("catch")) |> 
  select(-tidyselect::contains("value")) |> 
  pivot_wider(names_from= name, values_from = percent_mpa_effect)

nature_part <- lowres_to_highres |> 
  filter(name %in% c("biomass")) |> 
  select(-tidyselect::contains("value"),-fleet) |> 
  pivot_wider(names_from= name, values_from = percent_mpa_effect) |> 
  select(state_id, placement_id, critter, biomass)

lowres_to_highres_outcomes <- fleet_part |> 
  left_join(nature_part, by = c("state_id", "placement_id","critter"))

hmm <- highres_vs_lowres |> 
  left_join(catch_max_mpa_lowres, by = "state_id") |>
  mutate(delta_mpa = (numeric_prop_mpa - lowres_catch_prop_mpa) ^ 2) |>
  group_by(state_id, placement_strategy) |>
  filter(delta_mpa == min(delta_mpa)) 
# 
# hmm |> 
#   group_by(name) |> 
#   summarise(mean_delta = median(abs(pmin(2,lowres_percent_mpa_effect) - pmin(2,percent_mpa_effect))))

imp_tallies <- hmm |>
  group_by(name) |>
  summarise(
    lowres_higher = percent(mean(
      lowres_percent_mpa_effect > percent_mpa_effect
    )),
    r2 = yardstick::rsq_vec(percent_mpa_effect, lowres_percent_mpa_effect)
  )

imp_diff_tallies <- hmm |>
  group_by(name, difficulty) |>
  summarise(
    lowres_higher = percent(mean(
      lowres_percent_mpa_effect > percent_mpa_effect
    )),
    r2 = round(yardstick::rsq_vec(percent_mpa_effect, lowres_percent_mpa_effect),2)) |> 
  mutate(core = sqrt(r2))

```

The final experiment conducted was to ask, how different would the
conservation and catch outcomes be between the predictions of a *Low-*
and *High-definition* models when using the MPA size predicted by the
*Low-definition* model to maximize catch (@fig-imps2)? The conservation
outcomes of the two models were positively correlated, but across all
difficulties the *Low-definition* model could only explain roughly
`r percent(imp_tallies$r2[imp_tallies$name == "biomass"])` of the
variation in the *High-definition* biomass outcomes. The biomass R^2^
values decreased dramatically as model complexity increased. The
*Low-definition* model overestimated the the biomass effect of the MPA
in `r (imp_tallies$lowres_higher[imp_tallies$name == "biomass"])` of
simulations. At the most extreme, cases occured where the
*Low-definition* model predicted a large increase in biomass from the
catch-maximizing MPA, but the *High-definition* world actually produced
a net loss in biomass.

The catch outcomes of the two models were also positively correlated,
but across all difficulties the *Low-definition* model explained
`r percent(imp_tallies$r2[imp_tallies$name == "catch"])` of the
variation in the *High-definition* catch outcomes. The catch R^2^ values
also decreased dramatically as model complexity increased. As an example
of this variation, MPAs predicted by the *Low-definition* model to
result in an 100% increase in catch produced anything from a near 100%
loss to an over 200% gain when applied to the *High-definition* complex
world. The *Low-definition* model underestimated the catch effect of the
MPA in `r (imp_tallies$lowres_higher[imp_tallies$name == "catch"])` of
scenarios.

In total, applying the MPA size predicted by the *Low-definition* model
to maximize catch to the *High-definition* world produced correlated
outcomes for both biomass and catch. However, the *High-definition*
outcomes were generally substantially different than the
*Low-definition* predictions, and were positively biased for
conservation and negatively biased for catch.

```{r}
#| label: fig-imps2
#| fig-cap: Difference in catch and biomass outcomes predicted by the food-maximizing MPA network predicted by the *Low-definition* model (x-axis) applied to the *High-definition* world (y-axis).  Top row is biomass effect, bottom row catch, columns indicate the scenario set in question. Color indicates the biomass divided by unfished biomass (B/B0) under business as usual (BAU) conditions without any MPA.  Plotted effect sizes are capped at 200%. Red dashed line indicates 1:1 line; if rankings from Low- and High-definition models are identical they could fall on the red dashed line. Text box shows the coefficient of determination between the Low- and High definition models. 


# attach the catch maximizing low-definition MPA, then filter the dataset to match that MPA size

fig <- hmm |>
  ungroup() |> 
  ggplot() +
  geom_hline(yintercept = 0) +
  geom_vline(xintercept = 0) +
  geom_abline(slope = 1,
              intercept = 0,
              color = "tomato") +
  geom_point(aes(lowres_percent_mpa_effect, percent_mpa_effect, color = depletion),alpha = 0.75) +
  geom_richtext(data = imp_diff_tallies, aes(x = 0, y = 1.5, label = glue("R<sup>2</sup>={r2}"))) +
  facet_grid(name ~ fct_rev(difficulty)) +
  scale_y_continuous(
    name = "High-definition % MPA Effect",
    labels = scales::percent,
    limits = c(NA, 2),
    oob = squish
  ) +
  scale_x_continuous(
    name = "Low-definition % MPA Effect",
    labels = scales::percent,
    limits = c(NA, 2),
    oob = squish
  ) +
  scale_color_viridis_b(name = "BAU B/B0",
                        option = "mako",
                        direction = 1) +
  theme(legend.position = "top")

figsaver(fig)

```

## Discussion

<!--# Running parallel analyses is cumbersome. At best, alternative models perform equally well, meaning that the same results could have been achieved with far less work. At worst, alternative models show vastly different results, leaving open the complicated question of which to trust, if any. While difficult, these sorts of insights are important. For example, the IPCC... -->

<!-- MPA sizes projected to have a positive effect on catch by the -->

<!-- *Low-definition* model in some instances resulted in net reductions in -->

<!-- catch when applied to the *High-definition* model (@fig-imps2). This -->

<!-- difference is driven in part by the fact that the *Low-definition* model -->

<!-- has no way of accounting for heterogeneity in habitats and fishing -->

<!-- fleets. For example, under the *High-definition* model, protecting 30% -->

<!-- of the seascape in an MPA may protect 30% of the habitat of one species, -->

<!-- but near 100% of another species that primarily occurs in a small subset -->

<!-- of the seascape. Similarly, if an MPA is placed primarily on the habitat -->

<!-- of species *A*, but effort is then displaced onto the habitat of species -->

<!-- *B* which is not covered by the MPA, the net result can be reduction in -->

<!-- the population and catch of species *B*. -->

Models are a key part of the ecological toolbox. Recent decades have
seen an explosion in computational capabilities that have vastly
expanded the complexity and scale of social-ecological processes that
can now be simulated, and this trend will only continue. While this
expanded world of possibilities has given us the ability to take on
previously impossible tasks, as the growing spatial and temporal scale
of the processes being modeled make the data needed to validate these
models increasingly difficult to collect, we can be placed in a
challenging position of depending on models that cannot be confronted
with data in the ways which we have relied on as a field in the past.

The science of MPAs provides a clear example of this challenge. While
MPAs around the world have a vast array of policy objectives, they are
increasingly being called on not only to provide protection inside their
borders but to provide positive effects to population-level outcomes
such as total biomass and food security [@sala2021]. However, these
population processes often occur on spatial and temporal scales that
cannot be easily measured, requiring simulation modeling if estimates of
potential impacts are desired. As such, a wide range of models have been
developed to inform MPA decisions [@fulton2015]. This paper compared the
sensitivity of simulated effects of MPAs on conservation and fishery
catches to the choice of model structure, using two types of models
commonly seen in the literature.

### Implications for Tactical and Strategic Use

This paper found that the *Low-definition* models overestimated the
reduction in catches for a given size of MPA, and as a result
overestimated the increase in biomass caused by the closure. This means
that MPA projections from a *Low-definition* model may over-estimate the
losses in catches, but as a result overestimate the potential
conservation gains, if the world in fact follows the *High-definition*
dynamics. Conversely, using a *High-definition* model may result in more
optimistic catch projections but more pessimistic conservation
predictions. The two models often agreed in directional and broad
outcomes (good or bad for catch or biomass) (@fig-agreement), but had
very little correlation between the absolute values of those same
outcomes (@fig-hi-v-low, @fig-imps2).

One interesting difference was that in many cases the *High-definition*
model predicted an increase in catch from MPAs even when $B_{bau}/B_0$
was high, particularly under the more complex scenarios (@fig-hi-v-low).
This runs counter to the general MPA literature that says $B_{bau}/B_0$
has to be low to for an MPA to increase catches. The explanation here is
that this increase occurs due to a displacement of the fishing fleet
from one area onto another, potentially increasing the effort on species
found more frequently in that new area. In other words, the catch
increases in these cases are due to increased effort, not increased
biomass from a rebuilding stock.

<!-- Both models predicted that under most conditions MPAs increased biomass -->

<!-- of protected species, and that MPAs could also increase fishery catches -->

<!-- when the population would have been overfished in the absence of the -->

<!-- MPA. This is consistent with many previous surveys of the MPA modeling -->

<!-- literature. The predictions of the two models were also generally -->

<!-- correlated with each other, but often with high levels of bias and -->

<!-- variance around this relationship (@fig-hi-v-low). The biomass and -->

<!-- catch effects predicted by the *Low-* and *High-definition* models were -->

<!-- broadly consistent with each other when the catch-maximizing MPA size -->

<!-- predicted by the *Low-definition* model was applied to the -->

<!-- *High-definition* world (@fig-imps2). The two models generally agreed as -->

<!-- to the maximum potential increase in catch achievable from MPAs, with -->

<!-- the *Low-definition* model underestimating the potential catch benefits -->

<!-- of MPAs when $B_{bau}/B_0$ was low (@fig-max-catch). -->

<!-- While there were broad areas of agreement, the specific MPA effects -->

<!-- predicted by the *High-* and *Low-definition* models also differed in -->

<!-- meaningful ways. The *Low-definition* models over-estimated the amount -->

<!-- that an MPA would increase biomass in nearly every simulated scenario, -->

<!-- with the amount of positive bias generally increasing with MPA size and -->

<!-- degree of overfishing (@fig-delta). Differences in catch outcomes were -->

<!-- often large but generally not biased at lower MPA sizes, but at higher -->

<!-- MPA sizes the *Low-definition* model tended to estimate lower values of -->

<!-- catch than the *High-definition* models. However, in scenarios with -->

<!-- higher $B_{bau}/B_0$ this difference was generally because of effort -->

<!-- displacement concentrating effort in the *High-definition* world, as -->

<!-- opposed to rebuilding of biomass. As model complexity increased, the -->

<!-- variation in the *High-definition* outcomes explained by the -->

<!-- *Low-definition* predictions decreased (@fig-hi-v-low). -->

<!-- This result was driven in part by the fact that the *Low-definition* model -->

<!-- has no way of accounting for heterogeneity in habitats and fishing -->

<!-- fleets. For example, under the *High-definition* model, protecting 30% -->

<!-- of the seascape in an MPA may protect 30% of the habitat of one species, -->

<!-- but near 100% of another species that primarily occurs in a small subset -->

<!-- of the seascape. Similarly, if an MPA is placed primarily on the habitat -->

<!-- of species *A*, but effort is then displaced onto the habitat of species -->

<!-- *B* which is not covered by the MPA, the net result can be reduction in -->

<!-- the population and catch of species *B*. -->

<!-- Under the *simple* world, MPA sizes designed to maximize food security -->

<!-- under the *Low-definition* world generally at least provided $\geq$ zero -->

<!-- benefits to biomass and catch when applied to the *High-definition* -->

<!-- world, unless the MPAs were placed using the *avoid_fishing* placement -->

<!-- strategy, in which cases it was possible for both biomass and catch -->

<!-- benefits to be \< zero. However, as the states of nature became -->

<!-- increasingly complex (four species and two fleets at most, which is -->

<!-- still far less complex than many fisheries), the performance of the MPAs -->

<!-- predicted to maximize food by the *Low-definition* model deteriorated, -->

<!-- including predicted cases of MPA-mediated catch-increases in fact -->

<!-- producing net losses in catch when applied to the *High-definition* -->

<!-- world (@fig-imps2). -->

These results show that the choice of model definition can have a strong
and in cases biased effect in the specific effect sizes of MPAs on
biomass and catch. This suggests that the *Low-definition* model is not
well suited to more "tactical" applications in which specific effect
sizes or locations are emphasized [such as @sala2021], and that the
presence of biases indicates that averaging effects across many
simulations may still be produce incorrect results as measured by
absolute effect sizes.

However, users may care less about precise values and more about general
strategic insights around rankings and outcomes. These results indicate
that while they differed in absolute values, the two models generally
agreed on the relative ranking of fisheries in terms of potential
conservation efficacy of MPAs, though there was much less agreement for
on catch rankings beyond the top 25% of fisheries (@fig-ranks). Looking
even more coarsely, the *Low-definition* model often performed well at
predicting *High-definition* quadrants for the cases of "No Effect" and
"Biomass Increases & Catch Increases" (often coinciding with simulations
of extreme combinations of fishing pressure and MPA size). Still,
*Low-definition* predictions of "Biomass increases and Catch Decreases"
were incorrect over 50% of the time across all difficulty levels, with
many of the disagreements stemming from the positively-based
conservation outcomes of the *Low-definition* model.

In total, from the perspective of food security, these results indicate
that *Low-definition* models may be suitable for helping identifying
fisheries with the highest chance of increasing catches. However, even
for cases of heavy overfishing, the *High-definition* outcomes for food
security often were substantially different than the *Low-definition*
predictions, indicating that specific catch results of *Low-definition*
MPA models are not reliable.

From a conservation perspective, the potential risks of using a
*Low-definition* model in a *High-definition* world are somewhat
subtler. One risk is that under the *Low-definition* model it is
impossible for an MPA to have a negative conservation effect, whereas
negative effects are possible under the *High-definition* model, due
primarily as modeled here to the combined effects of displacement of
fishing effort and heterogeneous habitat. While we have no way of
knowing how common the states leading to the net conservation losses
predicted by the *High-definition* model are in the real world, we do
have some evidence that they can occur [@abbott2012].

That being said, while there is a real risk of MPAs causing a net
conservation loss, there are clearly more ways for MPAs to benefit
conservation than to harm it. Why then does it matter if a
*Low-definition* model tends to overestimate the conservation potential
of an MPA, particularly if the objective of an MPA is not explicitly to
also benefit food security? If the goal is to rebuild a severely
overfished species and a *Low-definition* model overestimates the
potential conservation gains of a given MPA size, while some rebuilding
may occur we may fall short of the actual goal. There is also
opportunity cost; if a manager has finite capital, real or political, to
implement a conservation action, and the potential conservation benefits
of an MPA are overestimated relative to an alternative policy, a
sub-optimal choice may be made by the manager. Similar losses in
potential conservation outcomes may occur if incorrectly specified
models are used to measure conservation gains as inputs to market based
solutions (e.g. trading conservation obligations across nations)
[@villasenor-derbez2024].

### What Traits Drive Model Differences?

Interestingly, many differences between the *Low-* and *High-definition*
models emerged in the *simple* set of scenarios (one species, one
fleet), even in the cases where habitat of the single species is
heterogeneous. This indicates that the basic dynamics of age-structure
and two-dimensional space are enough on their own to explain some of the
discrepancy between the *High-* and *Low-definition* models. The
variable importance score analysis sheds some insights into the drivers
here. Beyond core attributes of depletion and MPA size, traits such as
the placement strategy, timing of density dependence, and adult
diffusion were highly useful predictors of differences between the two
models for biomass and / or catch. After that, a range of other
variables were important but less clearly so, including the intrinsic
traits of the animal itself and the patterns of selectivity of the
fisheries (@fig-all-importance). Many of these variables have an effect
across all the simulated difficulties, explaining why differences occur
even in the *simple* scenarios. In general, it is interesting that many
of the more important variables seem to be biological in nature, rather
than fishing process variables.

It is important to note though that the variable importance score
reflects the ability of a given variable to help explain differences
between the *High-* and *Low-definition* models; a small or high
variable importance score does not indicate that a given variable will
have a small or large effect on actual MPA outcomes. For example, while
the the type of fishery selectivity had a relatively low variable
importance score, understanding the nature of selectivity can still be
important in MPA design.

### Additional Complexities

These results show that the MPA effects predicted by *Low-* and
*High-definition* models can be meaningfully different. The general
framing of this paper has been to treat the *High-definition* model as
"reality". This is clearly not inherently correct; just because a model
is more complex does not mean it is a better representation of reality.
I treat the *High-definition* model as "real" here as it is closer to
the kinds of dynamics often considered to be best practices to include
in stock assessments used in fisheries management [@punt2023], and as
the *Low-definition* model is fit to the dynamics of the
*High-definition* model. It is possible though that in some cases the
equations used in the *Low-definition* model may be a more parsimonious
representation of reality than the *High-definition* model.

<!--# We acknowledge that the simulation exercise described here is complex and difficult to fully describe in the text of a scientific paper. To that end, all materials needed to fully reproduce all of these results are publicly available at https://github.com/DanOvando/mpa-indicators-and-emulators. We encourage readers seeking to better understand the nuances of the simulation settings and process to examine the code along with the text of this paper. -->

These results assume all data from the *High-definition* model used to
fit the *Low-definition* model are perfectly measured. In addition, I
assume that the *Low-definition* model has access to the true total
biomass and catch from the population. If a *Low-definition* model was
being fit to fishery-dependent data instead that would introduce
additional errors and biases that would manifest as model
misspecification errors to the extent to which the sampling process was
not accounted for (e.g. if the data came from a dome-shaped selectivity
process that the Low-definition model cannot correct for). I also assume
that all biological parameters (e.g. natural mortality, growth rates,
habitat preferences), are time-invariant. Contact selectivity by fleet
is fixed, but the population selectivity can vary over time as the
relative effort by different fleets in space changes. These results also
only consider the simplest of economic dynamics (constant effort with or
without MPA-driven effort displacement). Other works have shown that
more complex fleet dynamics can greatly affect the outcomes of spatial
policies [@ovando2021; @cabral2019; @miller2016a]. Violations of these
assumptions used in this paper will further complicate the ability of a
model to accurately predict the effects of an MPA on conservation and
catch objectives.

Much of the MPA modeling literature has focused on simulating the
impacts of "coastal" MPAs or more specifically MPAs focused on what is
assumed to be relatively static habitats, often with relatively limited
and diffusive movement. However, efforts are in development to expand
the use of spatial management such as MPAs in more pelagic ecosystems,
such as the international agreement on the conservation and sustainable
use of marine biodiversity of areas beyond national jurisdiction
[BBNJ,see @blasiak2024]. These systems are often organized around more
spatio-temporally dynamic oceanographic features, and made up of often
highly mobile species pursued by a complex mixture of fishing fleets
representing both distant water and coastal operations. Research will be
needed to consider how best to model the impacts of MPAs in the kinds of
systems considered under the BBNJ agreement; @hampton2023 provides an
example of the many complex variables that can affect the expected
outcomes of spatial protection in pelagic systems. Further research is
needed to better establish then what models are best suited for what
questions in pelagic systems.

What I call a "High" definition model should really just be "Higher";
relative to an end-to-end ecosystem model the `marlin` modeling
framework used in the *High-definition* model is still quite simple. A
paper comparing the predictions of the `marlin` model to those of say
ATLANTIS might easily show the same level of disagreement as shown here
between the *High-* and *Low-definition* models. The purpose of this
paper is not to establish something like `marlin` as the "correct" way
to model MPAs; I instead demonstrate that the choice of model used to
simulate MPA impacts can substantially affect both the magnitude and
direction of predicted outcomes of closed areas.

### Potential Solutions for Model Selection

Prior to embarking on simulation exercises, practitioners should ideally
develop conceptual models ["modelling what to model", @minte-vera2024]
of the key processes in the system(s) they which to model, consider how
these processes might impact the goals of the simulation model (e.g.
projected MPA outcomes), and use this process to inform the degree of
model definition suitable for the task. A two-patch surplus production
model in the manner of the *Low-definition* model used here might be
suitable in a system where one fleet targets one population distributed
across a homogeneous habitat through passive diffusion. Something like
the `marlin` model used in the *High-definition* might be needed when
age-structure matters, multiple species are targeted based on a range of
economic incentives, and species are heterogeneously distributed in
space and time. In cases where there is good reason to think that
species interactions might play a strong role a more resolved ecosystem
model might be needed [@audzijonyte2019], or an individual-based fleet
model might be appropriate if fishing behavior is governed by highly
complex policy interactions [@burgess2020a].

Conditional on an appropriately selected range of modeling choices and a
clearly specified objective of the modeling exercise, how then should we
go about selecting among plausible simulation options, given that
statistical methods for model selection [@tredennick2021a] may not be
feasible? One approach is to continue the kinds of sensitivity analyses
presented here, where alternative models are compared and checked for
vastly different predictions. This can at least provide some insight
into which types of outcomes are sensitive to what kinds of model
assumptions, and what levels of model complexity seem to at least
provide consistent guidance around outcomes of interest.

A preferable approach is to solve this problem by collecting more data;
over time as we collect more data from across systems with MPAs before
and after their implementation we may be able to fit spatially-explicit
population models [@punt2019] in some systems, allowing use to
empirically measure the predictive skill of competing models. However,
many cases are likely to simply not have the data or capacity to
estimate these kinds of models. As an alternative, we can explore the
use of more easily measured traits, such as attributes of the size or
age structure of the population in space and time, as indicators of the
potential reliability of model-based predictions [@white2011]. For
example, we might ask, are there more easily measurable indices that can
serve as indicators of whether the predictions of a given model appear
to be consistent with the data that can be observed?

## Conclusions

Countries around the world are turning increasingly to spatial
protection such as MPAs to achieve societal objectives, as embodied by
the 30x30 movement. This means that more and more communities around the
world are going to be tasked with deciding how to design MPA networks to
achieve their objectives. This paper is not about the relative merits of
MPAs as conservation and/or fisheries management tools; that is a much
larger debate [@gaines2010; @hilborn2004a]. However, the lack of clear
empirical guidance (e.g. in the form of decades of robust empirical
evidence measuring the effects of large MPA networks across multiple
objectives in a diverse range of settings), means that debate and design
decisions around MPAs are often based on model outputs. These models
could range from gut feelings, heuristics such as "protect 30%" ,
two-patch biomass dynamics models, models with more resolved spatial and
social-ecological dynamics such as `marlin`, and all the way up to
end-to-end ecosystem models such as ATLANTIS. The results presented here
show that the choice of model used by a community can dramatically
affect the perceived potential and optimal design of MPA networks,
potentially causing inefficient MPA designs or at worst unintended
negative consequences for objectives such as conservation and food
security.

We have reached a point in quantitative ecology where our ability to
model can far outpace our ability to monitor. The case of MPA science
illustrates this challenge; while inside-vs-outside gradients can be
measured relatively easily [@lester2009], broader population-level
effects of MPAs on conservation and fishery outcomes can span vast areas
and take years to decades to fully evolve, constraining our ability to
empirically measure their outcomes [@ovando2021; @ferraro2018;
@nickols2019]. We must often depend on models for MPA planning without
being able to confront them with data directly. I show here that
predicted effects of MPAs on conservation and food security can be
highly sensitive to the choice of model used. While we do not yet have
an answer for what model is suitable for what question, I recommend that
practitioners using models to inform MPA science and management directly
consider this challenge and provide justification for why they believe
their choice of modeling framework is appropriate to the question at
hand. While computational efficiency clearly plays a role, I suggest
that authors should not make this the sole basis for their choice. MPAs
can play an important role in the conservation and management of marine
social-ecological systems, but we should acknowledge that our ability to
accurately predict these effects depends largely on the suitability of
modeling assumptions that may be difficult to directly test.

## References

::: {#refs}
:::

## Statements and Declarations

### Acknowledgements

Thanks to two anonymous reviewers for helpful comments throughout this
process. This paper was greatly aided by discussions with participants
of the Area-Based Management working group of the "Helping science
advance policy in ocean conservation" workshop convened by the The
Center for Sustaining Seafood at the University of Washington, March 2-3
2024.

### Funding

The authors declare that no funds, grants, or other support were
received for the preparation of this manuscript.

### Competing Interests

The authors have no relevant competing interests to disclose.

### Author Contributions

All analyses performed by Daniel Ovando. Manuscript written by Daniel
Ovando.
